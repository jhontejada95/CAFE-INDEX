{
	"id": "88b7ffd5545623e71fdadaaa2340e1e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CafeIndex {\n    struct PriceData {\n        string id;\n        uint256 timestamp;\n        uint256 price;  // En centavos\n        address submitter;\n    }\n\n    // Almacenamiento optimizado usando mapping y contador\n    mapping(uint256 => PriceData) public prices;\n    mapping(bytes32 => bool) public priceExists;\n    uint256 public priceCount;\n\n    event PriceSubmitted(string id, uint256 timestamp, uint256 price, address indexed submitter);\n\n    /**\n     * @dev Envía un nuevo precio de café\n     * @param id Identificador único\n     * @param timestamp Marca de tiempo (epoch)\n     * @param price Precio en centavos\n     */\n    function submitPrice(string memory id, uint256 timestamp, uint256 price) public {\n        bytes32 idHash = keccak256(abi.encodePacked(id));\n        require(!priceExists[idHash], \"ID ya existe\");\n\n        prices[priceCount] = PriceData({\n            id: id,\n            timestamp: timestamp,\n            price: price,\n            submitter: msg.sender\n        });\n\n        priceExists[idHash] = true;\n        emit PriceSubmitted(id, timestamp, price, msg.sender);\n        priceCount++;\n    }\n\n    /**\n     * @dev Obtiene un precio por índice\n     */\n    function getPriceByIndex(uint256 index) public view returns (\n        string memory id,\n        uint256 timestamp,\n        uint256 price,\n        address submitter\n    ) {\n        require(index < priceCount, \"Index out of range\");\n        PriceData memory data = prices[index];\n        return (data.id, data.timestamp, data.price, data.submitter);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/test.sol": {
				"CafeIndex": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "id",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "submitter",
									"type": "address"
								}
							],
							"name": "PriceSubmitted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getPriceByIndex",
							"outputs": [
								{
									"internalType": "string",
									"name": "id",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "submitter",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "priceExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "prices",
							"outputs": [
								{
									"internalType": "string",
									"name": "id",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "submitter",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "id",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "submitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"PriceSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPriceByIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"priceExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"submitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceByIndex(uint256)\":{\"details\":\"Obtiene un precio por \\u00edndice\"},\"submitPrice(string,uint256,uint256)\":{\"details\":\"Env\\u00eda un nuevo precio de caf\\u00e9\",\"params\":{\"id\":\"Identificador \\u00fanico\",\"price\":\"Precio en centavos\",\"timestamp\":\"Marca de tiempo (epoch)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"CafeIndex\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0x7af3eeff028416e8cd54b22a314a1efe1ab55c3d940691ccdae4babb940a905b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6382bb14217d2c7ccd70c114a80f7f6da84981104471dea3910dbd37d88fced0\",\"dweb:/ipfs/QmbicBSbv2UkXpzBn8uuQ1pqcixZfWs23dYTk4mi7Xz7rH\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getPriceByIndex(uint256)": {
								"details": "Obtiene un precio por índice"
							},
							"submitPrice(string,uint256,uint256)": {
								"details": "Envía un nuevo precio de café",
								"params": {
									"id": "Identificador único",
									"price": "Precio en centavos",
									"timestamp": "Marca de tiempo (epoch)"
								}
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/test.sol:CafeIndex",
								"label": "prices",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(PriceData)10_storage)"
							},
							{
								"astId": 19,
								"contract": "contracts/test.sol:CafeIndex",
								"label": "priceExists",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 21,
								"contract": "contracts/test.sol:CafeIndex",
								"label": "priceCount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(PriceData)10_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CafeIndex.PriceData)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceData)10_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PriceData)10_storage": {
								"encoding": "inplace",
								"label": "struct CafeIndex.PriceData",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/test.sol:CafeIndex",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 5,
										"contract": "contracts/test.sol:CafeIndex",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "contracts/test.sol:CafeIndex",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "contracts/test.sol:CafeIndex",
										"label": "submitter",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 32/65584 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 9658\n// Code size = 31271 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20020]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20020] = a1\n    42: a1 = 0x20030\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20030\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 40)\n   420: sp = sp + 0xffffffffffffffa0\n   423: u64 [sp + 0x58] = ra\n   426: u64 [sp + 0x50] = s0\n   429: u64 [sp + 0x48] = s1\n   432: s0 = sp + 0x60\n   435: sp = sp & 0xffffffffffffffe0\n   438: s1 = a0\n   440: a0 = u64 [a2 + 0x18]\n   443: a3 = u64 [a2 + 0x10]\n   446: a4 = u64 [a2 + 0x8]\n   449: a2 = u64 [a2]\n   451: u64 [sp + 0x18] = a0\n   454: u64 [sp + 0x10] = a3\n   457: u64 [sp + 0x8] = a4\n   460: u64 [sp] = a2\n   462: u64 [sp + 56] = 0\n   465: u64 [sp + 48] = 0\n   468: u64 [sp + 40] = 0\n   471: u64 [sp + 32] = 0\n   474: u32 [sp + 64] = 0x20\n   478: a0 = 0\n   480: i32 a1 = sp + 0\n   482: i32 a3 = sp + 0x20\n   485: i32 a4 = sp + 0x40\n   488: a2 = 0xffffffffffffffff\n   491: ecalli 5 // 'get_storage'\n   493: a0 = u64 [sp + 0x38]\n   496: a1 = u64 [sp + 0x30]\n   499: a2 = u64 [sp + 0x28]\n   502: a3 = u64 [sp + 0x20]\n   505: u64 [s1 + 0x18] = a0\n   508: u64 [s1 + 0x10] = a1\n   511: u64 [s1 + 0x8] = a2\n   514: u64 [s1] = a3\n   516: sp = s0 + 0xffffffffffffffa0\n   519: ra = u64 [sp + 0x58]\n   522: s0 = u64 [sp + 0x50]\n   525: s1 = u64 [sp + 0x48]\n   528: sp = sp + 0x60\n   531: ret\n      : @26 [@dyn 2] (gas: 34)\n   533: a1 = reverse s1\n   535: a2 = u64 [sp]\n   537: a2 = reverse a2\n   539: a3 = u64 [sp + 0x8]\n   542: a3 = reverse a3\n   544: a4 = u64 [sp + 0x10]\n   547: a4 = reverse a4\n   549: u64 [sp + 0x58] = a4\n   552: u64 [sp + 0x50] = a3\n   555: u64 [sp + 0x48] = a2\n   558: u64 [sp + 0x40] = a1\n   561: a1 = u64 [sp + 0x18]\n   564: a1 = reverse a1\n   566: a2 = u64 [sp + 0x20]\n   569: a2 = reverse a2\n   571: a3 = u64 [sp + 0x28]\n   574: a3 = reverse a3\n   576: a4 = u64 [sp + 0x38]\n   579: a4 = reverse a4\n   581: u64 [sp + 0x78] = a4\n   584: u64 [sp + 0x70] = a3\n   587: u64 [sp + 0x68] = a2\n   590: u64 [sp + 0x60] = a1\n   593: i32 a2 = a0 + 0\n   595: i32 a0 = sp + 0x40\n   598: a1 = 0x2\n   601: a3 = u64 [sp + 0x30]\n   604: ecalli 4 // 'deposit_event'\n   606: sp = s0 + 0xffffffffffffff60\n   610: ra = u64 [sp + 0x98]\n   614: s0 = u64 [sp + 0x90]\n   618: s1 = u64 [sp + 0x88]\n   622: sp = sp + 0xa0\n   626: ret\n      : @27 (gas: 6)\n   628: sp = sp + 0xfffffffffffffff0\n   631: u64 [sp + 0x8] = ra\n   634: u64 [sp] = s0\n   636: s0 = a0 & 0x1\n   639: ecalli 2 // 'call_data_size'\n   641: fallthrough\n      : @28 (gas: 2)\n   642: u32 [0x20024] = a0\n   647: jump @30 if s0 == 0\n      : @29 (gas: 1)\n   650: ra = 6, jump @31\n      : @30 [@dyn 3] (gas: 1)\n   654: ra = 8, jump @42\n      : @31 [@dyn 4] (gas: 8)\n   659: sp = sp + 0xffffffffffffffc0\n   662: u64 [sp + 0x38] = ra\n   665: u64 [sp + 0x30] = s0\n   668: s0 = sp + 0x40\n   671: sp = sp & 0xffffffffffffffe0\n   674: a0 = 0x40\n   677: a1 = 0x20\n   680: ra = 10, jump @0\n      : @32 [@dyn 5] (gas: 39)\n   685: u8 [a0 + 31] = 0x80\n   690: u8 [a0 + 30] = 0\n   693: u8 [a0 + 29] = 0\n   696: u8 [a0 + 28] = 0\n   699: u8 [a0 + 27] = 0\n   702: u8 [a0 + 26] = 0\n   705: u8 [a0 + 25] = 0\n   708: u8 [a0 + 24] = 0\n   711: u8 [a0 + 23] = 0\n   714: u8 [a0 + 22] = 0\n   717: u8 [a0 + 21] = 0\n   720: u8 [a0 + 20] = 0\n   723: u8 [a0 + 19] = 0\n   726: u8 [a0 + 18] = 0\n   729: u8 [a0 + 17] = 0\n   732: u8 [a0 + 16] = 0\n   735: u8 [a0 + 15] = 0\n   738: u8 [a0 + 14] = 0\n   741: u8 [a0 + 13] = 0\n   744: u8 [a0 + 12] = 0\n   747: u8 [a0 + 11] = 0\n   750: u8 [a0 + 10] = 0\n   753: u8 [a0 + 9] = 0\n   756: u8 [a0 + 8] = 0\n   759: u8 [a0 + 7] = 0\n   762: u8 [a0 + 6] = 0\n   765: u8 [a0 + 5] = 0\n   768: u8 [a0 + 4] = 0\n   771: u8 [a0 + 3] = 0\n   774: u8 [a0 + 2] = 0\n   777: u8 [a0 + 1] = 0\n   780: u8 [a0 + 0] = 0\n   782: u64 [sp + 24] = 0\n   785: u64 [sp + 0] = 0\n   787: u64 [sp + 8] = 0\n   790: u64 [sp + 16] = 0\n   793: i32 a0 = sp + 0\n   795: ecalli 10 // 'value_transferred'\n   797: fallthrough\n      : @33 (gas: 8)\n   798: a0 = u64 [sp + 0x10]\n   801: a1 = u64 [sp + 0x18]\n   804: a2 = u64 [sp + 0x8]\n   807: a3 = u64 [sp]\n   809: a1 = a1 | a2\n   812: a0 = a0 | a3\n   815: a0 = a0 | a1\n   818: jump @36 if a0 == 0\n      : @34 (gas: 3)\n   821: a0 = 0\n   823: a1 = 0\n   825: ra = 12, jump @0\n      : @35 [@dyn 6] (gas: 5)\n   830: i32 a1 = a0 + 0\n   832: a0 = 0x1\n   835: a2 = 0\n   837: ecalli 7 // 'seal_return'\n   839: fallthrough\n      : @36 (gas: 3)\n   840: a0 = 0x80\n   844: a1 = 0\n   846: ra = 14, jump @0\n      : @37 [@dyn 7] (gas: 5)\n   851: i32 a0 = a0 + 0\n   853: a1 = 0\n   855: a2 = 0\n   857: ecalli 0 // 'call_data_copy'\n   858: fallthrough\n      : @38 (gas: 2)\n   859: a1 = i32 [0x20028]\n   864: jump @40 if a1 == 0\n      : @39 (gas: 4)\n   867: a0 = 0x30030\n   872: i32 a0 = a0 + 0\n   874: ecalli 8 // 'set_immutable_data'\n   876: fallthrough\n      : @40 (gas: 3)\n   877: a0 = 0x80\n   881: a1 = 0\n   883: ra = 16, jump @0\n      : @41 [@dyn 8] (gas: 6)\n   888: i32 a1 = a0 + 0\n   890: a0 = 0\n   892: a2 = 0\n   894: ra = 0x12\n   897: ecalli 7 // 'seal_return'\n   899: fallthrough\n      : @42 [@dyn 9] (gas: 11)\n   900: sp = sp + 0xfffffffffffff808\n   904: u64 [sp + 0x7f0] = ra\n   908: u64 [sp + 0x7e8] = s0\n   912: u64 [sp + 0x7e0] = s1\n   916: s0 = sp + 0x7f8\n   920: sp = sp + 0xfffffffffffffa38\n   924: sp = sp & 0xffffffffffffffe0\n   927: s1 = sp\n   929: a0 = 0x40\n   932: a1 = 0x20\n   935: ra = 20, jump @0\n      : @43 [@dyn 10] (gas: 36)\n   940: u8 [a0 + 31] = 0x80\n   945: u8 [a0 + 30] = 0\n   948: u8 [a0 + 29] = 0\n   951: u8 [a0 + 28] = 0\n   954: u8 [a0 + 27] = 0\n   957: u8 [a0 + 26] = 0\n   960: u8 [a0 + 25] = 0\n   963: u8 [a0 + 24] = 0\n   966: u8 [a0 + 23] = 0\n   969: u8 [a0 + 22] = 0\n   972: u8 [a0 + 21] = 0\n   975: u8 [a0 + 20] = 0\n   978: u8 [a0 + 19] = 0\n   981: u8 [a0 + 18] = 0\n   984: u8 [a0 + 17] = 0\n   987: u8 [a0 + 16] = 0\n   990: u8 [a0 + 15] = 0\n   993: u8 [a0 + 14] = 0\n   996: u8 [a0 + 13] = 0\n   999: u8 [a0 + 12] = 0\n  1002: u8 [a0 + 11] = 0\n  1005: u8 [a0 + 10] = 0\n  1008: u8 [a0 + 9] = 0\n  1011: u8 [a0 + 8] = 0\n  1014: u8 [a0 + 7] = 0\n  1017: u8 [a0 + 3] = 0\n  1020: a1 = 0x20024\n  1025: u8 [a0 + 2] = 0\n  1028: u8 [a0 + 1] = 0\n  1031: u8 [a0 + 0] = 0\n  1033: u64 [s1 + 0x4f8] = a1\n  1037: a1 = i32 [0x20024]\n  1042: u8 [a0 + 6] = 0\n  1045: u8 [a0 + 5] = 0\n  1048: u8 [a0 + 4] = 0\n  1051: jump @45 if a1 >=u 4\n      : @44 (gas: 1)\n  1055: jump @289\n      : @45 (gas: 6)\n  1058: a0 = s1 + 0x1000\n  1062: i32 a0 = a0 + 0xfffffffffffffc00\n  1066: a1 = 0\n  1068: ra = 0x16\n  1071: ecalli 1 // 'call_data_load'\n  1073: fallthrough\n      : @46 [@dyn 11] (gas: 4)\n  1074: a0 = s1 + 0x1000\n  1078: a0 = i32 [a0 + 0xfffffffffffffc1c]\n  1082: a2 = 0x1c5bf88\n  1088: jump @87 if a2 >=s a0\n      : @47 (gas: 1)\n  1092: jump @49 if a0 != 29736841\n      : @48 (gas: 1)\n  1099: jump @107\n      : @49 (gas: 1)\n  1102: jump @51 if a0 == 288009868\n      : @50 (gas: 1)\n  1109: jump @198\n      : @51 (gas: 11)\n  1112: a0 = sp + 0xffffffffffffffe0\n  1115: a0 = a0 & 0xffffffffffffffe0\n  1118: u64 [s1 + 0x4f0] = a0\n  1122: sp = a0\n  1124: u64 [a0 + 24] = 0\n  1127: u64 [a0 + 16] = 0\n  1130: u64 [a0 + 8] = 0\n  1133: u64 [a0 + 0] = 0\n  1135: i32 a0 = a0 + 0\n  1137: ecalli 10 // 'value_transferred'\n  1139: fallthrough\n      : @52 (gas: 9)\n  1140: a3 = u64 [s1 + 0x4f0]\n  1144: a0 = u64 [a3 + 0x10]\n  1147: a1 = u64 [a3 + 0x18]\n  1150: a2 = u64 [a3 + 0x8]\n  1153: a3 = u64 [a3]\n  1155: a1 = a1 | a2\n  1158: a0 = a0 | a3\n  1161: a0 = a0 | a1\n  1164: jump @54 if a0 == 0\n      : @53 (gas: 1)\n  1167: jump @289\n      : @54 (gas: 3)\n  1170: a0 = u64 [s1 + 0x4f8]\n  1174: a0 = i32 [a0]\n  1176: jump @56 if a0 >u 35\n      : @55 (gas: 1)\n  1180: jump @289\n      : @56 (gas: 33)\n  1183: a0 = s1 + 0x1000\n  1187: i32 a0 = a0 + 0xfffffffffffffce0\n  1191: a1 = 0x4\n  1194: ecalli 1 // 'call_data_load'\n  1196: a1 = s1 + 0x7ff\n  1200: a1 = a1 + 0x479\n  1204: a0 = u64 [a1 + 0x80]\n  1208: u64 [s1 + 0x4e0] = a0\n  1212: a0 = u64 [a1 + 0x78]\n  1215: u64 [s1 + 0x4e8] = a0\n  1219: a0 = u64 [a1 + 0x70]\n  1222: u64 [s1 + 0x4f0] = a0\n  1226: a0 = u64 [a1 + 0x68]\n  1229: u64 [s1 + 0x4f8] = a0\n  1233: u64 [a1 + 224] = 0\n  1237: u64 [a1 + 216] = 0\n  1241: u64 [a1 + 208] = 0\n  1245: u64 [a1 + 200] = 0x2\n  1250: u64 [a1 + 256] = 0\n  1254: u64 [a1 + 248] = 0\n  1258: u64 [a1 + 240] = 0\n  1262: u64 [a1 + 232] = 0\n  1266: u32 [a1 + 264] = 0x20\n  1271: a0 = s1 + 0x1000\n  1275: i32 a1 = a0 + 0xfffffffffffffd40\n  1279: a0 = s1 + 0x1000\n  1283: i32 a3 = a0 + 0xfffffffffffffd60\n  1287: a0 = s1 + 0x1000\n  1291: i32 a4 = a0 + 0xfffffffffffffd80\n  1295: a2 = 0xffffffffffffffff\n  1298: a0 = 0\n  1300: ecalli 5 // 'get_storage'\n  1302: fallthrough\n      : @57 (gas: 22)\n  1303: a3 = s1 + 0x7ff\n  1307: a3 = a3 + 0x479\n  1311: a0 = u64 [a3 + 0xf0]\n  1315: a1 = u64 [a3 + 0xe8]\n  1319: a2 = u64 [a3 + 0xf8]\n  1323: a3 = u64 [a3 + 0x100]\n  1327: a5 = u64 [s1 + 0x4f0]\n  1331: a4 = a5 ^ a0\n  1334: a0 = a5 <u a0\n  1337: a5 = u64 [s1 + 0x4f8]\n  1341: a1 = a5 <u a1\n  1344: a1 = a0 if a4 != 0\n  1347: a4 = u64 [s1 + 0x4e0]\n  1351: a0 = a4 ^ a3\n  1354: a3 = a4 <u a3\n  1357: a5 = u64 [s1 + 0x4e8]\n  1361: a4 = a5 <u a2\n  1364: a4 = a3 if a0 != 0\n  1367: a2 = a2 ^ a5\n  1370: a0 = a0 | a2\n  1373: a1 = a4 if a0 != 0\n  1376: jump @59 if a1 != 0\n      : @58 (gas: 1)\n  1379: jump @223\n      : @59 (gas: 3)\n  1382: a1 = 0x20\n  1385: a0 = 0\n  1387: ra = 24, jump @0\n      : @60 [@dyn 12] (gas: 71)\n  1392: a1 = u64 [s1 + 0x4e0]\n  1396: a1 = reverse a1\n  1398: a2 = u64 [s1 + 0x4e8]\n  1402: a2 = reverse a2\n  1404: a3 = u64 [s1 + 0x4f0]\n  1408: a3 = reverse a3\n  1410: a4 = u64 [s1 + 0x4f8]\n  1414: a4 = reverse a4\n  1416: u8 [a0 + 0x18] = a4\n  1419: a5 = a4 >> 0x38\n  1422: u8 [a0 + 0x1f] = a5\n  1425: a5 = a4 >> 0x30\n  1428: u8 [a0 + 0x1e] = a5\n  1431: a5 = a4 >> 0x28\n  1434: u8 [a0 + 0x1d] = a5\n  1437: a5 = a4 >> 0x20\n  1440: u8 [a0 + 0x1c] = a5\n  1443: a5 = a4 >> 0x18\n  1446: u8 [a0 + 0x1b] = a5\n  1449: a5 = a4 >> 0x10\n  1452: u8 [a0 + 0x1a] = a5\n  1455: a4 = a4 >> 0x8\n  1458: u8 [a0 + 0x19] = a4\n  1461: u8 [a0 + 0x10] = a3\n  1464: a4 = a3 >> 0x38\n  1467: u8 [a0 + 0x17] = a4\n  1470: a4 = a3 >> 0x30\n  1473: u8 [a0 + 0x16] = a4\n  1476: a4 = a3 >> 0x28\n  1479: u8 [a0 + 0x15] = a4\n  1482: a4 = a3 >> 0x20\n  1485: u8 [a0 + 0x14] = a4\n  1488: a4 = a3 >> 0x18\n  1491: u8 [a0 + 0x13] = a4\n  1494: a4 = a3 >> 0x10\n  1497: u8 [a0 + 0x12] = a4\n  1500: a3 = a3 >> 0x8\n  1503: u8 [a0 + 0x11] = a3\n  1506: u8 [a0 + 0x8] = a2\n  1509: a3 = a2 >> 0x38\n  1512: u8 [a0 + 0xf] = a3\n  1515: a3 = a2 >> 0x30\n  1518: u8 [a0 + 0xe] = a3\n  1521: a3 = a2 >> 0x28\n  1524: u8 [a0 + 0xd] = a3\n  1527: a3 = a2 >> 0x20\n  1530: u8 [a0 + 0xc] = a3\n  1533: a3 = a2 >> 0x18\n  1536: u8 [a0 + 0xb] = a3\n  1539: a3 = a2 >> 0x10\n  1542: u8 [a0 + 0xa] = a3\n  1545: a2 = a2 >> 0x8\n  1548: u8 [a0 + 0x9] = a2\n  1551: u8 [a0] = a1\n  1553: a2 = a1 >> 0x38\n  1556: u8 [a0 + 0x7] = a2\n  1559: a2 = a1 >> 0x30\n  1562: u8 [a0 + 0x6] = a2\n  1565: a2 = a1 >> 0x28\n  1568: u8 [a0 + 0x5] = a2\n  1571: a2 = a1 >> 0x20\n  1574: u8 [a0 + 0x4] = a2\n  1577: a2 = a1 >> 0x18\n  1580: u8 [a0 + 0x3] = a2\n  1583: a2 = a1 >> 0x10\n  1586: u8 [a0 + 0x2] = a2\n  1589: a1 = a1 >> 0x8\n  1592: u8 [a0 + 0x1] = a1\n  1595: a0 = 0x20\n  1598: a1 = 0x20\n  1601: ra = 26, jump @0\n      : @61 [@dyn 13] (gas: 35)\n  1606: u8 [a0 + 31] = 0\n  1609: u8 [a0 + 30] = 0\n  1612: u8 [a0 + 29] = 0\n  1615: u8 [a0 + 28] = 0\n  1618: u8 [a0 + 27] = 0\n  1621: u8 [a0 + 26] = 0\n  1624: u8 [a0 + 25] = 0\n  1627: u8 [a0 + 24] = 0\n  1630: u8 [a0 + 23] = 0\n  1633: u8 [a0 + 22] = 0\n  1636: u8 [a0 + 21] = 0\n  1639: u8 [a0 + 20] = 0\n  1642: u8 [a0 + 19] = 0\n  1645: u8 [a0 + 18] = 0\n  1648: u8 [a0 + 17] = 0\n  1651: u8 [a0 + 16] = 0\n  1654: u8 [a0 + 15] = 0\n  1657: u8 [a0 + 14] = 0\n  1660: u8 [a0 + 13] = 0\n  1663: u8 [a0 + 12] = 0\n  1666: u8 [a0 + 11] = 0\n  1669: u8 [a0 + 10] = 0\n  1672: u8 [a0 + 9] = 0\n  1675: u8 [a0 + 8] = 0\n  1678: u8 [a0 + 7] = 0\n  1681: u8 [a0 + 6] = 0\n  1684: u8 [a0 + 5] = 0\n  1687: u8 [a0 + 4] = 0\n  1690: u8 [a0 + 3] = 0\n  1693: u8 [a0 + 2] = 0\n  1696: u8 [a0 + 1] = 0\n  1699: u8 [a0 + 0] = 0\n  1701: a1 = 0x40\n  1704: a0 = 0\n  1706: ra = 28, jump @0\n      : @62 [@dyn 14] (gas: 20)\n  1711: a1 = sp + 0xffffffffffffffe0\n  1714: a1 = a1 & 0xffffffffffffffe0\n  1717: u64 [s1 + 0x4f8] = a1\n  1721: sp = a1\n  1723: i32 a0 = a0 + 0\n  1725: i32 a2 = a1 + 0\n  1727: a1 = 0x40\n  1730: ecalli 6 // 'hash_keccak_256'\n  1732: a1 = u64 [s1 + 0x4f8]\n  1736: a0 = u64 [a1 + 0x18]\n  1739: u64 [s1 + 0x4d0] = a0\n  1743: a0 = u64 [a1 + 0x10]\n  1746: u64 [s1 + 0x4d8] = a0\n  1750: a0 = u64 [a1 + 0x8]\n  1753: u64 [s1 + 0x4e0] = a0\n  1757: a0 = u64 [a1]\n  1759: u64 [s1 + 0x4e8] = a0\n  1763: a0 = 0x40\n  1766: a1 = 0x20\n  1769: ra = 30, jump @0\n      : @63 [@dyn 15] (gas: 100)\n  1774: a1 = u8 [a0 + 0x9]\n  1777: a2 = u8 [a0 + 0x8]\n  1780: a3 = u8 [a0 + 0xa]\n  1783: a4 = u8 [a0 + 0xb]\n  1786: a1 = a1 << 0x8\n  1789: a1 = a1 | a2\n  1792: a3 = a3 << 0x10\n  1795: a4 = a4 << 0x18\n  1798: a3 = a3 | a4\n  1801: a1 = a1 | a3\n  1804: a2 = u8 [a0 + 0xd]\n  1807: a3 = u8 [a0 + 0xc]\n  1810: a4 = u8 [a0 + 0xe]\n  1813: a5 = u8 [a0 + 0xf]\n  1816: a2 = a2 << 0x8\n  1819: a2 = a2 | a3\n  1822: a4 = a4 << 0x10\n  1825: a5 = a5 << 0x18\n  1828: a4 = a4 | a5\n  1831: a2 = a2 | a4\n  1834: a2 = a2 << 0x20\n  1837: t0 = a2 | a1\n  1840: a2 = u8 [a0 + 0x1]\n  1843: a3 = u8 [a0]\n  1845: a4 = u8 [a0 + 0x2]\n  1848: a5 = u8 [a0 + 0x3]\n  1851: a2 = a2 << 0x8\n  1854: a2 = a2 | a3\n  1857: a4 = a4 << 0x10\n  1860: a5 = a5 << 0x18\n  1863: a4 = a4 | a5\n  1866: a2 = a2 | a4\n  1869: a3 = u8 [a0 + 0x5]\n  1872: a4 = u8 [a0 + 0x4]\n  1875: a5 = u8 [a0 + 0x6]\n  1878: a1 = u8 [a0 + 0x7]\n  1881: a3 = a3 << 0x8\n  1884: a3 = a3 | a4\n  1887: a5 = a5 << 0x10\n  1890: a1 = a1 << 0x18\n  1893: a1 = a1 | a5\n  1896: a1 = a1 | a3\n  1899: a1 = a1 << 0x20\n  1902: t1 = a1 | a2\n  1905: a1 = u8 [a0 + 0x19]\n  1908: a3 = u8 [a0 + 0x18]\n  1911: a4 = u8 [a0 + 0x1a]\n  1914: a5 = u8 [a0 + 0x1b]\n  1917: a1 = a1 << 0x8\n  1920: a1 = a1 | a3\n  1923: a4 = a4 << 0x10\n  1926: a5 = a5 << 0x18\n  1929: a4 = a4 | a5\n  1932: a1 = a1 | a4\n  1935: a3 = u8 [a0 + 0x1d]\n  1938: a4 = u8 [a0 + 0x1c]\n  1941: a5 = u8 [a0 + 0x1e]\n  1944: a2 = u8 [a0 + 0x1f]\n  1947: a3 = a3 << 0x8\n  1950: a3 = a3 | a4\n  1953: a5 = a5 << 0x10\n  1956: a2 = a2 << 0x18\n  1959: a2 = a2 | a5\n  1962: a2 = a2 | a3\n  1965: a2 = a2 << 0x20\n  1968: a3 = a2 | a1\n  1971: a1 = u8 [a0 + 0x11]\n  1974: a2 = u8 [a0 + 0x10]\n  1977: a4 = u8 [a0 + 0x12]\n  1980: a5 = u8 [a0 + 0x13]\n  1983: a1 = a1 << 0x8\n  1986: a1 = a1 | a2\n  1989: a4 = a4 << 0x10\n  1992: a5 = a5 << 0x18\n  1995: a4 = a4 | a5\n  1998: a1 = a1 | a4\n  2001: a2 = u8 [a0 + 0x15]\n  2004: a4 = u8 [a0 + 0x14]\n  2007: a5 = u8 [a0 + 0x16]\n  2010: a0 = u8 [a0 + 0x17]\n  2013: a2 = a2 << 0x8\n  2016: a2 = a2 | a4\n  2019: a5 = a5 << 0x10\n  2022: a0 = a0 << 0x18\n  2025: a0 = a0 | a5\n  2028: a0 = a0 | a2\n  2031: a0 = a0 << 0x20\n  2034: a0 = a0 | a1\n  2037: a1 = reverse a0\n  2039: a0 = reverse a3\n  2041: a4 = reverse t1\n  2043: a3 = reverse t0\n  2045: a2 = a3 | a4\n  2048: u64 [s1 + 0x4f8] = a0\n  2052: a0 = a0 <u 0xffffffffffffff80\n  2055: u64 [s1 + 0x4f0] = a1\n  2059: a0 = 0 if a1 != 0\n  2061: u64 [s1 + 0x498] = a2\n  2065: a0 = 0 if a2 != 0\n  2067: jump @65 if a0 != 0\n      : @64 (gas: 1)\n  2070: jump @300\n      : @65 (gas: 31)\n  2073: a0 = u64 [s1 + 0x4e8]\n  2077: a0 = reverse a0\n  2079: u64 [s1 + 0x4e8] = a0\n  2083: a0 = u64 [s1 + 0x4e0]\n  2087: a0 = reverse a0\n  2089: u64 [s1 + 0x4e0] = a0\n  2093: a0 = u64 [s1 + 0x4d8]\n  2097: a0 = reverse a0\n  2099: u64 [s1 + 0x4d8] = a0\n  2103: a0 = u64 [s1 + 0x4d0]\n  2107: a0 = reverse a0\n  2109: u64 [s1 + 0x4d0] = a0\n  2113: a0 = u64 [s1 + 0x4f8]\n  2117: a1 = a0 + 0x80\n  2121: u64 [s1 + 0x4b8] = a1\n  2125: a0 = a1 <u a0\n  2128: a1 = u64 [s1 + 0x4f0]\n  2132: a2 = a1 + a0\n  2135: u64 [s1 + 0x4b0] = a2\n  2139: a1 = a2 <u a1\n  2142: a1 = a0 if a0 == 0\n  2145: a1 = a1 + a3\n  2148: u64 [s1 + 0x4a8] = a1\n  2152: a0 = a1 <u a3\n  2155: a0 = a0 + a4\n  2158: u64 [s1 + 0x4a0] = a0\n  2162: a0 = 0x40\n  2165: a1 = 0x20\n  2168: u64 [s1 + 0x4c0] = a3\n  2172: u64 [s1 + 0x4c8] = a4\n  2176: ra = 32, jump @0\n      : @66 [@dyn 16] (gas: 85)\n  2181: a1 = u64 [s1 + 0x4a0]\n  2185: a1 = reverse a1\n  2187: a2 = u64 [s1 + 0x4a8]\n  2191: a2 = reverse a2\n  2193: a3 = u64 [s1 + 0x4b0]\n  2197: a3 = reverse a3\n  2199: a4 = u64 [s1 + 0x4b8]\n  2203: a4 = reverse a4\n  2205: u8 [a0 + 0x18] = a4\n  2208: a5 = a4 >> 0x38\n  2211: u8 [a0 + 0x1f] = a5\n  2214: a5 = a4 >> 0x30\n  2217: u8 [a0 + 0x1e] = a5\n  2220: a5 = a4 >> 0x28\n  2223: u8 [a0 + 0x1d] = a5\n  2226: a5 = a4 >> 0x20\n  2229: u8 [a0 + 0x1c] = a5\n  2232: a5 = a4 >> 0x18\n  2235: u8 [a0 + 0x1b] = a5\n  2238: a5 = a4 >> 0x10\n  2241: u8 [a0 + 0x1a] = a5\n  2244: a4 = a4 >> 0x8\n  2247: u8 [a0 + 0x19] = a4\n  2250: u8 [a0 + 0x10] = a3\n  2253: a4 = a3 >> 0x38\n  2256: u8 [a0 + 0x17] = a4\n  2259: a4 = a3 >> 0x30\n  2262: u8 [a0 + 0x16] = a4\n  2265: a4 = a3 >> 0x28\n  2268: u8 [a0 + 0x15] = a4\n  2271: a4 = a3 >> 0x20\n  2274: u8 [a0 + 0x14] = a4\n  2277: a4 = a3 >> 0x18\n  2280: u8 [a0 + 0x13] = a4\n  2283: a4 = a3 >> 0x10\n  2286: u8 [a0 + 0x12] = a4\n  2289: a3 = a3 >> 0x8\n  2292: u8 [a0 + 0x11] = a3\n  2295: u8 [a0 + 0x8] = a2\n  2298: a3 = a2 >> 0x38\n  2301: u8 [a0 + 0xf] = a3\n  2304: a3 = a2 >> 0x30\n  2307: u8 [a0 + 0xe] = a3\n  2310: a3 = a2 >> 0x28\n  2313: u8 [a0 + 0xd] = a3\n  2316: a3 = a2 >> 0x20\n  2319: u8 [a0 + 0xc] = a3\n  2322: a3 = a2 >> 0x18\n  2325: u8 [a0 + 0xb] = a3\n  2328: a3 = a2 >> 0x10\n  2331: u8 [a0 + 0xa] = a3\n  2334: a2 = a2 >> 0x8\n  2337: u8 [a0 + 0x9] = a2\n  2340: u8 [a0] = a1\n  2342: a2 = a1 >> 0x38\n  2345: u8 [a0 + 0x7] = a2\n  2348: a2 = a1 >> 0x30\n  2351: u8 [a0 + 0x6] = a2\n  2354: a2 = a1 >> 0x28\n  2357: u8 [a0 + 0x5] = a2\n  2360: a2 = a1 >> 0x20\n  2363: u8 [a0 + 0x4] = a2\n  2366: a2 = a1 >> 0x18\n  2369: u8 [a0 + 0x3] = a2\n  2372: a2 = a1 >> 0x10\n  2375: u8 [a0 + 0x2] = a2\n  2378: a1 = a1 >> 0x8\n  2381: u8 [a0 + 0x1] = a1\n  2384: a0 = u64 [s1 + 0x4e8]\n  2388: a1 = s1 + 0x1000\n  2392: u64 [a1 + 0xfffffffffffffad8] = a0\n  2396: a0 = u64 [s1 + 0x4e0]\n  2400: a1 = s1 + 0x1000\n  2404: u64 [a1 + 0xfffffffffffffad0] = a0\n  2408: a0 = u64 [s1 + 0x4d8]\n  2412: a1 = s1 + 0x1000\n  2416: u64 [a1 + 0xfffffffffffffac8] = a0\n  2420: a0 = s1 + 0x7ff\n  2424: a0 = a0 + 0x2e1\n  2428: a1 = s1 + 0x7ff\n  2432: a1 = a1 + 0x2c1\n  2436: a2 = u64 [s1 + 0x4d0]\n  2440: a3 = s1 + 0x1000\n  2444: u64 [a3 + 0xfffffffffffffac0] = a2\n  2448: ra = 34, jump @354\n      : @67 [@dyn 17] (gas: 12)\n  2453: a0 = u64 [s1 + 0x4f8]\n  2457: a2 = u64 [s1 + 0x4c0]\n  2461: a0 = a0 | a2\n  2464: a1 = u64 [s1 + 0x4f0]\n  2468: a3 = u64 [s1 + 0x4c8]\n  2472: a1 = a1 | a3\n  2475: a0 = a0 | a1\n  2478: a0 = a0 >> 0x20\n  2481: a1 = a1 | a2\n  2484: a1 = a1 << 0x20\n  2487: a0 = a0 | a1\n  2490: jump @69 if a0 == 0\n      : @68 (gas: 1)\n  2493: jump @222\n      : @69 (gas: 16)\n  2496: a0 = s1 + 0x1000\n  2500: a0 = u64 [a0 + 0xfffffffffffffaf8]\n  2504: u64 [s1 + 0x4b0] = a0\n  2508: a0 = s1 + 0x1000\n  2512: a0 = u64 [a0 + 0xfffffffffffffaf0]\n  2516: u64 [s1 + 0x4b8] = a0\n  2520: a0 = s1 + 0x1000\n  2524: a0 = u64 [a0 + 0xfffffffffffffae8]\n  2528: u64 [s1 + 0x4c0] = a0\n  2532: a0 = s1 + 0x1000\n  2536: a0 = u64 [a0 + 0xfffffffffffffae0]\n  2540: u64 [s1 + 0x4c8] = a0\n  2544: a0 = i32 [s1 + 0x4f8]\n  2548: a1 = 0x20\n  2551: u64 [s1 + 0x4a8] = a0\n  2555: ra = 36, jump @0\n      : @70 [@dyn 18] (gas: 101)\n  2560: a1 = u64 [s1 + 0x4b0]\n  2564: a1 = reverse a1\n  2566: a2 = u64 [s1 + 0x4c8]\n  2570: a2 = reverse a2\n  2572: a3 = a2 >> 0x38\n  2575: u8 [a0 + 0x1f] = a3\n  2578: a3 = a2 >> 0x30\n  2581: u8 [a0 + 0x1e] = a3\n  2584: a3 = a2 >> 0x28\n  2587: u8 [a0 + 0x1d] = a3\n  2590: a3 = a2 >> 0x20\n  2593: u8 [a0 + 0x1c] = a3\n  2596: a3 = a2 >> 0x18\n  2599: u8 [a0 + 0x1b] = a3\n  2602: a3 = a2 >> 0x10\n  2605: u8 [a0 + 0x1a] = a3\n  2608: a3 = a2 >> 0x8\n  2611: u8 [a0 + 0x19] = a3\n  2614: a3 = u64 [s1 + 0x4c0]\n  2618: a3 = reverse a3\n  2620: u8 [a0 + 0x18] = a2\n  2623: a2 = a3 >> 0x38\n  2626: u8 [a0 + 0x17] = a2\n  2629: a2 = a3 >> 0x30\n  2632: u8 [a0 + 0x16] = a2\n  2635: a2 = a3 >> 0x28\n  2638: u8 [a0 + 0x15] = a2\n  2641: a2 = a3 >> 0x20\n  2644: u8 [a0 + 0x14] = a2\n  2647: a2 = a3 >> 0x18\n  2650: u8 [a0 + 0x13] = a2\n  2653: a2 = a3 >> 0x10\n  2656: u8 [a0 + 0x12] = a2\n  2659: a2 = u64 [s1 + 0x4b8]\n  2663: a2 = reverse a2\n  2665: u8 [a0 + 0x10] = a3\n  2668: a3 = a3 >> 0x8\n  2671: u8 [a0 + 0x11] = a3\n  2674: u8 [a0 + 0x8] = a2\n  2677: a3 = a2 >> 0x38\n  2680: u8 [a0 + 0xf] = a3\n  2683: a3 = a2 >> 0x30\n  2686: u8 [a0 + 0xe] = a3\n  2689: a3 = a2 >> 0x28\n  2692: u8 [a0 + 0xd] = a3\n  2695: a3 = a2 >> 0x20\n  2698: u8 [a0 + 0xc] = a3\n  2701: a3 = a2 >> 0x18\n  2704: u8 [a0 + 0xb] = a3\n  2707: a3 = a2 >> 0x10\n  2710: u8 [a0 + 0xa] = a3\n  2713: a2 = a2 >> 0x8\n  2716: u8 [a0 + 0x9] = a2\n  2719: u8 [a0] = a1\n  2721: a2 = a1 >> 0x38\n  2724: u8 [a0 + 0x7] = a2\n  2727: a2 = a1 >> 0x30\n  2730: u8 [a0 + 0x6] = a2\n  2733: a2 = a1 >> 0x28\n  2736: u8 [a0 + 0x5] = a2\n  2739: a2 = a1 >> 0x20\n  2742: u8 [a0 + 0x4] = a2\n  2745: a2 = a1 >> 0x18\n  2748: u8 [a0 + 0x3] = a2\n  2751: a2 = a1 >> 0x10\n  2754: u8 [a0 + 0x2] = a2\n  2757: a1 = a1 >> 0x8\n  2760: u8 [a0 + 0x1] = a1\n  2763: a0 = u64 [s1 + 0x4d0]\n  2767: a0 = a0 + 0x1\n  2770: a1 = a0 <u 0x1\n  2773: a2 = u64 [s1 + 0x4d8]\n  2777: a1 = a1 + a2\n  2780: a2 = a0 | a1\n  2783: a2 = a2 <u 0x1\n  2786: a3 = u64 [s1 + 0x4e0]\n  2790: a2 = a2 + a3\n  2793: a3 = a2 <u a3\n  2796: a4 = u64 [s1 + 0x4e8]\n  2800: a3 = a3 + a4\n  2803: a4 = s1 + 0x7ff\n  2807: a4 = a4 + 0x479\n  2811: u64 [a4 + 0xe0] = a3\n  2815: u64 [a4 + 0xd8] = a2\n  2819: u64 [a4 + 0xd0] = a1\n  2823: u64 [a4 + 0xc8] = a0\n  2827: u32 [a4 + 264] = 0x20\n  2832: u64 [a4 + 256] = 0\n  2836: u64 [a4 + 248] = 0\n  2840: u64 [a4 + 240] = 0\n  2844: u64 [a4 + 232] = 0\n  2848: a0 = s1 + 0x1000\n  2852: i32 a1 = a0 + 0xfffffffffffffd40\n  2856: a0 = s1 + 0x1000\n  2860: i32 a3 = a0 + 0xfffffffffffffd60\n  2864: a0 = s1 + 0x1000\n  2868: i32 a4 = a0 + 0xfffffffffffffd80\n  2872: a2 = 0xffffffffffffffff\n  2875: a0 = 0\n  2877: ecalli 5 // 'get_storage'\n  2879: fallthrough\n      : @71 (gas: 9)\n  2880: a2 = 0x100000000\n  2890: a0 = 0xffffffe0\n  2900: a1 = u64 [s1 + 0x4f8]\n  2904: a0 = a1 <u a0\n  2907: a1 = u64 [s1 + 0x4f0]\n  2911: a0 = 0 if a1 != 0\n  2913: a1 = u64 [s1 + 0x498]\n  2917: a0 = 0 if a1 != 0\n  2919: jump @73 if a0 != 0\n      : @72 (gas: 1)\n  2922: jump @222\n      : @73 (gas: 15)\n  2925: a0 = s1 + 0x7ff\n  2929: a0 = a0 + 0x479\n  2933: a1 = u64 [a0 + 0x100]\n  2937: u64 [s1 + 0x480] = a1\n  2941: a1 = u64 [a0 + 0xf8]\n  2945: u64 [s1 + 0x488] = a1\n  2949: a1 = u64 [a0 + 0xf0]\n  2953: u64 [s1 + 0x490] = a1\n  2957: a0 = u64 [a0 + 0xe8]\n  2961: u64 [s1 + 0x4a0] = a0\n  2965: a0 = u64 [s1 + 0x4a8]\n  2969: i32 a0 = a0 + 0x20\n  2972: a1 = 0x20\n  2975: u64 [s1 + 0x478] = a2\n  2979: ra = 38, jump @0\n      : @74 [@dyn 19] (gas: 101)\n  2984: a1 = u64 [s1 + 0x480]\n  2988: a1 = reverse a1\n  2990: a2 = u64 [s1 + 0x4a0]\n  2994: a2 = reverse a2\n  2996: a3 = a2 >> 0x38\n  2999: u8 [a0 + 0x1f] = a3\n  3002: a3 = a2 >> 0x30\n  3005: u8 [a0 + 0x1e] = a3\n  3008: a3 = a2 >> 0x28\n  3011: u8 [a0 + 0x1d] = a3\n  3014: a3 = a2 >> 0x20\n  3017: u8 [a0 + 0x1c] = a3\n  3020: a3 = a2 >> 0x18\n  3023: u8 [a0 + 0x1b] = a3\n  3026: a3 = a2 >> 0x10\n  3029: u8 [a0 + 0x1a] = a3\n  3032: a3 = a2 >> 0x8\n  3035: u8 [a0 + 0x19] = a3\n  3038: a3 = u64 [s1 + 0x490]\n  3042: a3 = reverse a3\n  3044: u8 [a0 + 0x18] = a2\n  3047: a2 = a3 >> 0x38\n  3050: u8 [a0 + 0x17] = a2\n  3053: a2 = a3 >> 0x30\n  3056: u8 [a0 + 0x16] = a2\n  3059: a2 = a3 >> 0x28\n  3062: u8 [a0 + 0x15] = a2\n  3065: a2 = a3 >> 0x20\n  3068: u8 [a0 + 0x14] = a2\n  3071: a2 = a3 >> 0x18\n  3074: u8 [a0 + 0x13] = a2\n  3077: a2 = a3 >> 0x10\n  3080: u8 [a0 + 0x12] = a2\n  3083: a2 = u64 [s1 + 0x488]\n  3087: a2 = reverse a2\n  3089: u8 [a0 + 0x10] = a3\n  3092: a3 = a3 >> 0x8\n  3095: u8 [a0 + 0x11] = a3\n  3098: u8 [a0 + 0x8] = a2\n  3101: a3 = a2 >> 0x38\n  3104: u8 [a0 + 0xf] = a3\n  3107: a3 = a2 >> 0x30\n  3110: u8 [a0 + 0xe] = a3\n  3113: a3 = a2 >> 0x28\n  3116: u8 [a0 + 0xd] = a3\n  3119: a3 = a2 >> 0x20\n  3122: u8 [a0 + 0xc] = a3\n  3125: a3 = a2 >> 0x18\n  3128: u8 [a0 + 0xb] = a3\n  3131: a3 = a2 >> 0x10\n  3134: u8 [a0 + 0xa] = a3\n  3137: a2 = a2 >> 0x8\n  3140: u8 [a0 + 0x9] = a2\n  3143: u8 [a0] = a1\n  3145: a2 = a1 >> 0x38\n  3148: u8 [a0 + 0x7] = a2\n  3151: a2 = a1 >> 0x30\n  3154: u8 [a0 + 0x6] = a2\n  3157: a2 = a1 >> 0x28\n  3160: u8 [a0 + 0x5] = a2\n  3163: a2 = a1 >> 0x20\n  3166: u8 [a0 + 0x4] = a2\n  3169: a2 = a1 >> 0x18\n  3172: u8 [a0 + 0x3] = a2\n  3175: a2 = a1 >> 0x10\n  3178: u8 [a0 + 0x2] = a2\n  3181: a1 = a1 >> 0x8\n  3184: u8 [a0 + 0x1] = a1\n  3187: a1 = u64 [s1 + 0x4d0]\n  3191: a0 = a1 + 0x2\n  3194: a1 = a0 <u a1\n  3197: a3 = u64 [s1 + 0x4d8]\n  3201: a2 = a3 + a1\n  3204: a3 = a2 <u a3\n  3207: a3 = a1 if a1 == 0\n  3210: a1 = u64 [s1 + 0x4e0]\n  3214: a3 = a3 + a1\n  3217: a1 = a3 <u a1\n  3220: a4 = u64 [s1 + 0x4e8]\n  3224: a1 = a1 + a4\n  3227: a4 = s1 + 0x7ff\n  3231: a4 = a4 + 0x479\n  3235: u64 [a4 + 0xe0] = a1\n  3239: u64 [a4 + 0xd8] = a3\n  3243: u64 [a4 + 0xd0] = a2\n  3247: u64 [a4 + 0xc8] = a0\n  3251: u32 [a4 + 264] = 0x20\n  3256: u64 [a4 + 256] = 0\n  3260: u64 [a4 + 248] = 0\n  3264: u64 [a4 + 240] = 0\n  3268: u64 [a4 + 232] = 0\n  3272: a0 = s1 + 0x1000\n  3276: i32 a1 = a0 + 0xfffffffffffffd40\n  3280: a0 = s1 + 0x1000\n  3284: i32 a3 = a0 + 0xfffffffffffffd60\n  3288: a0 = s1 + 0x1000\n  3292: i32 a4 = a0 + 0xfffffffffffffd80\n  3296: a2 = 0xffffffffffffffff\n  3299: a0 = 0\n  3301: ecalli 5 // 'get_storage'\n  3303: fallthrough\n      : @75 (gas: 9)\n  3304: a2 = u64 [s1 + 0x498]\n  3308: a0 = u64 [s1 + 0x478]\n  3312: a0 = a0 + 0xffffffffffffffc0\n  3315: a1 = u64 [s1 + 0x4f8]\n  3319: a0 = a1 <u a0\n  3322: a1 = u64 [s1 + 0x4f0]\n  3326: a0 = 0 if a1 != 0\n  3328: a0 = 0 if a2 != 0\n  3330: jump @77 if a0 != 0\n      : @76 (gas: 1)\n  3333: jump @222\n      : @77 (gas: 14)\n  3336: a0 = s1 + 0x7ff\n  3340: a0 = a0 + 0x479\n  3344: a1 = u64 [a0 + 0x100]\n  3348: u64 [s1 + 0x460] = a1\n  3352: a1 = u64 [a0 + 0xf8]\n  3356: u64 [s1 + 0x468] = a1\n  3360: a1 = u64 [a0 + 0xf0]\n  3364: u64 [s1 + 0x470] = a1\n  3368: a0 = u64 [a0 + 0xe8]\n  3372: u64 [s1 + 0x478] = a0\n  3376: a0 = u64 [s1 + 0x4a8]\n  3380: i32 a0 = a0 + 0x40\n  3383: a1 = 0x20\n  3386: ra = 40, jump @0\n      : @78 [@dyn 20] (gas: 93)\n  3391: a1 = u64 [s1 + 0x478]\n  3395: a1 = reverse a1\n  3397: a2 = a1 >> 0x38\n  3400: u8 [a0 + 0x1f] = a2\n  3403: a2 = a1 >> 0x30\n  3406: u8 [a0 + 0x1e] = a2\n  3409: a2 = a1 >> 0x28\n  3412: u8 [a0 + 0x1d] = a2\n  3415: a2 = a1 >> 0x20\n  3418: u8 [a0 + 0x1c] = a2\n  3421: a2 = a1 >> 0x18\n  3424: u8 [a0 + 0x1b] = a2\n  3427: a2 = a1 >> 0x10\n  3430: u8 [a0 + 0x1a] = a2\n  3433: a2 = a1 >> 0x8\n  3436: u8 [a0 + 0x19] = a2\n  3439: a2 = u64 [s1 + 0x470]\n  3443: a2 = reverse a2\n  3445: u8 [a0 + 0x18] = a1\n  3448: a1 = a2 >> 0x38\n  3451: u8 [a0 + 0x17] = a1\n  3454: a1 = a2 >> 0x30\n  3457: u8 [a0 + 0x16] = a1\n  3460: a1 = a2 >> 0x28\n  3463: u8 [a0 + 0x15] = a1\n  3466: a1 = a2 >> 0x20\n  3469: u8 [a0 + 0x14] = a1\n  3472: a1 = a2 >> 0x18\n  3475: u8 [a0 + 0x13] = a1\n  3478: a1 = a2 >> 0x10\n  3481: u8 [a0 + 0x12] = a1\n  3484: a1 = u64 [s1 + 0x468]\n  3488: a1 = reverse a1\n  3490: u8 [a0 + 0x10] = a2\n  3493: a2 = a2 >> 0x8\n  3496: u8 [a0 + 0x11] = a2\n  3499: a2 = a1 >> 0x38\n  3502: u8 [a0 + 0xf] = a2\n  3505: a2 = a1 >> 0x30\n  3508: u8 [a0 + 0xe] = a2\n  3511: a2 = a1 >> 0x28\n  3514: u8 [a0 + 0xd] = a2\n  3517: a2 = a1 >> 0x20\n  3520: u8 [a0 + 0xc] = a2\n  3523: a2 = a1 >> 0x18\n  3526: u8 [a0 + 0xb] = a2\n  3529: a2 = a1 >> 0x10\n  3532: u8 [a0 + 0xa] = a2\n  3535: a2 = u64 [s1 + 0x460]\n  3539: a2 = reverse a2\n  3541: u8 [a0 + 0x8] = a1\n  3544: a1 = a1 >> 0x8\n  3547: u8 [a0 + 0x9] = a1\n  3550: a1 = a2 >> 0x38\n  3553: u8 [a0 + 0x7] = a1\n  3556: a1 = a2 >> 0x30\n  3559: u8 [a0 + 0x6] = a1\n  3562: a1 = a2 >> 0x28\n  3565: u8 [a0 + 0x5] = a1\n  3568: a1 = a2 >> 0x20\n  3571: u8 [a0 + 0x4] = a1\n  3574: a1 = a2 >> 0x18\n  3577: u8 [a0 + 0x3] = a1\n  3580: a1 = a2 >> 0x10\n  3583: u8 [a0 + 0x2] = a1\n  3586: u8 [a0] = a2\n  3588: a2 = a2 >> 0x8\n  3591: u8 [a0 + 0x1] = a2\n  3594: a1 = u64 [s1 + 0x4d0]\n  3598: a0 = a1 + 0x3\n  3601: a1 = a0 <u a1\n  3604: a3 = u64 [s1 + 0x4d8]\n  3608: a2 = a3 + a1\n  3611: a3 = a2 <u a3\n  3614: a3 = a1 if a1 == 0\n  3617: a1 = u64 [s1 + 0x4e0]\n  3621: a3 = a3 + a1\n  3624: a1 = a3 <u a1\n  3627: a4 = u64 [s1 + 0x4e8]\n  3631: a1 = a1 + a4\n  3634: a4 = s1 + 0x1000\n  3638: u64 [a4 + 0xfffffffffffffa90] = a3\n  3642: a3 = s1 + 0x1000\n  3646: u64 [a3 + 0xfffffffffffffa88] = a2\n  3650: a2 = s1 + 0x1000\n  3654: u64 [a2 + 0xfffffffffffffa80] = a0\n  3658: a0 = s1 + 0x7ff\n  3662: a0 = a0 + 0x2a1\n  3666: a2 = s1 + 0x7ff\n  3670: a2 = a2 + 0x281\n  3674: a3 = s1 + 0x1000\n  3678: u64 [a3 + 0xfffffffffffffa98] = a1\n  3682: ra = 42, jump @25\n      : @79 [@dyn 21] (gas: 8)\n  3687: a0 = 0xffffffa0\n  3697: a1 = u64 [s1 + 0x4f8]\n  3701: a0 = a1 <u a0\n  3704: a1 = u64 [s1 + 0x4f0]\n  3708: a0 = 0 if a1 != 0\n  3710: a1 = u64 [s1 + 0x498]\n  3714: a0 = 0 if a1 != 0\n  3716: jump @81 if a0 != 0\n      : @80 (gas: 1)\n  3719: jump @222\n      : @81 (gas: 15)\n  3722: a0 = s1 + 0x1000\n  3726: a0 = u64 [a0 + 0xfffffffffffffab0]\n  3730: a1 = s1 + 0x1000\n  3734: a1 = u64 [a1 + 0xfffffffffffffaa8]\n  3738: u64 [s1 + 0x4f0] = a1\n  3742: a1 = s1 + 0x1000\n  3746: a1 = u64 [a1 + 0xfffffffffffffaa0]\n  3750: u64 [s1 + 0x4f8] = a1\n  3754: a0 = a0 << 0x20\n  3757: a0 = a0 >> 0x20\n  3760: u64 [s1 + 0x4e8] = a0\n  3764: a0 = u64 [s1 + 0x4a8]\n  3768: i32 a0 = a0 + 0x60\n  3771: a1 = 0x20\n  3774: ra = 44, jump @0\n      : @82 [@dyn 22] (gas: 59)\n  3779: a1 = u64 [s1 + 0x4e8]\n  3783: a1 = reverse a1\n  3785: a2 = u64 [s1 + 0x4f0]\n  3789: a2 = reverse a2\n  3791: a3 = u64 [s1 + 0x4f8]\n  3795: a3 = reverse a3\n  3797: a4 = a3 >> 0x38\n  3800: u8 [a0 + 0x1f] = a4\n  3803: a4 = a3 >> 0x30\n  3806: u8 [a0 + 0x1e] = a4\n  3809: a4 = a3 >> 0x28\n  3812: u8 [a0 + 0x1d] = a4\n  3815: a4 = a3 >> 0x20\n  3818: u8 [a0 + 0x1c] = a4\n  3821: a4 = a3 >> 0x18\n  3824: u8 [a0 + 0x1b] = a4\n  3827: a4 = a3 >> 0x10\n  3830: u8 [a0 + 0x1a] = a4\n  3833: a4 = a3 >> 0x8\n  3836: u8 [a0 + 0x19] = a4\n  3839: u8 [a0 + 0x18] = a3\n  3842: u8 [a0 + 0x10] = a2\n  3845: u8 [a0 + 11] = 0\n  3848: u8 [a0 + 10] = 0\n  3851: u8 [a0 + 9] = 0\n  3854: u8 [a0 + 7] = 0\n  3857: u8 [a0 + 6] = 0\n  3860: u8 [a0 + 5] = 0\n  3863: u8 [a0 + 4] = 0\n  3866: u8 [a0 + 3] = 0\n  3869: u8 [a0 + 2] = 0\n  3872: u8 [a0 + 1] = 0\n  3875: u8 [a0 + 0] = 0\n  3877: a3 = a2 >> 0x38\n  3880: u8 [a0 + 0x17] = a3\n  3883: a3 = a2 >> 0x30\n  3886: u8 [a0 + 0x16] = a3\n  3889: a3 = a2 >> 0x28\n  3892: u8 [a0 + 0x15] = a3\n  3895: a3 = a2 >> 0x20\n  3898: u8 [a0 + 0x14] = a3\n  3901: a3 = a2 >> 0x18\n  3904: u8 [a0 + 0x13] = a3\n  3907: a3 = a2 >> 0x10\n  3910: u8 [a0 + 0x12] = a3\n  3913: a2 = a2 >> 0x8\n  3916: u8 [a0 + 0x11] = a2\n  3919: u8 [a0 + 0x8] = a1\n  3922: a2 = a1 >> 0x38\n  3925: u8 [a0 + 0xf] = a2\n  3928: a2 = a1 >> 0x30\n  3931: u8 [a0 + 0xe] = a2\n  3934: a2 = a1 >> 0x28\n  3937: u8 [a0 + 0xd] = a2\n  3940: a1 = a1 >> 0x20\n  3943: u8 [a0 + 0xc] = a1\n  3946: a0 = 0x40\n  3949: a1 = 0x20\n  3952: ra = 46, jump @0\n      : @83 [@dyn 23] (gas: 164)\n  3957: a1 = u8 [a0 + 0x1]\n  3960: a2 = u8 [a0]\n  3962: a3 = u8 [a0 + 0x2]\n  3965: a4 = u8 [a0 + 0x3]\n  3968: a1 = a1 << 0x8\n  3971: a1 = a1 | a2\n  3974: a3 = a3 << 0x10\n  3977: a4 = a4 << 0x18\n  3980: a3 = a3 | a4\n  3983: a1 = a1 | a3\n  3986: a2 = u8 [a0 + 0x5]\n  3989: a3 = u8 [a0 + 0x4]\n  3992: a4 = u8 [a0 + 0x6]\n  3995: a5 = u8 [a0 + 0x7]\n  3998: a2 = a2 << 0x8\n  4001: a2 = a2 | a3\n  4004: a4 = a4 << 0x10\n  4007: a5 = a5 << 0x18\n  4010: a4 = a4 | a5\n  4013: a2 = a2 | a4\n  4016: a2 = a2 << 0x20\n  4019: t0 = a2 | a1\n  4022: a2 = u8 [a0 + 0x9]\n  4025: a3 = u8 [a0 + 0x8]\n  4028: a4 = u8 [a0 + 0xa]\n  4031: a5 = u8 [a0 + 0xb]\n  4034: a2 = a2 << 0x8\n  4037: a2 = a2 | a3\n  4040: a4 = a4 << 0x10\n  4043: a5 = a5 << 0x18\n  4046: a4 = a4 | a5\n  4049: a2 = a2 | a4\n  4052: a3 = u8 [a0 + 0xd]\n  4055: a4 = u8 [a0 + 0xc]\n  4058: a5 = u8 [a0 + 0xe]\n  4061: a1 = u8 [a0 + 0xf]\n  4064: a3 = a3 << 0x8\n  4067: a3 = a3 | a4\n  4070: a5 = a5 << 0x10\n  4073: a1 = a1 << 0x18\n  4076: a1 = a1 | a5\n  4079: a1 = a1 | a3\n  4082: a1 = a1 << 0x20\n  4085: t1 = a1 | a2\n  4088: a1 = u8 [a0 + 0x11]\n  4091: a3 = u8 [a0 + 0x10]\n  4094: a4 = u8 [a0 + 0x12]\n  4097: a5 = u8 [a0 + 0x13]\n  4100: a1 = a1 << 0x8\n  4103: a1 = a1 | a3\n  4106: a4 = a4 << 0x10\n  4109: a5 = a5 << 0x18\n  4112: a4 = a4 | a5\n  4115: a1 = a1 | a4\n  4118: a3 = u8 [a0 + 0x15]\n  4121: a4 = u8 [a0 + 0x14]\n  4124: a5 = u8 [a0 + 0x16]\n  4127: a2 = u8 [a0 + 0x17]\n  4130: a3 = a3 << 0x8\n  4133: a3 = a3 | a4\n  4136: a5 = a5 << 0x10\n  4139: a2 = a2 << 0x18\n  4142: a2 = a2 | a5\n  4145: a2 = a2 | a3\n  4148: a2 = a2 << 0x20\n  4151: a3 = a2 | a1\n  4154: a1 = u8 [a0 + 0x19]\n  4157: a2 = u8 [a0 + 0x18]\n  4160: a4 = u8 [a0 + 0x1a]\n  4163: a5 = u8 [a0 + 0x1b]\n  4166: a1 = a1 << 0x8\n  4169: a1 = a1 | a2\n  4172: a4 = a4 << 0x10\n  4175: a5 = a5 << 0x18\n  4178: a4 = a4 | a5\n  4181: a1 = a1 | a4\n  4184: a2 = u8 [a0 + 0x1d]\n  4187: a4 = u8 [a0 + 0x1c]\n  4190: a5 = u8 [a0 + 0x1e]\n  4193: a0 = u8 [a0 + 0x1f]\n  4196: a2 = a2 << 0x8\n  4199: a2 = a2 | a4\n  4202: a5 = a5 << 0x10\n  4205: a0 = a0 << 0x18\n  4208: a0 = a0 | a5\n  4211: a0 = a0 | a2\n  4214: a0 = a0 << 0x20\n  4217: a0 = a0 | a1\n  4220: t2 = reverse a0\n  4222: u64 [s1 + 0x4a8] = t2\n  4226: a2 = reverse a3\n  4228: u64 [s1 + 0x4d0] = a2\n  4232: a1 = reverse t1\n  4234: u64 [s1 + 0x4d8] = a1\n  4238: a3 = reverse t0\n  4240: u64 [s1 + 0x4e0] = a3\n  4244: a0 = u64 [s1 + 0x4e8]\n  4248: a4 = s1 + 0x1000\n  4252: u64 [a4 + 0xfffffffffffff9d0] = a0\n  4256: a0 = u64 [s1 + 0x4f0]\n  4260: a4 = s1 + 0x1000\n  4264: u64 [a4 + 0xfffffffffffff9c8] = a0\n  4268: a0 = u64 [s1 + 0x4f8]\n  4272: a4 = s1 + 0x1000\n  4276: u64 [a4 + 0xfffffffffffff9c0] = a0\n  4280: a0 = s1 + 0x1000\n  4284: u64 [a0 + 4294965720] = 0\n  4288: a0 = u64 [s1 + 0x460]\n  4292: a4 = s1 + 0x1000\n  4296: u64 [a4 + 0xfffffffffffff9f8] = a0\n  4300: a0 = u64 [s1 + 0x468]\n  4304: a4 = s1 + 0x1000\n  4308: u64 [a4 + 0xfffffffffffff9f0] = a0\n  4312: a0 = u64 [s1 + 0x470]\n  4316: a4 = s1 + 0x1000\n  4320: u64 [a4 + 0xfffffffffffff9e8] = a0\n  4324: a0 = u64 [s1 + 0x478]\n  4328: a4 = s1 + 0x1000\n  4332: u64 [a4 + 0xfffffffffffff9e0] = a0\n  4336: a0 = u64 [s1 + 0x480]\n  4340: a4 = s1 + 0x1000\n  4344: u64 [a4 + 0xfffffffffffffa18] = a0\n  4348: a0 = u64 [s1 + 0x488]\n  4352: a4 = s1 + 0x1000\n  4356: u64 [a4 + 0xfffffffffffffa10] = a0\n  4360: a0 = u64 [s1 + 0x490]\n  4364: a4 = s1 + 0x1000\n  4368: u64 [a4 + 0xfffffffffffffa08] = a0\n  4372: a0 = u64 [s1 + 0x4a0]\n  4376: a4 = s1 + 0x1000\n  4380: u64 [a4 + 0xfffffffffffffa00] = a0\n  4384: a0 = u64 [s1 + 0x4b0]\n  4388: a4 = s1 + 0x1000\n  4392: u64 [a4 + 0xfffffffffffffa38] = a0\n  4396: a0 = u64 [s1 + 0x4b8]\n  4400: a4 = s1 + 0x1000\n  4404: u64 [a4 + 0xfffffffffffffa30] = a0\n  4408: a0 = u64 [s1 + 0x4c0]\n  4412: a4 = s1 + 0x1000\n  4416: u64 [a4 + 0xfffffffffffffa28] = a0\n  4420: a0 = u64 [s1 + 0x4c8]\n  4424: a4 = s1 + 0x1000\n  4428: u64 [a4 + 0xfffffffffffffa20] = a0\n  4432: a0 = s1 + 0x1000\n  4436: u64 [a0 + 0xfffffffffffffa58] = a3\n  4440: a0 = s1 + 0x1000\n  4444: u64 [a0 + 0xfffffffffffffa50] = a1\n  4448: a0 = s1 + 0x1000\n  4452: u64 [a0 + 0xfffffffffffffa48] = a2\n  4456: a0 = s1 + 0x7ff\n  4460: a0 = a0 + 0x261\n  4464: a1 = s1 + 0x7ff\n  4468: a1 = a1 + 0x241\n  4472: a2 = s1 + 0x7ff\n  4476: a2 = a2 + 0x221\n  4480: a3 = s1 + 0x7ff\n  4484: a3 = a3 + 0x201\n  4488: a4 = s1 + 0x7ff\n  4492: a4 = a4 + 0x1e1\n  4496: a5 = s1 + 0x7ff\n  4500: a5 = a5 + 0x1c1\n  4504: t0 = s1 + 0x1000\n  4508: u64 [t0 + 0xfffffffffffffa40] = t2\n  4512: ra = 48, jump @337\n      : @84 [@dyn 24] (gas: 12)\n  4517: a4 = u64 [s1 + 0x4d0]\n  4521: a2 = u64 [s1 + 0x4a8]\n  4525: a0 = u64 [s1 + 0x4e0]\n  4529: a0 = a0 | a4\n  4532: a3 = u64 [s1 + 0x4d8]\n  4536: a1 = a2 | a3\n  4539: a1 = a1 | a0\n  4542: a1 = a1 >> 0x20\n  4545: a0 = a0 | a3\n  4548: a0 = a0 << 0x20\n  4551: a0 = a0 | a1\n  4554: jump @86 if a0 == 0\n      : @85 (gas: 1)\n  4557: jump @222\n      : @86 (gas: 25)\n  4560: t0 = a3\n  4562: a0 = s1 + 0x1000\n  4566: a0 = u64 [a0 + 0xfffffffffffffa68]\n  4570: a1 = s1 + 0x1000\n  4574: a1 = u64 [a1 + 0xfffffffffffffa78]\n  4578: u64 [s1 + 0x4f8] = a1\n  4582: a1 = s1 + 0x1000\n  4586: t1 = u64 [a1 + 0xfffffffffffffa60]\n  4590: a1 = s1 + 0x1000\n  4594: a3 = u64 [a1 + 0xfffffffffffffa70]\n  4598: t2 = a0 ^ a4\n  4601: a5 = a0 <u a4\n  4604: ra = t1 <u a2\n  4607: a5 = ra if t2 == 0\n  4610: a1 = a3 - t0\n  4613: t2 = a1 - a5\n  4616: a1 = a1 <u a5\n  4619: u64 [s1 + 0x4f0] = a1\n  4623: a3 = a3 <u t0\n  4626: a5 = u64 [s1 + 0x4e0]\n  4630: a1 = u64 [s1 + 0x4f8]\n  4634: a5 = a1 - a5\n  4637: a5 = a5 - a3\n  4640: a1 = u64 [s1 + 0x4f0]\n  4644: jump @103\n      : @87 (gas: 1)\n  4647: jump @89 if a0 == 3157377473\n      : @88 (gas: 1)\n  4654: jump @212\n      : @89 (gas: 11)\n  4657: a0 = sp + 0xffffffffffffffe0\n  4660: a0 = a0 & 0xffffffffffffffe0\n  4663: u64 [s1 + 0x4f0] = a0\n  4667: sp = a0\n  4669: u64 [a0 + 24] = 0\n  4672: u64 [a0 + 16] = 0\n  4675: u64 [a0 + 8] = 0\n  4678: u64 [a0 + 0] = 0\n  4680: i32 a0 = a0 + 0\n  4682: ecalli 10 // 'value_transferred'\n  4684: fallthrough\n      : @90 (gas: 9)\n  4685: a3 = u64 [s1 + 0x4f0]\n  4689: a0 = u64 [a3 + 0x10]\n  4692: a1 = u64 [a3 + 0x18]\n  4695: a2 = u64 [a3 + 0x8]\n  4698: a3 = u64 [a3]\n  4700: a1 = a1 | a2\n  4703: a0 = a0 | a3\n  4706: a0 = a0 | a1\n  4709: jump @92 if a0 == 0\n      : @91 (gas: 1)\n  4712: jump @289\n      : @92 (gas: 3)\n  4715: a0 = u64 [s1 + 0x4f8]\n  4719: a0 = i32 [a0]\n  4721: jump @94 if a0 >u 35\n      : @93 (gas: 1)\n  4725: jump @289\n      : @94 (gas: 17)\n  4728: a0 = s1 + 0x1000\n  4732: i32 a0 = a0 + 0xfffffffffffffd20\n  4736: a1 = 0x4\n  4739: ecalli 1 // 'call_data_load'\n  4741: a0 = s1 + 0x7ff\n  4745: a0 = a0 + 0x479\n  4749: a1 = u64 [a0 + 0xa8]\n  4753: u64 [s1 + 0x4f8] = a1\n  4757: a1 = u64 [a0 + 0xb0]\n  4761: u64 [s1 + 0x4f0] = a1\n  4765: a1 = u64 [a0 + 0xb8]\n  4769: u64 [s1 + 0x4e8] = a1\n  4773: a0 = u64 [a0 + 0xc0]\n  4777: u64 [s1 + 0x4e0] = a0\n  4781: a1 = 0x20\n  4784: a0 = 0\n  4786: ra = 50, jump @0\n      : @95 [@dyn 25] (gas: 71)\n  4791: a1 = u64 [s1 + 0x4e0]\n  4795: a1 = reverse a1\n  4797: a2 = u64 [s1 + 0x4e8]\n  4801: a2 = reverse a2\n  4803: a3 = u64 [s1 + 0x4f0]\n  4807: a3 = reverse a3\n  4809: a4 = u64 [s1 + 0x4f8]\n  4813: a4 = reverse a4\n  4815: a5 = a4 >> 0x38\n  4818: u8 [a0 + 0x1f] = a5\n  4821: a5 = a4 >> 0x30\n  4824: u8 [a0 + 0x1e] = a5\n  4827: a5 = a4 >> 0x28\n  4830: u8 [a0 + 0x1d] = a5\n  4833: a5 = a4 >> 0x20\n  4836: u8 [a0 + 0x1c] = a5\n  4839: a5 = a4 >> 0x18\n  4842: u8 [a0 + 0x1b] = a5\n  4845: a5 = a4 >> 0x10\n  4848: u8 [a0 + 0x1a] = a5\n  4851: a5 = a4 >> 0x8\n  4854: u8 [a0 + 0x19] = a5\n  4857: u8 [a0 + 0x18] = a4\n  4860: a4 = a3 >> 0x38\n  4863: u8 [a0 + 0x17] = a4\n  4866: a4 = a3 >> 0x30\n  4869: u8 [a0 + 0x16] = a4\n  4872: a4 = a3 >> 0x28\n  4875: u8 [a0 + 0x15] = a4\n  4878: a4 = a3 >> 0x20\n  4881: u8 [a0 + 0x14] = a4\n  4884: a4 = a3 >> 0x18\n  4887: u8 [a0 + 0x13] = a4\n  4890: a4 = a3 >> 0x10\n  4893: u8 [a0 + 0x12] = a4\n  4896: a4 = a3 >> 0x8\n  4899: u8 [a0 + 0x11] = a4\n  4902: u8 [a0 + 0x10] = a3\n  4905: a3 = a2 >> 0x38\n  4908: u8 [a0 + 0xf] = a3\n  4911: a3 = a2 >> 0x30\n  4914: u8 [a0 + 0xe] = a3\n  4917: a3 = a2 >> 0x28\n  4920: u8 [a0 + 0xd] = a3\n  4923: a3 = a2 >> 0x20\n  4926: u8 [a0 + 0xc] = a3\n  4929: a3 = a2 >> 0x18\n  4932: u8 [a0 + 0xb] = a3\n  4935: a3 = a2 >> 0x10\n  4938: u8 [a0 + 0xa] = a3\n  4941: a3 = a2 >> 0x8\n  4944: u8 [a0 + 0x9] = a3\n  4947: u8 [a0 + 0x8] = a2\n  4950: a2 = a1 >> 0x38\n  4953: u8 [a0 + 0x7] = a2\n  4956: a2 = a1 >> 0x30\n  4959: u8 [a0 + 0x6] = a2\n  4962: a2 = a1 >> 0x28\n  4965: u8 [a0 + 0x5] = a2\n  4968: a2 = a1 >> 0x20\n  4971: u8 [a0 + 0x4] = a2\n  4974: a2 = a1 >> 0x18\n  4977: u8 [a0 + 0x3] = a2\n  4980: a2 = a1 >> 0x10\n  4983: u8 [a0 + 0x2] = a2\n  4986: a2 = a1 >> 0x8\n  4989: u8 [a0 + 0x1] = a2\n  4992: u8 [a0] = a1\n  4994: a0 = 0x20\n  4997: a1 = 0x20\n  5000: ra = 52, jump @0\n      : @96 [@dyn 26] (gas: 35)\n  5005: u8 [a0 + 31] = 0\n  5008: u8 [a0 + 30] = 0\n  5011: u8 [a0 + 29] = 0\n  5014: u8 [a0 + 28] = 0\n  5017: u8 [a0 + 27] = 0\n  5020: u8 [a0 + 26] = 0\n  5023: u8 [a0 + 25] = 0\n  5026: u8 [a0 + 24] = 0\n  5029: u8 [a0 + 23] = 0\n  5032: u8 [a0 + 22] = 0\n  5035: u8 [a0 + 21] = 0\n  5038: u8 [a0 + 20] = 0\n  5041: u8 [a0 + 19] = 0\n  5044: u8 [a0 + 18] = 0\n  5047: u8 [a0 + 17] = 0\n  5050: u8 [a0 + 16] = 0\n  5053: u8 [a0 + 15] = 0\n  5056: u8 [a0 + 14] = 0\n  5059: u8 [a0 + 13] = 0\n  5062: u8 [a0 + 12] = 0\n  5065: u8 [a0 + 11] = 0\n  5068: u8 [a0 + 10] = 0\n  5071: u8 [a0 + 9] = 0\n  5074: u8 [a0 + 8] = 0\n  5077: u8 [a0 + 7] = 0\n  5080: u8 [a0 + 6] = 0\n  5083: u8 [a0 + 5] = 0\n  5086: u8 [a0 + 4] = 0\n  5089: u8 [a0 + 3] = 0\n  5092: u8 [a0 + 2] = 0\n  5095: u8 [a0 + 1] = 0\n  5098: u8 [a0 + 0] = 0\n  5100: a1 = 0x40\n  5103: a0 = 0\n  5105: ra = 54, jump @0\n      : @97 [@dyn 27] (gas: 34)\n  5110: a1 = sp + 0xffffffffffffffe0\n  5113: a1 = a1 & 0xffffffffffffffe0\n  5116: u64 [s1 + 0x4f8] = a1\n  5120: sp = a1\n  5122: i32 a0 = a0 + 0\n  5124: i32 a2 = a1 + 0\n  5126: a1 = 0x40\n  5129: ecalli 6 // 'hash_keccak_256'\n  5131: a3 = u64 [s1 + 0x4f8]\n  5135: a0 = u64 [a3 + 0x18]\n  5138: a1 = u64 [a3 + 0x10]\n  5141: a2 = u64 [a3 + 0x8]\n  5144: a3 = u64 [a3]\n  5146: a4 = reverse a0\n  5148: u64 [s1 + 0x4e8] = a4\n  5152: a1 = reverse a1\n  5154: u64 [s1 + 0x4f0] = a1\n  5158: a2 = reverse a2\n  5160: u64 [s1 + 0x4e0] = a2\n  5164: a0 = reverse a3\n  5166: u64 [s1 + 0x4f8] = a0\n  5170: a3 = s1 + 0x1000\n  5174: u64 [a3 + 0xfffffffffffffbd8] = a0\n  5178: a0 = s1 + 0x1000\n  5182: u64 [a0 + 0xfffffffffffffbd0] = a2\n  5186: a0 = s1 + 0x1000\n  5190: u64 [a0 + 0xfffffffffffffbc8] = a1\n  5194: a0 = s1 + 0x7ff\n  5198: a0 = a0 + 0x3e1\n  5202: a1 = s1 + 0x7ff\n  5206: a1 = a1 + 0x3c1\n  5210: a2 = s1 + 0x1000\n  5214: u64 [a2 + 0xfffffffffffffbc0] = a4\n  5218: ra = 56, jump @354\n      : @98 [@dyn 28] (gas: 135)\n  5223: a0 = s1 + 0x1000\n  5227: a0 = u64 [a0 + 0xfffffffffffffbe0]\n  5231: u64 [s1 + 0x4d8] = a0\n  5235: a0 = s1 + 0x1000\n  5239: a0 = u64 [a0 + 0xfffffffffffffbe8]\n  5243: u64 [s1 + 0x4d0] = a0\n  5247: a0 = s1 + 0x1000\n  5251: a0 = u64 [a0 + 0xfffffffffffffbf0]\n  5255: u64 [s1 + 0x4c8] = a0\n  5259: a0 = s1 + 0x1000\n  5263: a0 = u64 [a0 + 0xfffffffffffffbf8]\n  5267: u64 [s1 + 0x4c0] = a0\n  5271: a0 = u64 [s1 + 0x4e8]\n  5275: a0 = a0 + 0x1\n  5278: a1 = a0 <u 0x1\n  5281: a2 = u64 [s1 + 0x4f0]\n  5285: a1 = a1 + a2\n  5288: a2 = s1 + 0x7ff\n  5292: a2 = a2 + 0x479\n  5296: u64 [a2 + 0xd0] = a1\n  5300: a1 = a1 | a0\n  5303: u64 [a2 + 0xc8] = a0\n  5307: a0 = a1 <u 0x1\n  5310: a1 = u64 [s1 + 0x4e0]\n  5314: a0 = a0 + a1\n  5317: u64 [a2 + 0xd8] = a0\n  5321: a0 = a0 <u a1\n  5324: a1 = u64 [s1 + 0x4f8]\n  5328: a0 = a0 + a1\n  5331: u64 [a2 + 0xe0] = a0\n  5335: u64 [a2 + 256] = 0\n  5339: u64 [a2 + 248] = 0\n  5343: u64 [a2 + 240] = 0\n  5347: u64 [a2 + 232] = 0\n  5351: u32 [a2 + 264] = 0x20\n  5356: a0 = s1 + 0x1000\n  5360: i32 a1 = a0 + 0xfffffffffffffd40\n  5364: a0 = s1 + 0x1000\n  5368: i32 a3 = a0 + 0xfffffffffffffd60\n  5372: a0 = s1 + 0x1000\n  5376: i32 a4 = a0 + 0xfffffffffffffd80\n  5380: a2 = 0xffffffffffffffff\n  5383: a0 = 0\n  5385: ecalli 5 // 'get_storage'\n  5387: a1 = u64 [s1 + 0x4e8]\n  5391: a0 = a1 + 0x2\n  5394: a1 = a0 <u a1\n  5397: a3 = u64 [s1 + 0x4f0]\n  5401: a2 = a3 + a1\n  5404: a3 = a2 <u a3\n  5407: a3 = a1 if a1 == 0\n  5410: a1 = u64 [s1 + 0x4e0]\n  5414: a3 = a3 + a1\n  5417: a1 = a3 <u a1\n  5420: a4 = u64 [s1 + 0x4f8]\n  5424: a1 = a1 + a4\n  5427: a4 = s1 + 0x7ff\n  5431: a4 = a4 + 0x479\n  5435: u64 [a4 + 0xe0] = a1\n  5439: a1 = u64 [a4 + 0xe8]\n  5443: u64 [s1 + 0x4b8] = a1\n  5447: u64 [a4 + 0xd8] = a3\n  5451: a1 = u64 [a4 + 0xf0]\n  5455: u64 [s1 + 0x4b0] = a1\n  5459: u64 [a4 + 0xd0] = a2\n  5463: a1 = u64 [a4 + 0xf8]\n  5467: u64 [s1 + 0x4a8] = a1\n  5471: u64 [a4 + 0xc8] = a0\n  5475: a0 = u64 [a4 + 0x100]\n  5479: u64 [s1 + 0x4a0] = a0\n  5483: u64 [a4 + 256] = 0\n  5487: u64 [a4 + 248] = 0\n  5491: u64 [a4 + 240] = 0\n  5495: u64 [a4 + 232] = 0\n  5499: u32 [a4 + 264] = 0x20\n  5504: a0 = s1 + 0x1000\n  5508: i32 a1 = a0 + 0xfffffffffffffd40\n  5512: a0 = s1 + 0x1000\n  5516: i32 a3 = a0 + 0xfffffffffffffd60\n  5520: a0 = s1 + 0x1000\n  5524: i32 a4 = a0 + 0xfffffffffffffd80\n  5528: a2 = 0xffffffffffffffff\n  5531: a0 = 0\n  5533: ecalli 5 // 'get_storage'\n  5535: a1 = u64 [s1 + 0x4e8]\n  5539: a0 = a1 + 0x3\n  5542: a1 = a0 <u a1\n  5545: a3 = u64 [s1 + 0x4f0]\n  5549: a2 = a3 + a1\n  5552: a3 = a2 <u a3\n  5555: a3 = a1 if a1 == 0\n  5558: a1 = u64 [s1 + 0x4e0]\n  5562: a3 = a3 + a1\n  5565: a1 = a3 <u a1\n  5568: a4 = u64 [s1 + 0x4f8]\n  5572: a1 = a1 + a4\n  5575: a4 = s1 + 0x7ff\n  5579: a4 = a4 + 0x479\n  5583: u64 [a4 + 0xe0] = a1\n  5587: u64 [a4 + 0xd8] = a3\n  5591: a1 = u64 [a4 + 0xe8]\n  5595: u64 [s1 + 0x4f0] = a1\n  5599: u64 [a4 + 0xd0] = a2\n  5603: a1 = u64 [a4 + 0xf0]\n  5607: u64 [s1 + 0x4e8] = a1\n  5611: u64 [a4 + 0xc8] = a0\n  5615: a0 = u64 [a4 + 0xf8]\n  5619: u64 [s1 + 0x4e0] = a0\n  5623: u32 [a4 + 264] = 0x20\n  5628: a0 = u64 [a4 + 0x100]\n  5632: u64 [s1 + 0x498] = a0\n  5636: u64 [a4 + 256] = 0\n  5640: u64 [a4 + 248] = 0\n  5644: u64 [a4 + 240] = 0\n  5648: u64 [a4 + 232] = 0\n  5652: a0 = s1 + 0x1000\n  5656: i32 a1 = a0 + 0xfffffffffffffd40\n  5660: a0 = s1 + 0x1000\n  5664: i32 a3 = a0 + 0xfffffffffffffd60\n  5668: a0 = s1 + 0x1000\n  5672: i32 a4 = a0 + 0xfffffffffffffd80\n  5676: a2 = 0xffffffffffffffff\n  5679: a0 = 0\n  5681: ecalli 5 // 'get_storage'\n  5683: a1 = s1 + 0x7ff\n  5687: a1 = a1 + 0x479\n  5691: a0 = u64 [a1 + 0xe8]\n  5695: u64 [s1 + 0x490] = a0\n  5699: a0 = u64 [a1 + 0xf0]\n  5703: u64 [s1 + 0x488] = a0\n  5707: a0 = u32 [a1 + 0xf8]\n  5711: u64 [s1 + 0x480] = a0\n  5715: a0 = 0x40\n  5718: a1 = 0x20\n  5721: ra = 58, jump @0\n      : @99 [@dyn 29] (gas: 164)\n  5726: a1 = u8 [a0 + 0x1]\n  5729: a2 = u8 [a0]\n  5731: a3 = u8 [a0 + 0x2]\n  5734: a4 = u8 [a0 + 0x3]\n  5737: a1 = a1 << 0x8\n  5740: a1 = a1 | a2\n  5743: a3 = a3 << 0x10\n  5746: a4 = a4 << 0x18\n  5749: a3 = a3 | a4\n  5752: a1 = a1 | a3\n  5755: a2 = u8 [a0 + 0x5]\n  5758: a3 = u8 [a0 + 0x4]\n  5761: a4 = u8 [a0 + 0x6]\n  5764: a5 = u8 [a0 + 0x7]\n  5767: a2 = a2 << 0x8\n  5770: a2 = a2 | a3\n  5773: a4 = a4 << 0x10\n  5776: a5 = a5 << 0x18\n  5779: a4 = a4 | a5\n  5782: a2 = a2 | a4\n  5785: a2 = a2 << 0x20\n  5788: t0 = a2 | a1\n  5791: a2 = u8 [a0 + 0x9]\n  5794: a3 = u8 [a0 + 0x8]\n  5797: a4 = u8 [a0 + 0xa]\n  5800: a5 = u8 [a0 + 0xb]\n  5803: a2 = a2 << 0x8\n  5806: a2 = a2 | a3\n  5809: a4 = a4 << 0x10\n  5812: a5 = a5 << 0x18\n  5815: a4 = a4 | a5\n  5818: a2 = a2 | a4\n  5821: a3 = u8 [a0 + 0xd]\n  5824: a4 = u8 [a0 + 0xc]\n  5827: a5 = u8 [a0 + 0xe]\n  5830: a1 = u8 [a0 + 0xf]\n  5833: a3 = a3 << 0x8\n  5836: a3 = a3 | a4\n  5839: a5 = a5 << 0x10\n  5842: a1 = a1 << 0x18\n  5845: a1 = a1 | a5\n  5848: a1 = a1 | a3\n  5851: a1 = a1 << 0x20\n  5854: t1 = a1 | a2\n  5857: a1 = u8 [a0 + 0x11]\n  5860: a3 = u8 [a0 + 0x10]\n  5863: a4 = u8 [a0 + 0x12]\n  5866: a5 = u8 [a0 + 0x13]\n  5869: a1 = a1 << 0x8\n  5872: a1 = a1 | a3\n  5875: a4 = a4 << 0x10\n  5878: a5 = a5 << 0x18\n  5881: a4 = a4 | a5\n  5884: a1 = a1 | a4\n  5887: a3 = u8 [a0 + 0x15]\n  5890: a4 = u8 [a0 + 0x14]\n  5893: a5 = u8 [a0 + 0x16]\n  5896: a2 = u8 [a0 + 0x17]\n  5899: a3 = a3 << 0x8\n  5902: a3 = a3 | a4\n  5905: a5 = a5 << 0x10\n  5908: a2 = a2 << 0x18\n  5911: a2 = a2 | a5\n  5914: a2 = a2 | a3\n  5917: a2 = a2 << 0x20\n  5920: a3 = a2 | a1\n  5923: a1 = u8 [a0 + 0x19]\n  5926: a2 = u8 [a0 + 0x18]\n  5929: a4 = u8 [a0 + 0x1a]\n  5932: a5 = u8 [a0 + 0x1b]\n  5935: a1 = a1 << 0x8\n  5938: a1 = a1 | a2\n  5941: a4 = a4 << 0x10\n  5944: a5 = a5 << 0x18\n  5947: a4 = a4 | a5\n  5950: a1 = a1 | a4\n  5953: a2 = u8 [a0 + 0x1d]\n  5956: a4 = u8 [a0 + 0x1c]\n  5959: a5 = u8 [a0 + 0x1e]\n  5962: a0 = u8 [a0 + 0x1f]\n  5965: a2 = a2 << 0x8\n  5968: a2 = a2 | a4\n  5971: a5 = a5 << 0x10\n  5974: a0 = a0 << 0x18\n  5977: a0 = a0 | a5\n  5980: a0 = a0 | a2\n  5983: a0 = a0 << 0x20\n  5986: a0 = a0 | a1\n  5989: t2 = reverse a0\n  5991: u64 [s1 + 0x468] = t2\n  5995: a2 = reverse a3\n  5997: u64 [s1 + 0x470] = a2\n  6001: a1 = reverse t1\n  6003: u64 [s1 + 0x478] = a1\n  6007: a3 = reverse t0\n  6009: u64 [s1 + 0x4f8] = a3\n  6013: a0 = u64 [s1 + 0x480]\n  6017: a4 = s1 + 0x1000\n  6021: u64 [a4 + 0xfffffffffffffb10] = a0\n  6025: a0 = u64 [s1 + 0x488]\n  6029: a4 = s1 + 0x1000\n  6033: u64 [a4 + 0xfffffffffffffb08] = a0\n  6037: a0 = u64 [s1 + 0x490]\n  6041: a4 = s1 + 0x1000\n  6045: u64 [a4 + 0xfffffffffffffb00] = a0\n  6049: a0 = s1 + 0x1000\n  6053: u64 [a0 + 4294966040] = 0\n  6057: a0 = u64 [s1 + 0x498]\n  6061: a4 = s1 + 0x1000\n  6065: u64 [a4 + 0xfffffffffffffb38] = a0\n  6069: a0 = u64 [s1 + 0x4e0]\n  6073: a4 = s1 + 0x1000\n  6077: u64 [a4 + 0xfffffffffffffb30] = a0\n  6081: a0 = u64 [s1 + 0x4e8]\n  6085: a4 = s1 + 0x1000\n  6089: u64 [a4 + 0xfffffffffffffb28] = a0\n  6093: a0 = u64 [s1 + 0x4f0]\n  6097: a4 = s1 + 0x1000\n  6101: u64 [a4 + 0xfffffffffffffb20] = a0\n  6105: a0 = u64 [s1 + 0x4a0]\n  6109: a4 = s1 + 0x1000\n  6113: u64 [a4 + 0xfffffffffffffb58] = a0\n  6117: a0 = u64 [s1 + 0x4a8]\n  6121: a4 = s1 + 0x1000\n  6125: u64 [a4 + 0xfffffffffffffb50] = a0\n  6129: a0 = u64 [s1 + 0x4b0]\n  6133: a4 = s1 + 0x1000\n  6137: u64 [a4 + 0xfffffffffffffb48] = a0\n  6141: a0 = u64 [s1 + 0x4b8]\n  6145: a4 = s1 + 0x1000\n  6149: u64 [a4 + 0xfffffffffffffb40] = a0\n  6153: a0 = u64 [s1 + 0x4c0]\n  6157: a4 = s1 + 0x1000\n  6161: u64 [a4 + 0xfffffffffffffb78] = a0\n  6165: a0 = u64 [s1 + 0x4c8]\n  6169: a4 = s1 + 0x1000\n  6173: u64 [a4 + 0xfffffffffffffb70] = a0\n  6177: a0 = u64 [s1 + 0x4d0]\n  6181: a4 = s1 + 0x1000\n  6185: u64 [a4 + 0xfffffffffffffb68] = a0\n  6189: a0 = u64 [s1 + 0x4d8]\n  6193: a4 = s1 + 0x1000\n  6197: u64 [a4 + 0xfffffffffffffb60] = a0\n  6201: a0 = s1 + 0x1000\n  6205: u64 [a0 + 0xfffffffffffffb98] = a3\n  6209: a0 = s1 + 0x1000\n  6213: u64 [a0 + 0xfffffffffffffb90] = a1\n  6217: a0 = s1 + 0x1000\n  6221: u64 [a0 + 0xfffffffffffffb88] = a2\n  6225: a0 = s1 + 0x7ff\n  6229: a0 = a0 + 0x3a1\n  6233: a1 = s1 + 0x7ff\n  6237: a1 = a1 + 0x381\n  6241: a2 = s1 + 0x7ff\n  6245: a2 = a2 + 0x361\n  6249: a3 = s1 + 0x7ff\n  6253: a3 = a3 + 0x341\n  6257: a4 = s1 + 0x7ff\n  6261: a4 = a4 + 0x321\n  6265: a5 = s1 + 0x7ff\n  6269: a5 = a5 + 0x301\n  6273: t0 = s1 + 0x1000\n  6277: u64 [t0 + 0xfffffffffffffb80] = t2\n  6281: ra = 60, jump @337\n      : @100 [@dyn 30] (gas: 12)\n  6286: a4 = u64 [s1 + 0x470]\n  6290: a2 = u64 [s1 + 0x468]\n  6294: a0 = u64 [s1 + 0x4f8]\n  6298: a0 = a0 | a4\n  6301: a3 = u64 [s1 + 0x478]\n  6305: a1 = a2 | a3\n  6308: a1 = a1 | a0\n  6311: a1 = a1 >> 0x20\n  6314: a0 = a0 | a3\n  6317: a0 = a0 << 0x20\n  6320: a0 = a0 | a1\n  6323: jump @102 if a0 == 0\n      : @101 (gas: 1)\n  6326: jump @222\n      : @102 (gas: 25)\n  6329: t0 = a3\n  6331: a0 = s1 + 0x1000\n  6335: a0 = u64 [a0 + 0xfffffffffffffba8]\n  6339: a1 = s1 + 0x1000\n  6343: a1 = u64 [a1 + 0xfffffffffffffbb8]\n  6347: u64 [s1 + 0x4f0] = a1\n  6351: a1 = s1 + 0x1000\n  6355: t1 = u64 [a1 + 0xfffffffffffffba0]\n  6359: a1 = s1 + 0x1000\n  6363: a3 = u64 [a1 + 0xfffffffffffffbb0]\n  6367: t2 = a0 ^ a4\n  6370: a5 = a0 <u a4\n  6373: ra = t1 <u a2\n  6376: a5 = ra if t2 == 0\n  6379: a1 = a3 - t0\n  6382: t2 = a1 - a5\n  6385: a1 = a1 <u a5\n  6388: u64 [s1 + 0x4e8] = a1\n  6392: a3 = a3 <u t0\n  6395: a5 = u64 [s1 + 0x4f8]\n  6399: a1 = u64 [s1 + 0x4f0]\n  6403: a5 = a1 - a5\n  6406: a5 = a5 - a3\n  6409: a1 = u64 [s1 + 0x4e8]\n  6413: fallthrough\n      : @103 (gas: 12)\n  6414: a5 = a5 - a1\n  6417: a0 = a0 - a4\n  6420: a0 = a0 - ra\n  6423: a1 = t1 - a2\n  6426: a0 = a0 | a5\n  6429: a3 = a1 | t2\n  6432: a3 = a3 | a0\n  6435: a0 = a0 | t2\n  6438: a3 = a3 >> 0x20\n  6441: a0 = a0 << 0x20\n  6444: a0 = a0 | a3\n  6447: jump @105 if a0 == 0\n      : @104 (gas: 1)\n  6450: jump @222\n      : @105 (gas: 4)\n  6453: i32 a0 = a2 + 0\n  6455: i32 a1 = a1 + 0\n  6457: u64 [s1 + 0x4f8] = a1\n  6461: ra = 62, jump @0\n      : @106 [@dyn 31] (gas: 5)\n  6466: i32 a1 = a0 + 0\n  6468: a0 = 0\n  6470: a2 = u64 [s1 + 0x4f8]\n  6474: ecalli 7 // 'seal_return'\n  6476: fallthrough\n      : @107 (gas: 11)\n  6477: a0 = sp + 0xffffffffffffffe0\n  6480: a0 = a0 & 0xffffffffffffffe0\n  6483: u64 [s1 + 0x4f0] = a0\n  6487: sp = a0\n  6489: u64 [a0 + 24] = 0\n  6492: u64 [a0 + 16] = 0\n  6495: u64 [a0 + 8] = 0\n  6498: u64 [a0 + 0] = 0\n  6500: i32 a0 = a0 + 0\n  6502: ecalli 10 // 'value_transferred'\n  6504: fallthrough\n      : @108 (gas: 9)\n  6505: a3 = u64 [s1 + 0x4f0]\n  6509: a0 = u64 [a3 + 0x10]\n  6512: a1 = u64 [a3 + 0x18]\n  6515: a2 = u64 [a3 + 0x8]\n  6518: a3 = u64 [a3]\n  6520: a1 = a1 | a2\n  6523: a0 = a0 | a3\n  6526: a0 = a0 | a1\n  6529: jump @110 if a0 == 0\n      : @109 (gas: 1)\n  6532: jump @289\n      : @110 (gas: 3)\n  6535: a0 = u64 [s1 + 0x4f8]\n  6539: a0 = i32 [a0]\n  6541: jump @112 if a0 >u 99\n      : @111 (gas: 1)\n  6545: jump @289\n      : @112 (gas: 5)\n  6548: a0 = s1 + 0x1000\n  6552: i32 a0 = a0 + 0xfffffffffffffc20\n  6556: a1 = 0x4\n  6559: ecalli 1 // 'call_data_load'\n  6561: fallthrough\n      : @113 (gas: 10)\n  6562: a0 = s1 + 0x1000\n  6566: t1 = u64 [a0 + 0xfffffffffffffc38]\n  6570: a0 = s1 + 0x1000\n  6574: a3 = u64 [a0 + 0xfffffffffffffc30]\n  6578: a0 = s1 + 0x1000\n  6582: a4 = u64 [a0 + 0xfffffffffffffc28]\n  6586: a0 = a3 | t1\n  6589: a1 = a4 <u 0x1\n  6592: a1 = 0 if a0 != 0\n  6594: jump @115 if a1 != 0\n      : @114 (gas: 1)\n  6597: jump @292\n      : @115 (gas: 20)\n  6600: a0 = s1 + 0x1000\n  6604: a5 = u64 [a0 + 0xfffffffffffffc20]\n  6608: a0 = u64 [s1 + 0x4f8]\n  6612: a0 = u32 [a0]\n  6614: a1 = a5 + 0x23\n  6617: a2 = a1 <u a5\n  6620: t0 = a4 + a2\n  6623: u64 [s1 + 0x4b8] = a4\n  6627: a4 = t0 <u a4\n  6630: a4 = a2 if a2 == 0\n  6633: a4 = a4 + a3\n  6636: u64 [s1 + 0x4c0] = a3\n  6640: a2 = a4 <u a3\n  6643: u64 [s1 + 0x4c8] = t1\n  6647: a2 = a2 + t1\n  6650: a2 = a2 | a4\n  6653: a0 = a1 <u a0\n  6656: a0 = 0 if t0 != 0\n  6658: a0 = 0 if a2 != 0\n  6660: jump @117 if a0 != 0\n      : @116 (gas: 1)\n  6663: jump @290\n      : @117 (gas: 6)\n  6666: u64 [s1 + 0x4d8] = a5\n  6670: i32 a1 = a5 + 0x4\n  6673: a0 = s1 + 0x1000\n  6677: i32 a0 = a0 + 0xfffffffffffffc40\n  6681: ecalli 1 // 'call_data_load'\n  6683: fallthrough\n      : @118 (gas: 10)\n  6684: a0 = s1 + 0x1000\n  6688: a4 = u64 [a0 + 0xfffffffffffffc58]\n  6692: a0 = s1 + 0x1000\n  6696: a3 = u64 [a0 + 0xfffffffffffffc50]\n  6700: a0 = s1 + 0x1000\n  6704: a2 = u64 [a0 + 0xfffffffffffffc48]\n  6708: a1 = a3 | a4\n  6711: a0 = a2 <u 0x1\n  6714: a0 = 0 if a1 != 0\n  6716: jump @120 if a0 != 0\n      : @119 (gas: 1)\n  6719: jump @293\n      : @120 (gas: 19)\n  6722: u64 [s1 + 0x4e0] = a4\n  6726: u64 [s1 + 0x4d0] = a3\n  6730: u64 [s1 + 0x498] = a1\n  6734: a0 = s1 + 0x1000\n  6738: a1 = u64 [a0 + 0xfffffffffffffc40]\n  6742: a0 = a1 + 0x1f\n  6745: u64 [s1 + 0x4f0] = a1\n  6749: a1 = a0 <u a1\n  6752: u64 [s1 + 0x4e8] = a2\n  6756: a1 = a1 + a2\n  6759: a1 = a1 & 0x1\n  6762: a0 = a0 & 0xffffffffffffffe0\n  6765: a2 = a0 + 0x3f\n  6768: a0 = a2 <u a0\n  6771: a0 = a0 + a1\n  6774: a1 = a2 & 0xffffffffffffffe0\n  6777: a2 = a1 <u 0xffffffffffffff80\n  6780: a2 = 0 if a0 != 0\n  6782: jump @122 if a2 != 0\n      : @121 (gas: 1)\n  6785: jump @295\n      : @122 (gas: 11)\n  6788: a2 = a1 + 0x80\n  6792: u64 [s1 + 0x4b0] = a2\n  6796: a1 = a2 <u a1\n  6799: a2 = a0 + a1\n  6802: u64 [s1 + 0x4a8] = a2\n  6806: a0 = a2 <u a0\n  6809: a0 = a1 if a1 == 0\n  6812: u64 [s1 + 0x4a0] = a0\n  6816: a0 = 0x40\n  6819: a1 = 0x20\n  6822: ra = 64, jump @0\n      : @123 [@dyn 32] (gas: 50)\n  6827: a1 = u64 [s1 + 0x4a0]\n  6831: a1 = reverse a1\n  6833: a2 = u64 [s1 + 0x4a8]\n  6837: a2 = reverse a2\n  6839: a3 = u64 [s1 + 0x4b0]\n  6843: a3 = reverse a3\n  6845: u8 [a0 + 22] = 0\n  6848: u8 [a0 + 21] = 0\n  6851: u8 [a0 + 20] = 0\n  6854: u8 [a0 + 19] = 0\n  6857: u8 [a0 + 18] = 0\n  6860: u8 [a0 + 17] = 0\n  6863: u8 [a0 + 14] = 0\n  6866: u8 [a0 + 13] = 0\n  6869: u8 [a0 + 12] = 0\n  6872: u8 [a0 + 11] = 0\n  6875: u8 [a0 + 10] = 0\n  6878: u8 [a0 + 9] = 0\n  6881: u8 [a0 + 7] = 0\n  6884: u8 [a0 + 6] = 0\n  6887: u8 [a0 + 5] = 0\n  6890: u8 [a0 + 4] = 0\n  6893: u8 [a0 + 3] = 0\n  6896: u8 [a0 + 2] = 0\n  6899: u8 [a0 + 1] = 0\n  6902: u8 [a0 + 0] = 0\n  6904: u8 [a0 + 0x18] = a3\n  6907: a4 = a3 >> 0x38\n  6910: u8 [a0 + 0x1f] = a4\n  6913: a4 = a3 >> 0x30\n  6916: u8 [a0 + 0x1e] = a4\n  6919: a4 = a3 >> 0x28\n  6922: u8 [a0 + 0x1d] = a4\n  6925: a4 = a3 >> 0x20\n  6928: u8 [a0 + 0x1c] = a4\n  6931: a4 = a3 >> 0x18\n  6934: u8 [a0 + 0x1b] = a4\n  6937: a4 = a3 >> 0x10\n  6940: u8 [a0 + 0x1a] = a4\n  6943: a3 = a3 >> 0x8\n  6946: u8 [a0 + 0x19] = a3\n  6949: u8 [a0 + 0x10] = a2\n  6952: a2 = a2 >> 0x38\n  6955: u8 [a0 + 0x17] = a2\n  6958: u8 [a0 + 0x8] = a1\n  6961: a1 = a1 >> 0x38\n  6964: u8 [a0 + 0xf] = a1\n  6967: a0 = 0x80\n  6971: a1 = 0x20\n  6974: ra = 66, jump @0\n      : @124 [@dyn 33] (gas: 108)\n  6979: a1 = u64 [s1 + 0x4d8]\n  6983: a2 = u64 [s1 + 0x4f0]\n  6987: a2 = a2 + a1\n  6990: a1 = a2 <u a1\n  6993: a5 = u64 [s1 + 0x4b8]\n  6997: a3 = u64 [s1 + 0x4e8]\n  7001: a3 = a3 + a5\n  7004: a3 = a3 + a1\n  7007: a4 = a3 ^ a5\n  7010: a5 = a3 <u a5\n  7013: a5 = a1 if a4 == 0\n  7016: a1 = u64 [s1 + 0x4e0]\n  7020: t1 = reverse a1\n  7022: a4 = t1 >> 0x18\n  7025: u8 [a0 + 0x3] = a4\n  7028: a4 = t1 >> 0x10\n  7031: u8 [a0 + 0x2] = a4\n  7034: a4 = t1 >> 0x8\n  7037: u8 [a0 + 0x1] = a4\n  7040: ra = u64 [s1 + 0x4d0]\n  7044: t0 = u64 [s1 + 0x4c0]\n  7048: a4 = t0 + ra\n  7051: a5 = a5 + a4\n  7054: t0 = a4 <u t0\n  7057: t2 = a5 <u a4\n  7060: a4 = u64 [s1 + 0x4c8]\n  7064: a4 = a4 + a1\n  7067: a4 = a4 + t0\n  7070: t2 = t2 + a4\n  7073: t0 = a2 + 0x24\n  7076: a2 = t0 <u a2\n  7079: a4 = a3 + a2\n  7082: a3 = a4 <u a3\n  7085: a3 = a2 if a2 == 0\n  7088: u8 [a0] = t1\n  7090: a2 = u64 [s1 + 0x4f8]\n  7094: a2 = u32 [a2]\n  7096: a3 = a3 + a5\n  7099: a5 = a3 <u a5\n  7102: a5 = a5 + t2\n  7105: a2 = a2 <u t0\n  7108: t0 = a4 <u 0x1\n  7111: t2 = a2 ^ 0x1\n  7114: t2 = t0 if a4 != 0\n  7117: a4 = a3 <u 0x1\n  7120: a2 = a5 <u 0x1\n  7123: a2 = a4 if a5 == 0\n  7126: a3 = a3 | a5\n  7129: a5 = u64 [s1 + 0x4e8]\n  7133: t2 = a2 if a3 != 0\n  7136: a1 = u64 [s1 + 0x4f0]\n  7140: a2 = reverse a1\n  7142: a3 = a2 >> 0x38\n  7145: u8 [a0 + 0x1f] = a3\n  7148: a3 = a2 >> 0x30\n  7151: u8 [a0 + 0x1e] = a3\n  7154: a3 = a2 >> 0x28\n  7157: u8 [a0 + 0x1d] = a3\n  7160: a3 = a2 >> 0x20\n  7163: u8 [a0 + 0x1c] = a3\n  7166: a3 = a2 >> 0x18\n  7169: u8 [a0 + 0x1b] = a3\n  7172: a3 = a2 >> 0x10\n  7175: u8 [a0 + 0x1a] = a3\n  7178: a3 = a2 >> 0x8\n  7181: u8 [a0 + 0x19] = a3\n  7184: a3 = reverse a5\n  7186: u8 [a0 + 0x18] = a2\n  7189: a2 = a3 >> 0x38\n  7192: u8 [a0 + 0x17] = a2\n  7195: a2 = a3 >> 0x30\n  7198: u8 [a0 + 0x16] = a2\n  7201: a2 = a3 >> 0x28\n  7204: u8 [a0 + 0x15] = a2\n  7207: a2 = a3 >> 0x20\n  7210: u8 [a0 + 0x14] = a2\n  7213: a2 = a3 >> 0x18\n  7216: u8 [a0 + 0x13] = a2\n  7219: a2 = a3 >> 0x10\n  7222: u8 [a0 + 0x12] = a2\n  7225: a2 = a3 >> 0x8\n  7228: u8 [a0 + 0x11] = a2\n  7231: a2 = reverse ra\n  7233: u8 [a0 + 0x10] = a3\n  7236: a3 = a2 >> 0x38\n  7239: u8 [a0 + 0xf] = a3\n  7242: a3 = a2 >> 0x30\n  7245: u8 [a0 + 0xe] = a3\n  7248: a3 = a2 >> 0x28\n  7251: u8 [a0 + 0xd] = a3\n  7254: a3 = a2 >> 0x20\n  7257: u8 [a0 + 0xc] = a3\n  7260: a3 = a2 >> 0x18\n  7263: u8 [a0 + 0xb] = a3\n  7266: a3 = a2 >> 0x10\n  7269: u8 [a0 + 0xa] = a3\n  7272: a3 = a2 >> 0x8\n  7275: u8 [a0 + 0x9] = a3\n  7278: u8 [a0 + 0x8] = a2\n  7281: a2 = t1 >> 0x38\n  7284: u8 [a0 + 0x7] = a2\n  7287: a2 = t1 >> 0x30\n  7290: u8 [a0 + 0x6] = a2\n  7293: a2 = t1 >> 0x28\n  7296: u8 [a0 + 0x5] = a2\n  7299: a1 = t1 >> 0x20\n  7302: u8 [a0 + 0x4] = a1\n  7305: jump @126 if t2 != 0\n      : @125 (gas: 1)\n  7308: jump @289\n      : @126 (gas: 10)\n  7311: a0 = u64 [s1 + 0x4f0]\n  7315: a0 = a0 | ra\n  7318: a1 = u64 [s1 + 0x4e0]\n  7322: a1 = a1 | a5\n  7325: a0 = a0 | a1\n  7328: a0 = a0 >> 0x20\n  7331: a1 = a1 | ra\n  7334: a1 = a1 << 0x20\n  7337: a0 = a0 | a1\n  7340: jump @128 if a0 == 0\n      : @127 (gas: 1)\n  7343: jump @222\n      : @128 (gas: 7)\n  7346: a0 = u64 [s1 + 0x4d8]\n  7350: i32 a0 = a0 + 0x24\n  7353: u64 [s1 + 0x4e0] = a0\n  7357: a1 = i32 [s1 + 0x4f0]\n  7361: u64 [s1 + 0x4f8] = a1\n  7365: a0 = 0xa0\n  7369: ra = 68, jump @0\n      : @129 [@dyn 34] (gas: 5)\n  7374: i32 a0 = a0 + 0\n  7376: a1 = u64 [s1 + 0x4f8]\n  7380: a2 = u64 [s1 + 0x4e0]\n  7384: ecalli 0 // 'call_data_copy'\n  7385: fallthrough\n      : @130 (gas: 8)\n  7386: a0 = 0xffffff60\n  7396: a1 = u64 [s1 + 0x4f0]\n  7400: a0 = a1 <u a0\n  7403: a1 = u64 [s1 + 0x4e8]\n  7407: a0 = 0 if a1 != 0\n  7409: a1 = u64 [s1 + 0x498]\n  7413: a0 = 0 if a1 != 0\n  7415: jump @132 if a0 != 0\n      : @131 (gas: 1)\n  7418: jump @222\n      : @132 (gas: 4)\n  7421: a0 = u64 [s1 + 0x4f8]\n  7425: i32 a0 = a0 + 0xa0\n  7429: a1 = 0x20\n  7432: ra = 70, jump @0\n      : @133 [@dyn 35] (gas: 65)\n  7437: u8 [a0 + 31] = 0\n  7440: u8 [a0 + 30] = 0\n  7443: u8 [a0 + 29] = 0\n  7446: u8 [a0 + 28] = 0\n  7449: u8 [a0 + 27] = 0\n  7452: u8 [a0 + 26] = 0\n  7455: u8 [a0 + 25] = 0\n  7458: u8 [a0 + 24] = 0\n  7461: u8 [a0 + 23] = 0\n  7464: u8 [a0 + 22] = 0\n  7467: u8 [a0 + 21] = 0\n  7470: u8 [a0 + 20] = 0\n  7473: u8 [a0 + 19] = 0\n  7476: u8 [a0 + 18] = 0\n  7479: u8 [a0 + 17] = 0\n  7482: u8 [a0 + 16] = 0\n  7485: u8 [a0 + 15] = 0\n  7488: u8 [a0 + 14] = 0\n  7491: u8 [a0 + 13] = 0\n  7494: u8 [a0 + 12] = 0\n  7497: u8 [a0 + 11] = 0\n  7500: u8 [a0 + 10] = 0\n  7503: u8 [a0 + 9] = 0\n  7506: u8 [a0 + 8] = 0\n  7509: u8 [a0 + 7] = 0\n  7512: u8 [a0 + 6] = 0\n  7515: u8 [a0 + 5] = 0\n  7518: u8 [a0 + 4] = 0\n  7521: u8 [a0 + 3] = 0\n  7524: u8 [a0 + 2] = 0\n  7527: u8 [a0 + 1] = 0\n  7530: u8 [a0 + 0] = 0\n  7532: a0 = s1 + 0x1000\n  7536: i32 a0 = a0 + 0xfffffffffffffc60\n  7540: a1 = 0x24\n  7543: ecalli 1 // 'call_data_load'\n  7545: a1 = s1 + 0x7ff\n  7549: a1 = a1 + 0x479\n  7553: a0 = u64 [a1]\n  7555: u64 [s1 + 0x4a0] = a0\n  7559: a0 = u64 [a1 + 0xfffffffffffffff8]\n  7562: u64 [s1 + 0x4a8] = a0\n  7566: a0 = s1 + 0x1000\n  7570: a0 = u64 [a0 + 0xfffffffffffffc68]\n  7574: u64 [s1 + 0x4b0] = a0\n  7578: a0 = s1 + 0x1000\n  7582: a0 = u64 [a0 + 0xfffffffffffffc60]\n  7586: u64 [s1 + 0x4b8] = a0\n  7590: a0 = s1 + 0x1000\n  7594: i32 a0 = a0 + 0xfffffffffffffc80\n  7598: a1 = 0x44\n  7601: ecalli 1 // 'call_data_load'\n  7603: a1 = s1 + 0x7ff\n  7607: a1 = a1 + 0x479\n  7611: a0 = u64 [a1 + 0x20]\n  7614: u64 [s1 + 0x480] = a0\n  7618: a0 = u64 [a1 + 0x18]\n  7621: u64 [s1 + 0x488] = a0\n  7625: a0 = u64 [a1 + 0x10]\n  7628: u64 [s1 + 0x490] = a0\n  7632: a0 = u64 [a1 + 0x8]\n  7635: u64 [s1 + 0x498] = a0\n  7639: a0 = 0x40\n  7642: a1 = 0x20\n  7645: ra = 72, jump @0\n      : @134 [@dyn 36] (gas: 111)\n  7650: a1 = u8 [a0 + 0x19]\n  7653: a2 = u8 [a0 + 0x18]\n  7656: a3 = u8 [a0 + 0x1a]\n  7659: a4 = u8 [a0 + 0x1b]\n  7662: a1 = a1 << 0x8\n  7665: a1 = a1 | a2\n  7668: a3 = a3 << 0x10\n  7671: a4 = a4 << 0x18\n  7674: a3 = a3 | a4\n  7677: a1 = a1 | a3\n  7680: a2 = u8 [a0 + 0x1d]\n  7683: a3 = u8 [a0 + 0x1c]\n  7686: a4 = u8 [a0 + 0x1e]\n  7689: a5 = u8 [a0 + 0x1f]\n  7692: a2 = a2 << 0x8\n  7695: a2 = a2 | a3\n  7698: a4 = a4 << 0x10\n  7701: a5 = a5 << 0x18\n  7704: a4 = a4 | a5\n  7707: a2 = a2 | a4\n  7710: a2 = a2 << 0x20\n  7713: t0 = a2 | a1\n  7716: a2 = u8 [a0 + 0x11]\n  7719: a3 = u8 [a0 + 0x10]\n  7722: a4 = u8 [a0 + 0x12]\n  7725: a5 = u8 [a0 + 0x13]\n  7728: a2 = a2 << 0x8\n  7731: a2 = a2 | a3\n  7734: a4 = a4 << 0x10\n  7737: a5 = a5 << 0x18\n  7740: a4 = a4 | a5\n  7743: a2 = a2 | a4\n  7746: a3 = u8 [a0 + 0x15]\n  7749: a4 = u8 [a0 + 0x14]\n  7752: a5 = u8 [a0 + 0x16]\n  7755: a1 = u8 [a0 + 0x17]\n  7758: a3 = a3 << 0x8\n  7761: a3 = a3 | a4\n  7764: a5 = a5 << 0x10\n  7767: a1 = a1 << 0x18\n  7770: a1 = a1 | a5\n  7773: a1 = a1 | a3\n  7776: a1 = a1 << 0x20\n  7779: t1 = a1 | a2\n  7782: a1 = u8 [a0 + 0x9]\n  7785: a3 = u8 [a0 + 0x8]\n  7788: a4 = u8 [a0 + 0xa]\n  7791: a5 = u8 [a0 + 0xb]\n  7794: a1 = a1 << 0x8\n  7797: a1 = a1 | a3\n  7800: a4 = a4 << 0x10\n  7803: a5 = a5 << 0x18\n  7806: a4 = a4 | a5\n  7809: a1 = a1 | a4\n  7812: a3 = u8 [a0 + 0xd]\n  7815: a4 = u8 [a0 + 0xc]\n  7818: a5 = u8 [a0 + 0xe]\n  7821: a2 = u8 [a0 + 0xf]\n  7824: a3 = a3 << 0x8\n  7827: a3 = a3 | a4\n  7830: a5 = a5 << 0x10\n  7833: a2 = a2 << 0x18\n  7836: a2 = a2 | a5\n  7839: a2 = a2 | a3\n  7842: a2 = a2 << 0x20\n  7845: a3 = a2 | a1\n  7848: a1 = u8 [a0 + 0x1]\n  7851: a2 = u8 [a0]\n  7853: a4 = u8 [a0 + 0x2]\n  7856: a5 = u8 [a0 + 0x3]\n  7859: a1 = a1 << 0x8\n  7862: a1 = a1 | a2\n  7865: a4 = a4 << 0x10\n  7868: a5 = a5 << 0x18\n  7871: a4 = a4 | a5\n  7874: a1 = a1 | a4\n  7877: a2 = u8 [a0 + 0x5]\n  7880: a4 = u8 [a0 + 0x4]\n  7883: a5 = u8 [a0 + 0x6]\n  7886: a0 = u8 [a0 + 0x7]\n  7889: a2 = a2 << 0x8\n  7892: a2 = a2 | a4\n  7895: a5 = a5 << 0x10\n  7898: a0 = a0 << 0x18\n  7901: a0 = a0 | a5\n  7904: a0 = a0 | a2\n  7907: a0 = a0 << 0x20\n  7910: a0 = a0 | a1\n  7913: a4 = reverse a0\n  7915: a2 = reverse a3\n  7917: a1 = reverse t1\n  7919: a0 = reverse t0\n  7921: a3 = a0 + 0x20\n  7924: u64 [s1 + 0x4f8] = a3\n  7928: u64 [s1 + 0x4d8] = a0\n  7932: a0 = a3 <u a0\n  7935: a3 = a1 + a0\n  7938: u64 [s1 + 0x4e0] = a3\n  7942: u64 [s1 + 0x4d0] = a1\n  7946: a1 = a3 <u a1\n  7949: a1 = a0 if a0 == 0\n  7952: a1 = a1 + a2\n  7955: u64 [s1 + 0x4f0] = a1\n  7959: u64 [s1 + 0x4c8] = a2\n  7963: a0 = a1 <u a2\n  7966: u64 [s1 + 0x4c0] = a4\n  7970: a0 = a0 + a4\n  7973: u64 [s1 + 0x4e8] = a0\n  7977: a0 = 0x80\n  7981: a1 = 0x20\n  7984: ra = 74, jump @0\n      : @135 [@dyn 37] (gas: 12)\n  7989: a3 = u64 [s1 + 0x4f0]\n  7993: a1 = u64 [s1 + 0x4f8]\n  7997: a1 = a1 | a3\n  8000: a2 = u64 [s1 + 0x4e0]\n  8004: a4 = u64 [s1 + 0x4e8]\n  8008: a2 = a2 | a4\n  8011: a1 = a1 | a2\n  8014: a1 = a1 >> 0x20\n  8017: a2 = a2 | a3\n  8020: a2 = a2 << 0x20\n  8023: a1 = a1 | a2\n  8026: jump @137 if a1 == 0\n      : @136 (gas: 1)\n  8029: jump @222\n      : @137 (gas: 101)\n  8032: a1 = u8 [a0 + 0x19]\n  8035: a2 = u8 [a0 + 0x18]\n  8038: a3 = u8 [a0 + 0x1a]\n  8041: a4 = u8 [a0 + 0x1b]\n  8044: a1 = a1 << 0x8\n  8047: a1 = a1 | a2\n  8050: a3 = a3 << 0x10\n  8053: a4 = a4 << 0x18\n  8056: a3 = a3 | a4\n  8059: a1 = a1 | a3\n  8062: a2 = u8 [a0 + 0x1d]\n  8065: a3 = u8 [a0 + 0x1c]\n  8068: a4 = u8 [a0 + 0x1e]\n  8071: a5 = u8 [a0 + 0x1f]\n  8074: a2 = a2 << 0x8\n  8077: a2 = a2 | a3\n  8080: a4 = a4 << 0x10\n  8083: a5 = a5 << 0x18\n  8086: a4 = a4 | a5\n  8089: a2 = a2 | a4\n  8092: a2 = a2 << 0x20\n  8095: t0 = a2 | a1\n  8098: a1 = u8 [a0 + 0x11]\n  8101: a2 = u8 [a0 + 0x10]\n  8104: a3 = u8 [a0 + 0x12]\n  8107: a4 = u8 [a0 + 0x13]\n  8110: a1 = a1 << 0x8\n  8113: a1 = a1 | a2\n  8116: a3 = a3 << 0x10\n  8119: a4 = a4 << 0x18\n  8122: a3 = a3 | a4\n  8125: a1 = a1 | a3\n  8128: a2 = u8 [a0 + 0x15]\n  8131: a3 = u8 [a0 + 0x14]\n  8134: a4 = u8 [a0 + 0x16]\n  8137: a5 = u8 [a0 + 0x17]\n  8140: a2 = a2 << 0x8\n  8143: a2 = a2 | a3\n  8146: a4 = a4 << 0x10\n  8149: a5 = a5 << 0x18\n  8152: a4 = a4 | a5\n  8155: a2 = a2 | a4\n  8158: a2 = a2 << 0x20\n  8161: t1 = a2 | a1\n  8164: a1 = u8 [a0 + 0x9]\n  8167: a2 = u8 [a0 + 0x8]\n  8170: a3 = u8 [a0 + 0xa]\n  8173: a4 = u8 [a0 + 0xb]\n  8176: a1 = a1 << 0x8\n  8179: a1 = a1 | a2\n  8182: a3 = a3 << 0x10\n  8185: a4 = a4 << 0x18\n  8188: a3 = a3 | a4\n  8191: a1 = a1 | a3\n  8194: a2 = u8 [a0 + 0xd]\n  8197: a3 = u8 [a0 + 0xc]\n  8200: a4 = u8 [a0 + 0xe]\n  8203: a5 = u8 [a0 + 0xf]\n  8206: a2 = a2 << 0x8\n  8209: a2 = a2 | a3\n  8212: a4 = a4 << 0x10\n  8215: a5 = a5 << 0x18\n  8218: a4 = a4 | a5\n  8221: a2 = a2 | a4\n  8224: a2 = a2 << 0x20\n  8227: ra = a2 | a1\n  8230: a1 = u8 [a0 + 0x1]\n  8233: a2 = u8 [a0]\n  8235: a3 = u8 [a0 + 0x2]\n  8238: a4 = u8 [a0 + 0x3]\n  8241: a1 = a1 << 0x8\n  8244: a1 = a1 | a2\n  8247: a3 = a3 << 0x10\n  8250: a4 = a4 << 0x18\n  8253: a3 = a3 | a4\n  8256: a1 = a1 | a3\n  8259: a2 = u8 [a0 + 0x5]\n  8262: a3 = u8 [a0 + 0x4]\n  8265: a4 = u8 [a0 + 0x6]\n  8268: a0 = u8 [a0 + 0x7]\n  8271: a2 = a2 << 0x8\n  8274: a2 = a2 | a3\n  8277: a4 = a4 << 0x10\n  8280: a0 = a0 << 0x18\n  8283: a0 = a0 | a4\n  8286: a0 = a0 | a2\n  8289: a0 = a0 << 0x20\n  8292: a2 = a0 | a1\n  8295: a3 = reverse a2\n  8297: a4 = reverse ra\n  8299: a5 = reverse t1\n  8301: a0 = reverse t0\n  8303: t2 = a0\n  8305: a0 = a0 | a4\n  8308: a1 = a5 | a3\n  8311: a0 = a0 | a1\n  8314: a0 = a0 >> 0x20\n  8317: a1 = a1 | a4\n  8320: a1 = a1 << 0x20\n  8323: a0 = a0 | a1\n  8326: jump @139 if a0 == 0\n      : @138 (gas: 1)\n  8329: jump @222\n      : @139 (gas: 13)\n  8332: u64 [s1 + 0x430] = a2\n  8336: u64 [s1 + 0x438] = ra\n  8340: u64 [s1 + 0x440] = t1\n  8344: u64 [s1 + 0x448] = t0\n  8348: a0 = i32 [s1 + 0x4f8]\n  8352: u64 [s1 + 0x478] = t2\n  8356: i32 a1 = t2 + 0\n  8358: u64 [s1 + 0x450] = a1\n  8362: u64 [s1 + 0x428] = a0\n  8366: u64 [s1 + 0x470] = a3\n  8370: u64 [s1 + 0x468] = a4\n  8374: u64 [s1 + 0x460] = a5\n  8378: ra = 76, jump @0\n      : @140 [@dyn 38] (gas: 4)\n  8383: u64 [s1 + 0x458] = a0\n  8387: a0 = 0xa0\n  8391: a1 = u64 [s1 + 0x450]\n  8395: ra = 78, jump @0\n      : @141 [@dyn 39] (gas: 4)\n  8400: a1 = a0\n  8402: a0 = u64 [s1 + 0x458]\n  8406: a2 = u64 [s1 + 0x478]\n  8410: ra = 80, jump @8\n      : @142 [@dyn 40] (gas: 30)\n  8415: t0 = u64 [s1 + 0x478]\n  8419: a0 = u64 [s1 + 0x4f8]\n  8423: t0 = t0 + a0\n  8426: a1 = t0 <u a0\n  8429: a4 = u64 [s1 + 0x4e0]\n  8433: a2 = u64 [s1 + 0x460]\n  8437: a2 = a2 + a4\n  8440: a2 = a2 + a1\n  8443: a3 = a2 ^ a4\n  8446: a4 = a2 <u a4\n  8449: a4 = a1 if a3 == 0\n  8452: a3 = u64 [s1 + 0x4f0]\n  8456: a1 = u64 [s1 + 0x468]\n  8460: a1 = a1 + a3\n  8463: a3 = a1 <u a3\n  8466: a5 = u64 [s1 + 0x4e8]\n  8470: a0 = u64 [s1 + 0x470]\n  8474: a5 = a5 + a0\n  8477: a3 = a3 + a5\n  8480: a4 = a4 + a1\n  8483: a1 = a4 <u a1\n  8486: a1 = a1 + a3\n  8489: a1 = a1 | a2\n  8492: a2 = t0 | a4\n  8495: a2 = a2 | a1\n  8498: a1 = a1 | a4\n  8501: a2 = a2 >> 0x20\n  8504: a1 = a1 << 0x20\n  8507: a1 = a1 | a2\n  8510: jump @144 if a1 == 0\n      : @143 (gas: 1)\n  8513: jump @222\n      : @144 (gas: 3)\n  8516: i32 a0 = t0 + 0\n  8518: a1 = 0x20\n  8521: ra = 82, jump @0\n      : @145 [@dyn 41] (gas: 44)\n  8526: a3 = u64 [s1 + 0x4d8]\n  8530: a5 = u64 [s1 + 0x4c8]\n  8534: a1 = a3 | a5\n  8537: a4 = u64 [s1 + 0x4d0]\n  8541: t0 = u64 [s1 + 0x4c0]\n  8545: a2 = a4 | t0\n  8548: a1 = a1 | a2\n  8551: a1 = a1 >> 0x20\n  8554: a2 = a2 | a5\n  8557: a2 = a2 << 0x20\n  8560: a1 = a1 | a2\n  8563: u8 [a0 + 31] = 0\n  8566: u8 [a0 + 30] = 0\n  8569: u8 [a0 + 29] = 0\n  8572: u8 [a0 + 28] = 0\n  8575: u8 [a0 + 27] = 0\n  8578: u8 [a0 + 26] = 0\n  8581: u8 [a0 + 25] = 0\n  8584: u8 [a0 + 24] = 0\n  8587: u8 [a0 + 23] = 0\n  8590: u8 [a0 + 22] = 0\n  8593: u8 [a0 + 21] = 0\n  8596: u8 [a0 + 20] = 0\n  8599: u8 [a0 + 19] = 0\n  8602: u8 [a0 + 18] = 0\n  8605: u8 [a0 + 17] = 0\n  8608: u8 [a0 + 16] = 0\n  8611: u8 [a0 + 15] = 0\n  8614: u8 [a0 + 14] = 0\n  8617: u8 [a0 + 13] = 0\n  8620: u8 [a0 + 12] = 0\n  8623: u8 [a0 + 11] = 0\n  8626: u8 [a0 + 10] = 0\n  8629: u8 [a0 + 9] = 0\n  8632: u8 [a0 + 8] = 0\n  8635: u8 [a0 + 7] = 0\n  8638: u8 [a0 + 6] = 0\n  8641: u8 [a0 + 5] = 0\n  8644: u8 [a0 + 4] = 0\n  8647: u8 [a0 + 3] = 0\n  8650: u8 [a0 + 2] = 0\n  8653: u8 [a0 + 1] = 0\n  8656: u8 [a0 + 0] = 0\n  8658: jump @147 if a1 == 0\n      : @146 (gas: 1)\n  8661: jump @222\n      : @147 (gas: 20)\n  8664: a0 = u64 [s1 + 0x478]\n  8668: a1 = a0 + 0x20\n  8671: u64 [s1 + 0x4e8] = a1\n  8675: a0 = a1 <u a0\n  8678: a1 = u64 [s1 + 0x460]\n  8682: a2 = a1 + a0\n  8685: u64 [s1 + 0x4e0] = a2\n  8689: a1 = a2 <u a1\n  8692: a1 = a0 if a0 == 0\n  8695: a0 = u64 [s1 + 0x468]\n  8699: a1 = a1 + a0\n  8702: u64 [s1 + 0x478] = a1\n  8706: a0 = a1 <u a0\n  8709: a1 = u64 [s1 + 0x470]\n  8713: a0 = a0 + a1\n  8716: u64 [s1 + 0x4f8] = a0\n  8720: i32 a0 = a3 + 0\n  8722: u64 [s1 + 0x4f0] = a0\n  8726: a1 = 0x20\n  8729: ra = 84, jump @0\n      : @148 [@dyn 42] (gas: 93)\n  8734: a3 = u64 [s1 + 0x440]\n  8738: u8 [a0 + 0x10] = a3\n  8741: a2 = u64 [s1 + 0x438]\n  8745: a1 = a2 >> 0x38\n  8748: u8 [a0 + 0xf] = a1\n  8751: a1 = a2 >> 0x30\n  8754: u8 [a0 + 0xe] = a1\n  8757: a1 = a2 >> 0x28\n  8760: u8 [a0 + 0xd] = a1\n  8763: a1 = a2 >> 0x20\n  8766: u8 [a0 + 0xc] = a1\n  8769: a1 = a2 >> 0x18\n  8772: u8 [a0 + 0xb] = a1\n  8775: a1 = a2 >> 0x10\n  8778: u8 [a0 + 0xa] = a1\n  8781: a1 = a2 >> 0x8\n  8784: u8 [a0 + 0x9] = a1\n  8787: u8 [a0 + 0x8] = a2\n  8790: a2 = u64 [s1 + 0x430]\n  8794: a1 = a2 >> 0x38\n  8797: u8 [a0 + 0x7] = a1\n  8800: a1 = a2 >> 0x30\n  8803: u8 [a0 + 0x6] = a1\n  8806: a1 = a2 >> 0x28\n  8809: u8 [a0 + 0x5] = a1\n  8812: a1 = a2 >> 0x20\n  8815: u8 [a0 + 0x4] = a1\n  8818: a1 = a2 >> 0x18\n  8821: u8 [a0 + 0x3] = a1\n  8824: a1 = a2 >> 0x10\n  8827: u8 [a0 + 0x2] = a1\n  8830: a1 = a2 >> 0x8\n  8833: u8 [a0 + 0x1] = a1\n  8836: u8 [a0] = a2\n  8838: a2 = u64 [s1 + 0x448]\n  8842: u8 [a0 + 0x18] = a2\n  8845: a1 = a3 >> 0x38\n  8848: u8 [a0 + 0x17] = a1\n  8851: a1 = a3 >> 0x30\n  8854: u8 [a0 + 0x16] = a1\n  8857: a1 = a3 >> 0x28\n  8860: u8 [a0 + 0x15] = a1\n  8863: a1 = a3 >> 0x20\n  8866: u8 [a0 + 0x14] = a1\n  8869: a1 = a3 >> 0x18\n  8872: u8 [a0 + 0x13] = a1\n  8875: a1 = a3 >> 0x10\n  8878: u8 [a0 + 0x12] = a1\n  8881: a1 = a3 >> 0x8\n  8884: u8 [a0 + 0x11] = a1\n  8887: a1 = a2 >> 0x38\n  8890: u8 [a0 + 0x1f] = a1\n  8893: a1 = a2 >> 0x30\n  8896: u8 [a0 + 0x1e] = a1\n  8899: a1 = a2 >> 0x28\n  8902: u8 [a0 + 0x1d] = a1\n  8905: a1 = a2 >> 0x20\n  8908: u8 [a0 + 0x1c] = a1\n  8911: a1 = a2 >> 0x18\n  8914: u8 [a0 + 0x1b] = a1\n  8917: a1 = a2 >> 0x10\n  8920: u8 [a0 + 0x1a] = a1\n  8923: a1 = a2 >> 0x8\n  8926: u8 [a0 + 0x19] = a1\n  8929: a0 = u64 [s1 + 0x478]\n  8933: a1 = s1 + 0x1000\n  8937: u64 [a1 + 0xfffffffffffff950] = a0\n  8941: a0 = u64 [s1 + 0x4e0]\n  8945: a1 = s1 + 0x1000\n  8949: u64 [a1 + 0xfffffffffffff948] = a0\n  8953: a0 = u64 [s1 + 0x4e8]\n  8957: a1 = s1 + 0x1000\n  8961: u64 [a1 + 0xfffffffffffff940] = a0\n  8965: a0 = u64 [s1 + 0x4c0]\n  8969: a1 = s1 + 0x1000\n  8973: u64 [a1 + 0xfffffffffffff978] = a0\n  8977: a0 = u64 [s1 + 0x4c8]\n  8981: a1 = s1 + 0x1000\n  8985: u64 [a1 + 0xfffffffffffff970] = a0\n  8989: a0 = u64 [s1 + 0x4d0]\n  8993: a1 = s1 + 0x1000\n  8997: u64 [a1 + 0xfffffffffffff968] = a0\n  9001: a0 = u64 [s1 + 0x4d8]\n  9005: a1 = s1 + 0x1000\n  9009: u64 [a1 + 0xfffffffffffff960] = a0\n  9013: a0 = s1 + 0x7ff\n  9017: a0 = a0 + 0x161\n  9021: a1 = s1 + 0x7ff\n  9025: a1 = a1 + 0x141\n  9029: a2 = u64 [s1 + 0x4f8]\n  9033: a3 = s1 + 0x1000\n  9037: u64 [a3 + 0xfffffffffffff958] = a2\n  9041: ra = 86, jump @315\n      : @149 [@dyn 43] (gas: 3)\n  9046: a1 = 0x20\n  9049: a0 = u64 [s1 + 0x4f0]\n  9053: ra = 88, jump @0\n      : @150 [@dyn 44] (gas: 100)\n  9058: a1 = u8 [a0 + 0x11]\n  9061: a2 = u8 [a0 + 0x10]\n  9064: a3 = u8 [a0 + 0x12]\n  9067: a4 = u8 [a0 + 0x13]\n  9070: a1 = a1 << 0x8\n  9073: a1 = a1 | a2\n  9076: a3 = a3 << 0x10\n  9079: a4 = a4 << 0x18\n  9082: a3 = a3 | a4\n  9085: a1 = a1 | a3\n  9088: a2 = u8 [a0 + 0x15]\n  9091: a3 = u8 [a0 + 0x14]\n  9094: a4 = u8 [a0 + 0x16]\n  9097: a5 = u8 [a0 + 0x17]\n  9100: a2 = a2 << 0x8\n  9103: a2 = a2 | a3\n  9106: a4 = a4 << 0x10\n  9109: a5 = a5 << 0x18\n  9112: a4 = a4 | a5\n  9115: a2 = a2 | a4\n  9118: a2 = a2 << 0x20\n  9121: t0 = a2 | a1\n  9124: a2 = u8 [a0 + 0x1]\n  9127: a3 = u8 [a0]\n  9129: a4 = u8 [a0 + 0x2]\n  9132: a5 = u8 [a0 + 0x3]\n  9135: a2 = a2 << 0x8\n  9138: a2 = a2 | a3\n  9141: a4 = a4 << 0x10\n  9144: a5 = a5 << 0x18\n  9147: a4 = a4 | a5\n  9150: a2 = a2 | a4\n  9153: a3 = u8 [a0 + 0x5]\n  9156: a4 = u8 [a0 + 0x4]\n  9159: a5 = u8 [a0 + 0x6]\n  9162: a1 = u8 [a0 + 0x7]\n  9165: a3 = a3 << 0x8\n  9168: a3 = a3 | a4\n  9171: a5 = a5 << 0x10\n  9174: a1 = a1 << 0x18\n  9177: a1 = a1 | a5\n  9180: a1 = a1 | a3\n  9183: a1 = a1 << 0x20\n  9186: t1 = a1 | a2\n  9189: a1 = u8 [a0 + 0x19]\n  9192: a3 = u8 [a0 + 0x18]\n  9195: a4 = u8 [a0 + 0x1a]\n  9198: a5 = u8 [a0 + 0x1b]\n  9201: a1 = a1 << 0x8\n  9204: a1 = a1 | a3\n  9207: a4 = a4 << 0x10\n  9210: a5 = a5 << 0x18\n  9213: a4 = a4 | a5\n  9216: a1 = a1 | a4\n  9219: a3 = u8 [a0 + 0x1d]\n  9222: a4 = u8 [a0 + 0x1c]\n  9225: a5 = u8 [a0 + 0x1e]\n  9228: a2 = u8 [a0 + 0x1f]\n  9231: a3 = a3 << 0x8\n  9234: a3 = a3 | a4\n  9237: a5 = a5 << 0x10\n  9240: a2 = a2 << 0x18\n  9243: a2 = a2 | a5\n  9246: a2 = a2 | a3\n  9249: a2 = a2 << 0x20\n  9252: a3 = a2 | a1\n  9255: a1 = u8 [a0 + 0x9]\n  9258: a2 = u8 [a0 + 0x8]\n  9261: a4 = u8 [a0 + 0xa]\n  9264: a5 = u8 [a0 + 0xb]\n  9267: a1 = a1 << 0x8\n  9270: a1 = a1 | a2\n  9273: a4 = a4 << 0x10\n  9276: a5 = a5 << 0x18\n  9279: a4 = a4 | a5\n  9282: a1 = a1 | a4\n  9285: a2 = u8 [a0 + 0xd]\n  9288: a4 = u8 [a0 + 0xc]\n  9291: a5 = u8 [a0 + 0xe]\n  9294: a0 = u8 [a0 + 0xf]\n  9297: a2 = a2 << 0x8\n  9300: a2 = a2 | a4\n  9303: a5 = a5 << 0x10\n  9306: a0 = a0 << 0x18\n  9309: a0 = a0 | a5\n  9312: a0 = a0 | a2\n  9315: a0 = a0 << 0x20\n  9318: a0 = a0 | a1\n  9321: a1 = reverse a0\n  9323: a0 = reverse a3\n  9325: a2 = reverse t1\n  9327: a3 = reverse t0\n  9329: a2 = a2 | a3\n  9332: a3 = a0 | a1\n  9335: a3 = a3 | a2\n  9338: a3 = a3 >> 0x20\n  9341: a1 = a1 | a2\n  9344: a1 = a1 << 0x20\n  9347: a1 = a1 | a3\n  9350: jump @152 if a1 == 0\n      : @151 (gas: 1)\n  9353: jump @222\n      : @152 (gas: 4)\n  9356: i32 a1 = a0 + 0\n  9358: u64 [s1 + 0x4f8] = a1\n  9362: a0 = u64 [s1 + 0x428]\n  9366: ra = 90, jump @0\n      : @153 [@dyn 45] (gas: 20)\n  9371: a1 = sp + 0xffffffffffffffe0\n  9374: a1 = a1 & 0xffffffffffffffe0\n  9377: u64 [s1 + 0x4f0] = a1\n  9381: sp = a1\n  9383: i32 a0 = a0 + 0\n  9385: i32 a2 = a1 + 0\n  9387: a1 = u64 [s1 + 0x4f8]\n  9391: ecalli 6 // 'hash_keccak_256'\n  9393: a1 = u64 [s1 + 0x4f0]\n  9397: a0 = u64 [a1]\n  9399: u64 [s1 + 0x478] = a0\n  9403: a0 = u64 [a1 + 0x8]\n  9406: u64 [s1 + 0x470] = a0\n  9410: a0 = u64 [a1 + 0x10]\n  9413: u64 [s1 + 0x468] = a0\n  9417: a0 = u64 [a1 + 0x18]\n  9420: u64 [s1 + 0x460] = a0\n  9424: a1 = 0x20\n  9427: a0 = 0\n  9429: ra = 92, jump @0\n      : @154 [@dyn 46] (gas: 95)\n  9434: a2 = u64 [s1 + 0x460]\n  9438: a1 = a2 >> 0x38\n  9441: u64 [s1 + 0x458] = a1\n  9445: u8 [a0 + 0x1f] = a1\n  9448: a1 = a2 >> 0x30\n  9451: u64 [s1 + 0x450] = a1\n  9455: u8 [a0 + 0x1e] = a1\n  9458: a1 = a2 >> 0x28\n  9461: u64 [s1 + 0x448] = a1\n  9465: u8 [a0 + 0x1d] = a1\n  9468: a1 = a2 >> 0x20\n  9471: u64 [s1 + 0x440] = a1\n  9475: u8 [a0 + 0x1c] = a1\n  9478: a1 = a2 >> 0x18\n  9481: u64 [s1 + 0x438] = a1\n  9485: u8 [a0 + 0x1b] = a1\n  9488: a1 = a2 >> 0x10\n  9491: u64 [s1 + 0x430] = a1\n  9495: u8 [a0 + 0x1a] = a1\n  9498: a1 = a2 >> 0x8\n  9501: u64 [s1 + 0x428] = a1\n  9505: u8 [a0 + 0x19] = a1\n  9508: u8 [a0 + 0x18] = a2\n  9511: a2 = u64 [s1 + 0x468]\n  9515: a1 = a2 >> 0x38\n  9518: u64 [s1 + 0x420] = a1\n  9522: u8 [a0 + 0x17] = a1\n  9525: a1 = a2 >> 0x30\n  9528: u64 [s1 + 0x418] = a1\n  9532: u8 [a0 + 0x16] = a1\n  9535: a1 = a2 >> 0x28\n  9538: u64 [s1 + 0x410] = a1\n  9542: u8 [a0 + 0x15] = a1\n  9545: a1 = a2 >> 0x20\n  9548: u64 [s1 + 0x408] = a1\n  9552: u8 [a0 + 0x14] = a1\n  9555: a1 = a2 >> 0x18\n  9558: u64 [s1 + 0x400] = a1\n  9562: u8 [a0 + 0x13] = a1\n  9565: a1 = a2 >> 0x10\n  9568: u64 [s1 + 0x3f8] = a1\n  9572: u8 [a0 + 0x12] = a1\n  9575: a1 = a2 >> 0x8\n  9578: u64 [s1 + 0x3f0] = a1\n  9582: u8 [a0 + 0x11] = a1\n  9585: u8 [a0 + 0x10] = a2\n  9588: a2 = u64 [s1 + 0x470]\n  9592: a1 = a2 >> 0x38\n  9595: u64 [s1 + 0x3e8] = a1\n  9599: u8 [a0 + 0xf] = a1\n  9602: a1 = a2 >> 0x30\n  9605: u64 [s1 + 0x3e0] = a1\n  9609: u8 [a0 + 0xe] = a1\n  9612: a1 = a2 >> 0x28\n  9615: u64 [s1 + 0x3d8] = a1\n  9619: u8 [a0 + 0xd] = a1\n  9622: a1 = a2 >> 0x20\n  9625: u64 [s1 + 0x3d0] = a1\n  9629: u8 [a0 + 0xc] = a1\n  9632: a1 = a2 >> 0x18\n  9635: u64 [s1 + 0x3c8] = a1\n  9639: u8 [a0 + 0xb] = a1\n  9642: a1 = a2 >> 0x10\n  9645: u64 [s1 + 0x3c0] = a1\n  9649: u8 [a0 + 0xa] = a1\n  9652: a1 = a2 >> 0x8\n  9655: u64 [s1 + 0x3b8] = a1\n  9659: u8 [a0 + 0x9] = a1\n  9662: u8 [a0 + 0x8] = a2\n  9665: a2 = u64 [s1 + 0x478]\n  9669: a1 = a2 >> 0x38\n  9672: u64 [s1 + 0x3b0] = a1\n  9676: u8 [a0 + 0x7] = a1\n  9679: a1 = a2 >> 0x30\n  9682: u64 [s1 + 0x3a8] = a1\n  9686: u8 [a0 + 0x6] = a1\n  9689: a1 = a2 >> 0x28\n  9692: u64 [s1 + 0x3a0] = a1\n  9696: u8 [a0 + 0x5] = a1\n  9699: a1 = a2 >> 0x20\n  9702: u64 [s1 + 0x398] = a1\n  9706: u8 [a0 + 0x4] = a1\n  9709: a1 = a2 >> 0x18\n  9712: u64 [s1 + 0x390] = a1\n  9716: u8 [a0 + 0x3] = a1\n  9719: a1 = a2 >> 0x10\n  9722: u64 [s1 + 0x388] = a1\n  9726: u8 [a0 + 0x2] = a1\n  9729: a1 = a2 >> 0x8\n  9732: u64 [s1 + 0x380] = a1\n  9736: u8 [a0 + 0x1] = a1\n  9739: u8 [a0] = a2\n  9741: a0 = 0x20\n  9744: a1 = 0x20\n  9747: ra = 94, jump @0\n      : @155 [@dyn 47] (gas: 35)\n  9752: u8 [a0 + 31] = 0x1\n  9756: u8 [a0 + 30] = 0\n  9759: u8 [a0 + 29] = 0\n  9762: u8 [a0 + 28] = 0\n  9765: u8 [a0 + 27] = 0\n  9768: u8 [a0 + 26] = 0\n  9771: u8 [a0 + 25] = 0\n  9774: u8 [a0 + 24] = 0\n  9777: u8 [a0 + 23] = 0\n  9780: u8 [a0 + 22] = 0\n  9783: u8 [a0 + 21] = 0\n  9786: u8 [a0 + 20] = 0\n  9789: u8 [a0 + 19] = 0\n  9792: u8 [a0 + 18] = 0\n  9795: u8 [a0 + 17] = 0\n  9798: u8 [a0 + 16] = 0\n  9801: u8 [a0 + 15] = 0\n  9804: u8 [a0 + 14] = 0\n  9807: u8 [a0 + 13] = 0\n  9810: u8 [a0 + 12] = 0\n  9813: u8 [a0 + 11] = 0\n  9816: u8 [a0 + 10] = 0\n  9819: u8 [a0 + 9] = 0\n  9822: u8 [a0 + 8] = 0\n  9825: u8 [a0 + 7] = 0\n  9828: u8 [a0 + 6] = 0\n  9831: u8 [a0 + 5] = 0\n  9834: u8 [a0 + 4] = 0\n  9837: u8 [a0 + 3] = 0\n  9840: u8 [a0 + 2] = 0\n  9843: u8 [a0 + 1] = 0\n  9846: u8 [a0 + 0] = 0\n  9848: a1 = 0x40\n  9851: a0 = 0\n  9853: ra = 96, jump @0\n      : @156 [@dyn 48] (gas: 30)\n  9858: a1 = sp + 0xffffffffffffffe0\n  9861: a1 = a1 & 0xffffffffffffffe0\n  9864: u64 [s1 + 0x4f8] = a1\n  9868: sp = a1\n  9870: i32 a0 = a0 + 0\n  9872: i32 a2 = a1 + 0\n  9874: a1 = 0x40\n  9877: ecalli 6 // 'hash_keccak_256'\n  9879: a3 = u64 [s1 + 0x4f8]\n  9883: a0 = u64 [a3 + 0x18]\n  9886: a1 = u64 [a3 + 0x10]\n  9889: a2 = u64 [a3 + 0x8]\n  9892: a3 = u64 [a3]\n  9894: a4 = reverse a0\n  9896: a0 = reverse a1\n  9898: a1 = reverse a2\n  9900: a2 = reverse a3\n  9902: a3 = s1 + 0x1000\n  9906: u64 [a3 + 0xfffffffffffff918] = a2\n  9910: a2 = s1 + 0x1000\n  9914: u64 [a2 + 0xfffffffffffff910] = a1\n  9918: a1 = s1 + 0x1000\n  9922: u64 [a1 + 0xfffffffffffff908] = a0\n  9926: a0 = s1 + 0x7ff\n  9930: a0 = a0 + 0x121\n  9934: a2 = s1 + 0x7ff\n  9938: a2 = a2 + 0x101\n  9942: a1 = s1 + 0x1000\n  9946: u64 [a1 + 0xfffffffffffff900] = a4\n  9950: ra = 98, jump @25\n      : @157 [@dyn 49] (gas: 6)\n  9955: a0 = s1 + 0x1000\n  9959: a0 = u8 [a0 + 0xfffffffffffff920]\n  9963: u64 [s1 + 0x4f8] = a0\n  9967: a0 = 0x40\n  9970: a1 = 0x20\n  9973: ra = 100, jump @0\n      : @158 [@dyn 50] (gas: 97)\n  9978: a1 = u8 [a0 + 0x19]\n  9981: a2 = u8 [a0 + 0x18]\n  9984: a3 = u8 [a0 + 0x1a]\n  9987: a4 = u8 [a0 + 0x1b]\n  9990: a1 = a1 << 0x8\n  9993: a1 = a1 | a2\n  9996: a3 = a3 << 0x10\n  9999: a4 = a4 << 0x18\n 10002: a3 = a3 | a4\n 10005: a1 = a1 | a3\n 10008: a2 = u8 [a0 + 0x1d]\n 10011: a3 = u8 [a0 + 0x1c]\n 10014: a4 = u8 [a0 + 0x1e]\n 10017: a5 = u8 [a0 + 0x1f]\n 10020: a2 = a2 << 0x8\n 10023: a2 = a2 | a3\n 10026: a4 = a4 << 0x10\n 10029: a5 = a5 << 0x18\n 10032: a4 = a4 | a5\n 10035: a2 = a2 | a4\n 10038: a2 = a2 << 0x20\n 10041: t0 = a2 | a1\n 10044: a2 = u8 [a0 + 0x11]\n 10047: a3 = u8 [a0 + 0x10]\n 10050: a4 = u8 [a0 + 0x12]\n 10053: a5 = u8 [a0 + 0x13]\n 10056: a2 = a2 << 0x8\n 10059: a2 = a2 | a3\n 10062: a4 = a4 << 0x10\n 10065: a5 = a5 << 0x18\n 10068: a4 = a4 | a5\n 10071: a2 = a2 | a4\n 10074: a3 = u8 [a0 + 0x15]\n 10077: a4 = u8 [a0 + 0x14]\n 10080: a5 = u8 [a0 + 0x16]\n 10083: a1 = u8 [a0 + 0x17]\n 10086: a3 = a3 << 0x8\n 10089: a3 = a3 | a4\n 10092: a5 = a5 << 0x10\n 10095: a1 = a1 << 0x18\n 10098: a1 = a1 | a5\n 10101: a1 = a1 | a3\n 10104: a1 = a1 << 0x20\n 10107: t1 = a1 | a2\n 10110: a1 = u8 [a0 + 0x9]\n 10113: a3 = u8 [a0 + 0x8]\n 10116: a4 = u8 [a0 + 0xa]\n 10119: a5 = u8 [a0 + 0xb]\n 10122: a1 = a1 << 0x8\n 10125: a1 = a1 | a3\n 10128: a4 = a4 << 0x10\n 10131: a5 = a5 << 0x18\n 10134: a4 = a4 | a5\n 10137: a1 = a1 | a4\n 10140: a3 = u8 [a0 + 0xd]\n 10143: a4 = u8 [a0 + 0xc]\n 10146: a5 = u8 [a0 + 0xe]\n 10149: a2 = u8 [a0 + 0xf]\n 10152: a3 = a3 << 0x8\n 10155: a3 = a3 | a4\n 10158: a5 = a5 << 0x10\n 10161: a2 = a2 << 0x18\n 10164: a2 = a2 | a5\n 10167: a2 = a2 | a3\n 10170: a2 = a2 << 0x20\n 10173: a3 = a2 | a1\n 10176: a1 = u8 [a0 + 0x1]\n 10179: a2 = u8 [a0]\n 10181: a4 = u8 [a0 + 0x2]\n 10184: a5 = u8 [a0 + 0x3]\n 10187: a1 = a1 << 0x8\n 10190: a1 = a1 | a2\n 10193: a4 = a4 << 0x10\n 10196: a5 = a5 << 0x18\n 10199: a4 = a4 | a5\n 10202: a1 = a1 | a4\n 10205: a2 = u8 [a0 + 0x5]\n 10208: a4 = u8 [a0 + 0x4]\n 10211: a5 = u8 [a0 + 0x6]\n 10214: a0 = u8 [a0 + 0x7]\n 10217: a2 = a2 << 0x8\n 10220: a2 = a2 | a4\n 10223: a5 = a5 << 0x10\n 10226: a0 = a0 << 0x18\n 10229: a0 = a0 | a5\n 10232: a0 = a0 | a2\n 10235: a0 = a0 << 0x20\n 10238: a0 = a0 | a1\n 10241: a4 = reverse a0\n 10243: a1 = reverse a3\n 10245: a3 = reverse t1\n 10247: a2 = reverse t0\n 10249: t0 = a2 | a1\n 10252: a5 = a3 | a4\n 10255: a0 = u64 [s1 + 0x4f8]\n 10259: u64 [s1 + 0x4f0] = a1\n 10263: jump @160 if a0 == 0\n      : @159 (gas: 1)\n 10266: jump @235\n      : @160 (gas: 16)\n 10269: a0 = s1 + 0x1000\n 10273: u64 [a0 + 0xfffffffffffff8e0] = a2\n 10277: a0 = s1 + 0x1000\n 10281: u64 [a0 + 0xfffffffffffff8e8] = a3\n 10285: a0 = s1 + 0x1000\n 10289: u64 [a0 + 0xfffffffffffff8f0] = a1\n 10293: a0 = s1 + 0x7ff\n 10297: a0 = a0 + 0xe1\n 10301: a1 = s1 + 0x1000\n 10305: u64 [a1 + 0xfffffffffffff8f8] = a4\n 10309: u64 [s1 + 0x4e8] = a2\n 10313: u64 [s1 + 0x4e0] = a3\n 10317: u64 [s1 + 0x4f8] = a4\n 10321: u64 [s1 + 0x4d0] = a5\n 10325: u64 [s1 + 0x4d8] = t0\n 10329: ra = 102, jump @308\n      : @161 [@dyn 51] (gas: 9)\n 10334: a2 = u64 [s1 + 0x4d0]\n 10338: a0 = u64 [s1 + 0x4d8]\n 10342: a0 = a0 | a2\n 10345: a0 = a0 >> 0x20\n 10348: a1 = u64 [s1 + 0x4f0]\n 10352: a1 = a1 | a2\n 10355: a1 = a1 << 0x20\n 10358: a0 = a0 | a1\n 10361: jump @163 if a0 == 0\n      : @162 (gas: 1)\n 10364: jump @222\n      : @163 (gas: 4)\n 10367: a0 = i32 [s1 + 0x4e8]\n 10371: a1 = 0x20\n 10374: u64 [s1 + 0x4d8] = a0\n 10378: ra = 104, jump @0\n      : @164 [@dyn 52] (gas: 44)\n 10383: u8 [a0 + 31] = 0x80\n 10388: u8 [a0 + 30] = 0\n 10391: u8 [a0 + 29] = 0\n 10394: u8 [a0 + 28] = 0\n 10397: u8 [a0 + 27] = 0\n 10400: u8 [a0 + 26] = 0\n 10403: u8 [a0 + 25] = 0\n 10406: u8 [a0 + 24] = 0\n 10409: u8 [a0 + 23] = 0\n 10412: u8 [a0 + 22] = 0\n 10415: u8 [a0 + 21] = 0\n 10418: u8 [a0 + 20] = 0\n 10421: u8 [a0 + 19] = 0\n 10424: u8 [a0 + 18] = 0\n 10427: u8 [a0 + 17] = 0\n 10430: u8 [a0 + 16] = 0\n 10433: u8 [a0 + 15] = 0\n 10436: u8 [a0 + 14] = 0\n 10439: u8 [a0 + 13] = 0\n 10442: u8 [a0 + 12] = 0\n 10445: u8 [a0 + 11] = 0\n 10448: u8 [a0 + 10] = 0\n 10451: u8 [a0 + 9] = 0\n 10454: u8 [a0 + 8] = 0\n 10457: u8 [a0 + 7] = 0\n 10460: u8 [a0 + 6] = 0\n 10463: u8 [a0 + 5] = 0\n 10466: u8 [a0 + 4] = 0\n 10469: u8 [a0 + 3] = 0\n 10472: u8 [a0 + 2] = 0\n 10475: u8 [a0 + 1] = 0\n 10478: a1 = u64 [s1 + 0x4f0]\n 10482: a2 = u64 [s1 + 0x4f8]\n 10486: a2 = a2 | a1\n 10489: a4 = 0x100000000\n 10499: a1 = 0xffffffe0\n 10509: a5 = u64 [s1 + 0x4e8]\n 10513: a1 = a5 <u a1\n 10516: a3 = u64 [s1 + 0x4e0]\n 10520: a1 = 0 if a3 != 0\n 10522: u64 [s1 + 0x4f8] = a2\n 10526: a1 = 0 if a2 != 0\n 10528: u8 [a0 + 0] = 0\n 10530: jump @166 if a1 != 0\n      : @165 (gas: 1)\n 10533: jump @222\n      : @166 (gas: 5)\n 10536: i32 a0 = a5 + 0x20\n 10539: a1 = 0x20\n 10542: u64 [s1 + 0x378] = a0\n 10546: u64 [s1 + 0x4f0] = a4\n 10550: ra = 106, jump @0\n      : @167 [@dyn 53] (gas: 109)\n 10555: a1 = u64 [s1 + 0x4a0]\n 10559: a2 = reverse a1\n 10561: a1 = u64 [s1 + 0x4a8]\n 10565: a4 = reverse a1\n 10567: a1 = u64 [s1 + 0x4b0]\n 10571: a5 = reverse a1\n 10573: a1 = u64 [s1 + 0x4b8]\n 10577: a3 = reverse a1\n 10579: a1 = a3 >> 0x38\n 10582: u64 [s1 + 0x368] = a1\n 10586: u8 [a0 + 0x1f] = a1\n 10589: a1 = a3 >> 0x30\n 10592: u64 [s1 + 0x360] = a1\n 10596: u8 [a0 + 0x1e] = a1\n 10599: a1 = a3 >> 0x28\n 10602: u64 [s1 + 0x358] = a1\n 10606: u8 [a0 + 0x1d] = a1\n 10609: a1 = a3 >> 0x20\n 10612: u64 [s1 + 0x350] = a1\n 10616: u8 [a0 + 0x1c] = a1\n 10619: a1 = a3 >> 0x18\n 10622: u64 [s1 + 0x348] = a1\n 10626: u8 [a0 + 0x1b] = a1\n 10629: a1 = a3 >> 0x10\n 10632: u64 [s1 + 0x338] = a1\n 10636: u8 [a0 + 0x1a] = a1\n 10639: a1 = a3 >> 0x8\n 10642: u64 [s1 + 0x370] = a1\n 10646: u8 [a0 + 0x19] = a1\n 10649: u64 [s1 + 0x330] = a3\n 10653: u8 [a0 + 0x18] = a3\n 10656: a3 = u64 [s1 + 0x4e8]\n 10660: u8 [a0 + 0x10] = a5\n 10663: a1 = a5 >> 0x38\n 10666: u64 [s1 + 0x318] = a1\n 10670: u8 [a0 + 0x17] = a1\n 10673: a1 = a5 >> 0x30\n 10676: u64 [s1 + 0x310] = a1\n 10680: u8 [a0 + 0x16] = a1\n 10683: a1 = a5 >> 0x28\n 10686: u64 [s1 + 0x308] = a1\n 10690: u8 [a0 + 0x15] = a1\n 10693: a1 = a5 >> 0x20\n 10696: u64 [s1 + 0x300] = a1\n 10700: u8 [a0 + 0x14] = a1\n 10703: a1 = a5 >> 0x18\n 10706: u64 [s1 + 0x2f8] = a1\n 10710: u8 [a0 + 0x13] = a1\n 10713: a1 = a5 >> 0x10\n 10716: u64 [s1 + 0x2f0] = a1\n 10720: u8 [a0 + 0x12] = a1\n 10723: u64 [s1 + 0x320] = a5\n 10727: a5 = a5 >> 0x8\n 10730: u64 [s1 + 0x2e8] = a5\n 10734: u8 [a0 + 0x11] = a5\n 10737: u8 [a0 + 0x8] = a4\n 10740: a1 = a4 >> 0x38\n 10743: u64 [s1 + 0x2e0] = a1\n 10747: u8 [a0 + 0xf] = a1\n 10750: a1 = a4 >> 0x30\n 10753: u64 [s1 + 0x2d8] = a1\n 10757: u8 [a0 + 0xe] = a1\n 10760: a1 = a4 >> 0x28\n 10763: u64 [s1 + 0x2d0] = a1\n 10767: u8 [a0 + 0xd] = a1\n 10770: a1 = a4 >> 0x20\n 10773: u64 [s1 + 0x2c8] = a1\n 10777: u8 [a0 + 0xc] = a1\n 10780: a1 = a4 >> 0x18\n 10783: u64 [s1 + 0x2c0] = a1\n 10787: u8 [a0 + 0xb] = a1\n 10790: a1 = a4 >> 0x10\n 10793: u64 [s1 + 0x2b8] = a1\n 10797: u8 [a0 + 0xa] = a1\n 10800: u64 [s1 + 0x328] = a4\n 10804: a4 = a4 >> 0x8\n 10807: u64 [s1 + 0x2b0] = a4\n 10811: u8 [a0 + 0x9] = a4\n 10814: u8 [a0] = a2\n 10816: a1 = a2 >> 0x38\n 10819: u64 [s1 + 0x2a8] = a1\n 10823: u8 [a0 + 0x7] = a1\n 10826: a1 = a2 >> 0x30\n 10829: u64 [s1 + 0x2a0] = a1\n 10833: u8 [a0 + 0x6] = a1\n 10836: a1 = a2 >> 0x28\n 10839: u64 [s1 + 0x298] = a1\n 10843: u8 [a0 + 0x5] = a1\n 10846: a1 = a2 >> 0x20\n 10849: u64 [s1 + 0x290] = a1\n 10853: u8 [a0 + 0x4] = a1\n 10856: a1 = a2 >> 0x18\n 10859: u64 [s1 + 0x288] = a1\n 10863: u8 [a0 + 0x3] = a1\n 10866: a1 = a2 >> 0x10\n 10869: u64 [s1 + 0x280] = a1\n 10873: u8 [a0 + 0x2] = a1\n 10876: a1 = u64 [s1 + 0x4f0]\n 10880: a1 = a1 + 0xffffffffffffffc0\n 10883: a1 = a3 <u a1\n 10886: a4 = u64 [s1 + 0x4e0]\n 10890: a1 = 0 if a4 != 0\n 10892: a4 = u64 [s1 + 0x4f8]\n 10896: a1 = 0 if a4 != 0\n 10898: u64 [s1 + 0x340] = a2\n 10902: a2 = a2 >> 0x8\n 10905: u64 [s1 + 0x278] = a2\n 10909: u8 [a0 + 0x1] = a2\n 10912: jump @169 if a1 != 0\n      : @168 (gas: 1)\n 10915: jump @222\n      : @169 (gas: 4)\n 10918: i32 a0 = a3 + 0x40\n 10921: a1 = 0x20\n 10924: u64 [s1 + 0x270] = a0\n 10928: ra = 108, jump @0\n      : @170 [@dyn 54] (gas: 104)\n 10933: a1 = u64 [s1 + 0x480]\n 10937: a2 = reverse a1\n 10939: a1 = u64 [s1 + 0x488]\n 10943: a4 = reverse a1\n 10945: a1 = u64 [s1 + 0x490]\n 10949: a5 = reverse a1\n 10951: a1 = u64 [s1 + 0x498]\n 10955: a3 = reverse a1\n 10957: a1 = a3 >> 0x38\n 10960: u64 [s1 + 0x260] = a1\n 10964: u8 [a0 + 0x1f] = a1\n 10967: a1 = a3 >> 0x30\n 10970: u64 [s1 + 0x258] = a1\n 10974: u8 [a0 + 0x1e] = a1\n 10977: a1 = a3 >> 0x28\n 10980: u64 [s1 + 0x250] = a1\n 10984: u8 [a0 + 0x1d] = a1\n 10987: a1 = a3 >> 0x20\n 10990: u64 [s1 + 0x248] = a1\n 10994: u8 [a0 + 0x1c] = a1\n 10997: a1 = a3 >> 0x18\n 11000: u64 [s1 + 0x240] = a1\n 11004: u8 [a0 + 0x1b] = a1\n 11007: a1 = a3 >> 0x10\n 11010: u64 [s1 + 0x230] = a1\n 11014: u8 [a0 + 0x1a] = a1\n 11017: a1 = a3 >> 0x8\n 11020: u64 [s1 + 0x228] = a1\n 11024: u8 [a0 + 0x19] = a1\n 11027: u64 [s1 + 0x220] = a3\n 11031: u8 [a0 + 0x18] = a3\n 11034: u8 [a0 + 0x10] = a5\n 11037: a1 = a5 >> 0x38\n 11040: u64 [s1 + 0x208] = a1\n 11044: u8 [a0 + 0x17] = a1\n 11047: a1 = a5 >> 0x30\n 11050: u64 [s1 + 0x200] = a1\n 11054: u8 [a0 + 0x16] = a1\n 11057: a1 = a5 >> 0x28\n 11060: u64 [s1 + 0x1f8] = a1\n 11064: u8 [a0 + 0x15] = a1\n 11067: a1 = a5 >> 0x20\n 11070: u64 [s1 + 0x1f0] = a1\n 11074: u8 [a0 + 0x14] = a1\n 11077: a1 = a5 >> 0x18\n 11080: u64 [s1 + 0x1e8] = a1\n 11084: u8 [a0 + 0x13] = a1\n 11087: a1 = a5 >> 0x10\n 11090: u64 [s1 + 0x1e0] = a1\n 11094: u8 [a0 + 0x12] = a1\n 11097: u64 [s1 + 0x210] = a5\n 11101: a5 = a5 >> 0x8\n 11104: u64 [s1 + 0x1d8] = a5\n 11108: u8 [a0 + 0x11] = a5\n 11111: u8 [a0 + 0x8] = a4\n 11114: a1 = a4 >> 0x38\n 11117: u64 [s1 + 0x1d0] = a1\n 11121: u8 [a0 + 0xf] = a1\n 11124: a1 = a4 >> 0x30\n 11127: u64 [s1 + 0x1c8] = a1\n 11131: u8 [a0 + 0xe] = a1\n 11134: a1 = a4 >> 0x28\n 11137: u64 [s1 + 0x1c0] = a1\n 11141: u8 [a0 + 0xd] = a1\n 11144: a1 = a4 >> 0x20\n 11147: u64 [s1 + 0x1b8] = a1\n 11151: u8 [a0 + 0xc] = a1\n 11154: a1 = a4 >> 0x18\n 11157: u64 [s1 + 0x1b0] = a1\n 11161: u8 [a0 + 0xb] = a1\n 11164: a1 = a4 >> 0x10\n 11167: u64 [s1 + 0x1a8] = a1\n 11171: u8 [a0 + 0xa] = a1\n 11174: u64 [s1 + 0x218] = a4\n 11178: a4 = a4 >> 0x8\n 11181: u64 [s1 + 0x1a0] = a4\n 11185: u8 [a0 + 0x9] = a4\n 11188: u8 [a0] = a2\n 11190: a1 = a2 >> 0x38\n 11193: u64 [s1 + 0x198] = a1\n 11197: u8 [a0 + 0x7] = a1\n 11200: a1 = a2 >> 0x30\n 11203: u64 [s1 + 0x190] = a1\n 11207: u8 [a0 + 0x6] = a1\n 11210: a1 = a2 >> 0x28\n 11213: u64 [s1 + 0x188] = a1\n 11217: u8 [a0 + 0x5] = a1\n 11220: a1 = a2 >> 0x20\n 11223: u64 [s1 + 0x180] = a1\n 11227: u8 [a0 + 0x4] = a1\n 11230: a1 = a2 >> 0x18\n 11233: u64 [s1 + 0x178] = a1\n 11237: u8 [a0 + 0x3] = a1\n 11240: a1 = a2 >> 0x10\n 11243: u64 [s1 + 0x170] = a1\n 11247: u8 [a0 + 0x2] = a1\n 11250: u64 [s1 + 0x238] = a2\n 11254: a2 = a2 >> 0x8\n 11257: u64 [s1 + 0x168] = a2\n 11261: u8 [a0 + 0x1] = a2\n 11264: a0 = s1 + 0x1000\n 11268: i32 a0 = a0 + 0xfffffffffffffca0\n 11272: ecalli 3 // 'caller'\n 11274: fallthrough\n      : @171 (gas: 8)\n 11275: a3 = u64 [s1 + 0x4e8]\n 11279: a0 = 0xffffffa0\n 11289: a0 = a3 <u a0\n 11292: a1 = u64 [s1 + 0x4e0]\n 11296: a0 = 0 if a1 != 0\n 11298: a1 = u64 [s1 + 0x4f8]\n 11302: a0 = 0 if a1 != 0\n 11304: jump @173 if a0 != 0\n      : @172 (gas: 1)\n 11307: jump @222\n      : @173 (gas: 21)\n 11310: a2 = s1 + 0x7ff\n 11314: a2 = a2 + 0x479\n 11318: a0 = u64 [a2 + 0x30]\n 11321: a1 = i32 [a2 + 0x38]\n 11324: a4 = u64 [a2 + 0x28]\n 11327: u64 [s1 + 0x4f0] = a4\n 11331: a0 = reverse a0\n 11333: a2 = a0 << 0x20\n 11336: a1 = reverse a1\n 11338: a1 = a1 >> 0x20\n 11341: a1 = a1 | a2\n 11344: u64 [s1 + 0x4f8] = a1\n 11348: a0 = a0 >> 0x20\n 11351: a1 = reverse a4\n 11353: a1 = a1 << 0x20\n 11356: a0 = a0 | a1\n 11359: u64 [s1 + 0x4e0] = a0\n 11363: i32 a0 = a3 + 0x60\n 11366: a1 = 0x20\n 11369: u64 [s1 + 0x128] = a0\n 11373: ra = 110, jump @0\n      : @174 [@dyn 55] (gas: 67)\n 11378: a1 = u64 [s1 + 0x4e0]\n 11382: a1 = reverse a1\n 11384: a2 = u64 [s1 + 0x4f8]\n 11388: a2 = reverse a2\n 11390: a4 = u64 [s1 + 0x4f0]\n 11394: a3 = a4 >> 0x18\n 11397: u8 [a0 + 0xf] = a3\n 11400: a3 = a4 >> 0x10\n 11403: u8 [a0 + 0xe] = a3\n 11406: a3 = a4 >> 0x8\n 11409: u8 [a0 + 0xd] = a3\n 11412: u8 [a0 + 0xc] = a4\n 11415: u8 [a0 + 11] = 0\n 11418: u8 [a0 + 10] = 0\n 11421: u8 [a0 + 9] = 0\n 11424: u8 [a0 + 8] = 0\n 11427: u8 [a0 + 7] = 0\n 11430: u8 [a0 + 6] = 0\n 11433: u8 [a0 + 5] = 0\n 11436: u8 [a0 + 4] = 0\n 11439: u8 [a0 + 3] = 0\n 11442: u8 [a0 + 2] = 0\n 11445: u8 [a0 + 1] = 0\n 11448: u8 [a0 + 0] = 0\n 11450: u8 [a0 + 0x18] = a2\n 11453: u8 [a0 + 0x10] = a1\n 11456: a3 = a2 >> 0x38\n 11459: u8 [a0 + 0x1f] = a3\n 11462: a3 = a2 >> 0x30\n 11465: u8 [a0 + 0x1e] = a3\n 11468: a3 = a2 >> 0x28\n 11471: u8 [a0 + 0x1d] = a3\n 11474: a3 = a2 >> 0x20\n 11477: u8 [a0 + 0x1c] = a3\n 11480: a3 = a2 >> 0x18\n 11483: u8 [a0 + 0x1b] = a3\n 11486: a3 = a2 >> 0x10\n 11489: u8 [a0 + 0x1a] = a3\n 11492: a2 = a2 >> 0x8\n 11495: u8 [a0 + 0x19] = a2\n 11498: a2 = a1 >> 0x38\n 11501: u8 [a0 + 0x17] = a2\n 11504: a2 = a1 >> 0x30\n 11507: u8 [a0 + 0x16] = a2\n 11510: a2 = a1 >> 0x28\n 11513: u8 [a0 + 0x15] = a2\n 11516: a2 = a1 >> 0x20\n 11519: u8 [a0 + 0x14] = a2\n 11522: a2 = a1 >> 0x18\n 11525: u8 [a0 + 0x13] = a2\n 11528: a2 = a1 >> 0x10\n 11531: u8 [a0 + 0x12] = a2\n 11534: a1 = a1 >> 0x8\n 11537: u8 [a0 + 0x11] = a1\n 11540: a0 = s1 + 0x1000\n 11544: u64 [a0 + 4294965432] = 0\n 11548: a0 = s1 + 0x1000\n 11552: u64 [a0 + 4294965424] = 0\n 11556: a0 = s1 + 0x1000\n 11560: u64 [a0 + 4294965416] = 0\n 11564: a0 = s1 + 0x7ff\n 11568: a0 = a0 + 0xc1\n 11572: a2 = s1 + 0x7ff\n 11576: a2 = a2 + 0xa1\n 11580: a3 = s1 + 0x1000\n 11584: u64 [a3 + 4294965408] = 0x2\n 11589: ra = 112, jump @25\n      : @175 [@dyn 56] (gas: 15)\n 11594: a0 = s1 + 0x1000\n 11598: a0 = u64 [a0 + 0xfffffffffffff8c0]\n 11602: u64 [s1 + 0x4f8] = a0\n 11606: a0 = s1 + 0x1000\n 11610: a0 = u64 [a0 + 0xfffffffffffff8c8]\n 11614: u64 [s1 + 0x4f0] = a0\n 11618: a0 = s1 + 0x1000\n 11622: a0 = u64 [a0 + 0xfffffffffffff8d0]\n 11626: u64 [s1 + 0x4e8] = a0\n 11630: a0 = s1 + 0x1000\n 11634: a0 = u64 [a0 + 0xfffffffffffff8d8]\n 11638: u64 [s1 + 0x4e0] = a0\n 11642: a1 = 0x20\n 11645: a0 = 0\n 11647: ra = 114, jump @0\n      : @176 [@dyn 57] (gas: 71)\n 11652: a1 = u64 [s1 + 0x4e0]\n 11656: a1 = reverse a1\n 11658: a2 = u64 [s1 + 0x4e8]\n 11662: a2 = reverse a2\n 11664: a3 = u64 [s1 + 0x4f0]\n 11668: a3 = reverse a3\n 11670: a4 = u64 [s1 + 0x4f8]\n 11674: a4 = reverse a4\n 11676: a5 = a4 >> 0x38\n 11679: u8 [a0 + 0x1f] = a5\n 11682: a5 = a4 >> 0x30\n 11685: u8 [a0 + 0x1e] = a5\n 11688: a5 = a4 >> 0x28\n 11691: u8 [a0 + 0x1d] = a5\n 11694: a5 = a4 >> 0x20\n 11697: u8 [a0 + 0x1c] = a5\n 11700: a5 = a4 >> 0x18\n 11703: u8 [a0 + 0x1b] = a5\n 11706: a5 = a4 >> 0x10\n 11709: u8 [a0 + 0x1a] = a5\n 11712: a5 = a4 >> 0x8\n 11715: u8 [a0 + 0x19] = a5\n 11718: u8 [a0 + 0x18] = a4\n 11721: a4 = a3 >> 0x38\n 11724: u8 [a0 + 0x17] = a4\n 11727: a4 = a3 >> 0x30\n 11730: u8 [a0 + 0x16] = a4\n 11733: a4 = a3 >> 0x28\n 11736: u8 [a0 + 0x15] = a4\n 11739: a4 = a3 >> 0x20\n 11742: u8 [a0 + 0x14] = a4\n 11745: a4 = a3 >> 0x18\n 11748: u8 [a0 + 0x13] = a4\n 11751: a4 = a3 >> 0x10\n 11754: u8 [a0 + 0x12] = a4\n 11757: a4 = a3 >> 0x8\n 11760: u8 [a0 + 0x11] = a4\n 11763: u8 [a0 + 0x10] = a3\n 11766: a3 = a2 >> 0x38\n 11769: u8 [a0 + 0xf] = a3\n 11772: a3 = a2 >> 0x30\n 11775: u8 [a0 + 0xe] = a3\n 11778: a3 = a2 >> 0x28\n 11781: u8 [a0 + 0xd] = a3\n 11784: a3 = a2 >> 0x20\n 11787: u8 [a0 + 0xc] = a3\n 11790: a3 = a2 >> 0x18\n 11793: u8 [a0 + 0xb] = a3\n 11796: a3 = a2 >> 0x10\n 11799: u8 [a0 + 0xa] = a3\n 11802: a3 = a2 >> 0x8\n 11805: u8 [a0 + 0x9] = a3\n 11808: u8 [a0 + 0x8] = a2\n 11811: a2 = a1 >> 0x38\n 11814: u8 [a0 + 0x7] = a2\n 11817: a2 = a1 >> 0x30\n 11820: u8 [a0 + 0x6] = a2\n 11823: a2 = a1 >> 0x28\n 11826: u8 [a0 + 0x5] = a2\n 11829: a2 = a1 >> 0x20\n 11832: u8 [a0 + 0x4] = a2\n 11835: a2 = a1 >> 0x18\n 11838: u8 [a0 + 0x3] = a2\n 11841: a2 = a1 >> 0x10\n 11844: u8 [a0 + 0x2] = a2\n 11847: a2 = a1 >> 0x8\n 11850: u8 [a0 + 0x1] = a2\n 11853: u8 [a0] = a1\n 11855: a0 = 0x20\n 11858: a1 = 0x20\n 11861: ra = 116, jump @0\n      : @177 [@dyn 58] (gas: 35)\n 11866: u8 [a0 + 31] = 0\n 11869: u8 [a0 + 30] = 0\n 11872: u8 [a0 + 29] = 0\n 11875: u8 [a0 + 28] = 0\n 11878: u8 [a0 + 27] = 0\n 11881: u8 [a0 + 26] = 0\n 11884: u8 [a0 + 25] = 0\n 11887: u8 [a0 + 24] = 0\n 11890: u8 [a0 + 23] = 0\n 11893: u8 [a0 + 22] = 0\n 11896: u8 [a0 + 21] = 0\n 11899: u8 [a0 + 20] = 0\n 11902: u8 [a0 + 19] = 0\n 11905: u8 [a0 + 18] = 0\n 11908: u8 [a0 + 17] = 0\n 11911: u8 [a0 + 16] = 0\n 11914: u8 [a0 + 15] = 0\n 11917: u8 [a0 + 14] = 0\n 11920: u8 [a0 + 13] = 0\n 11923: u8 [a0 + 12] = 0\n 11926: u8 [a0 + 11] = 0\n 11929: u8 [a0 + 10] = 0\n 11932: u8 [a0 + 9] = 0\n 11935: u8 [a0 + 8] = 0\n 11938: u8 [a0 + 7] = 0\n 11941: u8 [a0 + 6] = 0\n 11944: u8 [a0 + 5] = 0\n 11947: u8 [a0 + 4] = 0\n 11950: u8 [a0 + 3] = 0\n 11953: u8 [a0 + 2] = 0\n 11956: u8 [a0 + 1] = 0\n 11959: u8 [a0 + 0] = 0\n 11961: a1 = 0x40\n 11964: a0 = 0\n 11966: ra = 118, jump @0\n      : @178 [@dyn 59] (gas: 20)\n 11971: a1 = sp + 0xffffffffffffffe0\n 11974: a1 = a1 & 0xffffffffffffffe0\n 11977: u64 [s1 + 0x4f8] = a1\n 11981: sp = a1\n 11983: i32 a0 = a0 + 0\n 11985: i32 a2 = a1 + 0\n 11987: a1 = 0x40\n 11990: ecalli 6 // 'hash_keccak_256'\n 11992: a1 = u64 [s1 + 0x4f8]\n 11996: a0 = u64 [a1 + 0x18]\n 11999: u64 [s1 + 0x498] = a0\n 12003: a0 = u64 [a1 + 0x10]\n 12006: u64 [s1 + 0x490] = a0\n 12010: a0 = u64 [a1 + 0x8]\n 12013: u64 [s1 + 0x480] = a0\n 12017: a0 = u64 [a1]\n 12019: u64 [s1 + 0x488] = a0\n 12023: a1 = 0x20\n 12026: a0 = u64 [s1 + 0x4d8]\n 12030: ra = 120, jump @0\n      : @179 [@dyn 60] (gas: 104)\n 12035: a1 = u8 [a0 + 0x11]\n 12038: a2 = u8 [a0 + 0x10]\n 12041: a3 = u8 [a0 + 0x12]\n 12044: a4 = u8 [a0 + 0x13]\n 12047: a1 = a1 << 0x8\n 12050: a1 = a1 | a2\n 12053: a3 = a3 << 0x10\n 12056: a4 = a4 << 0x18\n 12059: a3 = a3 | a4\n 12062: a1 = a1 | a3\n 12065: a2 = u8 [a0 + 0x15]\n 12068: a3 = u8 [a0 + 0x14]\n 12071: a4 = u8 [a0 + 0x16]\n 12074: a5 = u8 [a0 + 0x17]\n 12077: a2 = a2 << 0x8\n 12080: a2 = a2 | a3\n 12083: a4 = a4 << 0x10\n 12086: a5 = a5 << 0x18\n 12089: a4 = a4 | a5\n 12092: a2 = a2 | a4\n 12095: a2 = a2 << 0x20\n 12098: t0 = a2 | a1\n 12101: a2 = u8 [a0 + 0x1]\n 12104: a3 = u8 [a0]\n 12106: a4 = u8 [a0 + 0x2]\n 12109: a5 = u8 [a0 + 0x3]\n 12112: a2 = a2 << 0x8\n 12115: a2 = a2 | a3\n 12118: a4 = a4 << 0x10\n 12121: a5 = a5 << 0x18\n 12124: a4 = a4 | a5\n 12127: a2 = a2 | a4\n 12130: a3 = u8 [a0 + 0x5]\n 12133: a4 = u8 [a0 + 0x4]\n 12136: a5 = u8 [a0 + 0x6]\n 12139: a1 = u8 [a0 + 0x7]\n 12142: a3 = a3 << 0x8\n 12145: a3 = a3 | a4\n 12148: a5 = a5 << 0x10\n 12151: a1 = a1 << 0x18\n 12154: a1 = a1 | a5\n 12157: a1 = a1 | a3\n 12160: a1 = a1 << 0x20\n 12163: t1 = a1 | a2\n 12166: a1 = u8 [a0 + 0x19]\n 12169: a3 = u8 [a0 + 0x18]\n 12172: a4 = u8 [a0 + 0x1a]\n 12175: a5 = u8 [a0 + 0x1b]\n 12178: a1 = a1 << 0x8\n 12181: a1 = a1 | a3\n 12184: a4 = a4 << 0x10\n 12187: a5 = a5 << 0x18\n 12190: a4 = a4 | a5\n 12193: a1 = a1 | a4\n 12196: a3 = u8 [a0 + 0x1d]\n 12199: a4 = u8 [a0 + 0x1c]\n 12202: a5 = u8 [a0 + 0x1e]\n 12205: a2 = u8 [a0 + 0x1f]\n 12208: a3 = a3 << 0x8\n 12211: a3 = a3 | a4\n 12214: a5 = a5 << 0x10\n 12217: a2 = a2 << 0x18\n 12220: a2 = a2 | a5\n 12223: a2 = a2 | a3\n 12226: a2 = a2 << 0x20\n 12229: a3 = a2 | a1\n 12232: a1 = u8 [a0 + 0x9]\n 12235: a2 = u8 [a0 + 0x8]\n 12238: a4 = u8 [a0 + 0xa]\n 12241: a5 = u8 [a0 + 0xb]\n 12244: a1 = a1 << 0x8\n 12247: a1 = a1 | a2\n 12250: a4 = a4 << 0x10\n 12253: a5 = a5 << 0x18\n 12256: a4 = a4 | a5\n 12259: a1 = a1 | a4\n 12262: a2 = u8 [a0 + 0xd]\n 12265: a4 = u8 [a0 + 0xc]\n 12268: a5 = u8 [a0 + 0xe]\n 12271: a0 = u8 [a0 + 0xf]\n 12274: a2 = a2 << 0x8\n 12277: a2 = a2 | a4\n 12280: a5 = a5 << 0x10\n 12283: a0 = a0 << 0x18\n 12286: a0 = a0 | a5\n 12289: a0 = a0 | a2\n 12292: a0 = a0 << 0x20\n 12295: a0 = a0 | a1\n 12298: a2 = reverse a0\n 12300: a3 = reverse a3\n 12302: a0 = reverse t1\n 12304: a1 = reverse t0\n 12306: u64 [s1 + 0x4b0] = a0\n 12310: u64 [s1 + 0x4a0] = a1\n 12314: a0 = a0 | a1\n 12317: u64 [s1 + 0x4b8] = a3\n 12321: a1 = a3 | a2\n 12324: a1 = a1 | a0\n 12327: a1 = a1 >> 0x20\n 12330: u64 [s1 + 0x4a8] = a2\n 12334: a0 = a0 | a2\n 12337: a0 = a0 << 0x20\n 12340: a0 = a0 | a1\n 12343: jump @222 if a0 != 0\n      : @180 (gas: 4)\n 12347: a0 = i32 [s1 + 0x4b8]\n 12351: a1 = 0x20\n 12354: u64 [s1 + 0x10] = a0\n 12357: ra = 122, jump @0\n      : @181 [@dyn 61] (gas: 80)\n 12362: a1 = u8 [a0 + 0x9]\n 12365: a2 = u8 [a0 + 0x8]\n 12368: a3 = u8 [a0 + 0xa]\n 12371: a4 = u8 [a0 + 0xb]\n 12374: a1 = a1 << 0x8\n 12377: a1 = a1 | a2\n 12380: a3 = a3 << 0x10\n 12383: a4 = a4 << 0x18\n 12386: a3 = a3 | a4\n 12389: a1 = a1 | a3\n 12392: a2 = u8 [a0 + 0xd]\n 12395: a3 = u8 [a0 + 0xc]\n 12398: a4 = u8 [a0 + 0xe]\n 12401: a5 = u8 [a0 + 0xf]\n 12404: a2 = a2 << 0x8\n 12407: a2 = a2 | a3\n 12410: a4 = a4 << 0x10\n 12413: a5 = a5 << 0x18\n 12416: a4 = a4 | a5\n 12419: a2 = a2 | a4\n 12422: a2 = a2 << 0x20\n 12425: t0 = a2 | a1\n 12428: a1 = u8 [a0 + 0x1]\n 12431: a2 = u8 [a0]\n 12433: a3 = u8 [a0 + 0x2]\n 12436: a4 = u8 [a0 + 0x3]\n 12439: a1 = a1 << 0x8\n 12442: a1 = a1 | a2\n 12445: a3 = a3 << 0x10\n 12448: a4 = a4 << 0x18\n 12451: a3 = a3 | a4\n 12454: a1 = a1 | a3\n 12457: a2 = u8 [a0 + 0x5]\n 12460: a3 = u8 [a0 + 0x4]\n 12463: a4 = u8 [a0 + 0x6]\n 12466: a5 = u8 [a0 + 0x7]\n 12469: a2 = a2 << 0x8\n 12472: a2 = a2 | a3\n 12475: a4 = a4 << 0x10\n 12478: a5 = a5 << 0x18\n 12481: a4 = a4 | a5\n 12484: a2 = a2 | a4\n 12487: a2 = a2 << 0x20\n 12490: t1 = a2 | a1\n 12493: a1 = u8 [a0 + 0x11]\n 12496: a2 = u8 [a0 + 0x10]\n 12499: a3 = u8 [a0 + 0x12]\n 12502: a4 = u8 [a0 + 0x13]\n 12505: a1 = a1 << 0x8\n 12508: a1 = a1 | a2\n 12511: a3 = a3 << 0x10\n 12514: a4 = a4 << 0x18\n 12517: a3 = a3 | a4\n 12520: a1 = a1 | a3\n 12523: a2 = u8 [a0 + 0x15]\n 12526: a3 = u8 [a0 + 0x14]\n 12529: a4 = u8 [a0 + 0x16]\n 12532: a5 = u8 [a0 + 0x17]\n 12535: a2 = a2 << 0x8\n 12538: a2 = a2 | a3\n 12541: a4 = a4 << 0x10\n 12544: a5 = a5 << 0x18\n 12547: a4 = a4 | a5\n 12550: a2 = a2 | a4\n 12553: a2 = a2 << 0x20\n 12556: a1 = a1 | a2\n 12559: u64 [s1 + 0x20] = a1\n 12562: a1 = reverse a1\n 12564: u64 [s1 + 0x28] = t1\n 12567: a3 = reverse t1\n 12569: u64 [s1 + 0x30] = t0\n 12572: a2 = reverse t0\n 12574: u64 [s1 + 0x160] = a2\n 12578: u64 [s1 + 0x130] = a3\n 12582: a2 = a2 | a3\n 12585: u64 [s1 + 0x138] = a1\n 12589: a1 = a1 <u 0x1\n 12592: u64 [s1 + 0x120] = a2\n 12596: a1 = 0 if a2 != 0\n 12598: jump @183 if a1 != 0\n      : @182 (gas: 1)\n 12601: jump @304\n      : @183 (gas: 50)\n 12604: a1 = u64 [s1 + 0x488]\n 12608: t0 = reverse a1\n 12610: a1 = u8 [a0 + 0x19]\n 12613: a2 = u8 [a0 + 0x18]\n 12616: a3 = u8 [a0 + 0x1a]\n 12619: a4 = u8 [a0 + 0x1b]\n 12622: a1 = a1 << 0x8\n 12625: a1 = a1 | a2\n 12628: a3 = a3 << 0x10\n 12631: a4 = a4 << 0x18\n 12634: a2 = u8 [a0 + 0x1d]\n 12637: a3 = a3 | a4\n 12640: a1 = a1 | a3\n 12643: a3 = u8 [a0 + 0x1c]\n 12646: a2 = a2 << 0x8\n 12649: a4 = u8 [a0 + 0x1e]\n 12652: a0 = u8 [a0 + 0x1f]\n 12655: a2 = a2 | a3\n 12658: a3 = u64 [s1 + 0x480]\n 12662: a3 = reverse a3\n 12664: a4 = a4 << 0x10\n 12667: a0 = a0 << 0x18\n 12670: a0 = a0 | a4\n 12673: a4 = u64 [s1 + 0x490]\n 12677: a4 = reverse a4\n 12679: a0 = a0 | a2\n 12682: a2 = u64 [s1 + 0x498]\n 12686: a2 = reverse a2\n 12688: a0 = a0 << 0x20\n 12691: a0 = a0 | a1\n 12694: u64 [s1 + 0x18] = a0\n 12697: a0 = reverse a0\n 12699: u64 [s1 + 0x268] = a0\n 12703: u64 [s1 + 0x140] = a2\n 12707: a0 = s1 + 0x1000\n 12711: u64 [a0 + 0xfffffffffffff860] = a2\n 12715: u64 [s1 + 0x148] = a4\n 12719: a0 = s1 + 0x1000\n 12723: u64 [a0 + 0xfffffffffffff868] = a4\n 12727: u64 [s1 + 0x150] = a3\n 12731: a0 = s1 + 0x1000\n 12735: u64 [a0 + 0xfffffffffffff870] = a3\n 12739: a0 = s1 + 0x7ff\n 12743: a0 = a0 + 0x81\n 12747: a2 = s1 + 0x7ff\n 12751: a2 = a2 + 0x61\n 12754: u64 [s1 + 0x158] = t0\n 12758: a1 = s1 + 0x1000\n 12762: u64 [a1 + 0xfffffffffffff878] = t0\n 12766: ra = 124, jump @25\n      : @184 [@dyn 62] (gas: 21)\n 12771: a0 = s1 + 0x1000\n 12775: a2 = u64 [a0 + 0xfffffffffffff880]\n 12779: a0 = s1 + 0x1000\n 12783: a0 = u64 [a0 + 0xfffffffffffff888]\n 12787: a1 = s1 + 0x1000\n 12791: a1 = u64 [a1 + 0xfffffffffffff890]\n 12795: a3 = s1 + 0x1000\n 12799: a3 = u64 [a3 + 0xfffffffffffff898]\n 12803: a4 = s1 + 0x1000\n 12807: u64 [a4 + 0xfffffffffffff838] = a3\n 12811: a3 = s1 + 0x1000\n 12815: u64 [a3 + 0xfffffffffffff830] = a1\n 12819: a1 = s1 + 0x1000\n 12823: u64 [a1 + 0xfffffffffffff828] = a0\n 12827: a0 = s1 + 0x7ff\n 12831: a0 = a0 + 0x41\n 12834: a1 = s1 + 0x7ff\n 12838: a1 = a1 + 0x21\n 12841: a3 = s1 + 0x1000\n 12845: u64 [a3 + 0xfffffffffffff820] = a2\n 12849: ra = 126, jump @348\n      : @185 [@dyn 63] (gas: 80)\n 12854: a0 = s1 + 0x1000\n 12858: a0 = u64 [a0 + 0xfffffffffffff858]\n 12862: a1 = s1 + 0x1000\n 12866: a1 = u64 [a1 + 0xfffffffffffff850]\n 12870: a2 = s1 + 0x1000\n 12874: a3 = u64 [a2 + 0xfffffffffffff840]\n 12878: a2 = s1 + 0x1000\n 12882: a2 = u64 [a2 + 0xfffffffffffff848]\n 12886: u64 [s1 + 0x4e8] = a0\n 12890: u64 [s1 + 0x4f0] = a1\n 12894: a1 = a1 | a0\n 12897: u64 [s1 + 0x4e0] = a3\n 12901: a0 = a3 <u 0x20\n 12904: u64 [s1 + 0x4f8] = a2\n 12908: a0 = 0 if a2 != 0\n 12910: a0 = 0 if a1 != 0\n 12912: a2 = u64 [s1 + 0x488]\n 12916: a1 = a2 >> 0x38\n 12919: u64 [s1 + 0x68] = a1\n 12922: a1 = a2 >> 0x30\n 12925: u64 [s1 + 0x60] = a1\n 12928: a1 = a2 >> 0x28\n 12931: u64 [s1 + 0x58] = a1\n 12934: a1 = a2 >> 0x20\n 12937: u64 [s1 + 0x50] = a1\n 12940: a1 = a2 >> 0x18\n 12943: u64 [s1 + 0x48] = a1\n 12946: a1 = a2 >> 0x10\n 12949: u64 [s1 + 0x40] = a1\n 12952: a1 = a2 >> 0x8\n 12955: u64 [s1 + 0x38] = a1\n 12958: a2 = u64 [s1 + 0x480]\n 12962: a1 = a2 >> 0x38\n 12965: u64 [s1 + 0xa0] = a1\n 12969: a1 = a2 >> 0x30\n 12972: u64 [s1 + 0x98] = a1\n 12976: a1 = a2 >> 0x28\n 12979: u64 [s1 + 0x90] = a1\n 12983: a1 = a2 >> 0x20\n 12986: u64 [s1 + 0x88] = a1\n 12990: a1 = a2 >> 0x18\n 12993: u64 [s1 + 0x80] = a1\n 12997: a1 = a2 >> 0x10\n 13000: u64 [s1 + 0x78] = a1\n 13003: a1 = a2 >> 0x8\n 13006: u64 [s1 + 0x70] = a1\n 13009: a2 = u64 [s1 + 0x490]\n 13013: a1 = a2 >> 0x38\n 13016: u64 [s1 + 0x110] = a1\n 13020: a1 = a2 >> 0x30\n 13023: u64 [s1 + 0x108] = a1\n 13027: a1 = a2 >> 0x28\n 13030: u64 [s1 + 0x100] = a1\n 13034: a1 = a2 >> 0x20\n 13037: u64 [s1 + 0xf8] = a1\n 13041: a1 = a2 >> 0x18\n 13044: u64 [s1 + 0xf0] = a1\n 13048: a1 = a2 >> 0x10\n 13051: u64 [s1 + 0xe8] = a1\n 13055: a1 = a2 >> 0x8\n 13058: u64 [s1 + 0xe0] = a1\n 13062: a2 = u64 [s1 + 0x498]\n 13066: a1 = a2 >> 0x38\n 13069: u64 [s1 + 0xd8] = a1\n 13073: a1 = a2 >> 0x30\n 13076: u64 [s1 + 0xd0] = a1\n 13080: a1 = a2 >> 0x28\n 13083: u64 [s1 + 0xc8] = a1\n 13087: a1 = a2 >> 0x20\n 13090: u64 [s1 + 0xc0] = a1\n 13094: a1 = a2 >> 0x18\n 13097: u64 [s1 + 0xb8] = a1\n 13101: a1 = a2 >> 0x10\n 13104: u64 [s1 + 0xb0] = a1\n 13108: a1 = a2 >> 0x8\n 13111: u64 [s1 + 0xa8] = a1\n 13115: a1 = u64 [s1 + 0x268]\n 13119: a1 = a1 <u 0x20\n 13122: u64 [s1 + 0x118] = a1\n 13126: jump @192 if a0 != 0\n      : @186 (gas: 2)\n 13130: a1 = 0x20\n 13133: ra = 128, jump @0\n      : @187 [@dyn 64] (gas: 67)\n 13139: a1 = u64 [s1 + 0x480]\n 13143: u8 [a0 + 0x8] = a1\n 13146: a1 = u64 [s1 + 0x68]\n 13149: u8 [a0 + 0x7] = a1\n 13152: a1 = u64 [s1 + 0x60]\n 13155: u8 [a0 + 0x6] = a1\n 13158: a1 = u64 [s1 + 0x58]\n 13161: u8 [a0 + 0x5] = a1\n 13164: a1 = u64 [s1 + 0x50]\n 13167: u8 [a0 + 0x4] = a1\n 13170: a1 = u64 [s1 + 0x48]\n 13173: u8 [a0 + 0x3] = a1\n 13176: a1 = u64 [s1 + 0x40]\n 13179: u8 [a0 + 0x2] = a1\n 13182: a1 = u64 [s1 + 0x38]\n 13185: u8 [a0 + 0x1] = a1\n 13188: a1 = u64 [s1 + 0x488]\n 13192: u8 [a0] = a1\n 13194: a1 = u64 [s1 + 0x490]\n 13198: u8 [a0 + 0x10] = a1\n 13201: a1 = u64 [s1 + 0xa0]\n 13205: u8 [a0 + 0xf] = a1\n 13208: a1 = u64 [s1 + 0x98]\n 13212: u8 [a0 + 0xe] = a1\n 13215: a1 = u64 [s1 + 0x90]\n 13219: u8 [a0 + 0xd] = a1\n 13222: a1 = u64 [s1 + 0x88]\n 13226: u8 [a0 + 0xc] = a1\n 13229: a1 = u64 [s1 + 0x80]\n 13233: u8 [a0 + 0xb] = a1\n 13236: a1 = u64 [s1 + 0x78]\n 13239: u8 [a0 + 0xa] = a1\n 13242: a1 = u64 [s1 + 0x70]\n 13245: u8 [a0 + 0x9] = a1\n 13248: a1 = u64 [s1 + 0x498]\n 13252: u8 [a0 + 0x18] = a1\n 13255: a1 = u64 [s1 + 0x110]\n 13259: u8 [a0 + 0x17] = a1\n 13262: a1 = u64 [s1 + 0x108]\n 13266: u8 [a0 + 0x16] = a1\n 13269: a1 = u64 [s1 + 0x100]\n 13273: u8 [a0 + 0x15] = a1\n 13276: a1 = u64 [s1 + 0xf8]\n 13280: u8 [a0 + 0x14] = a1\n 13283: a1 = u64 [s1 + 0xf0]\n 13287: u8 [a0 + 0x13] = a1\n 13290: a1 = u64 [s1 + 0xe8]\n 13294: u8 [a0 + 0x12] = a1\n 13297: a1 = u64 [s1 + 0xe0]\n 13301: u8 [a0 + 0x11] = a1\n 13304: a1 = u64 [s1 + 0xd8]\n 13308: u8 [a0 + 0x1f] = a1\n 13311: a1 = u64 [s1 + 0xd0]\n 13315: u8 [a0 + 0x1e] = a1\n 13318: a1 = u64 [s1 + 0xc8]\n 13322: u8 [a0 + 0x1d] = a1\n 13325: a1 = u64 [s1 + 0xc0]\n 13329: u8 [a0 + 0x1c] = a1\n 13332: a1 = u64 [s1 + 0xb8]\n 13336: u8 [a0 + 0x1b] = a1\n 13339: a1 = u64 [s1 + 0xb0]\n 13343: u8 [a0 + 0x1a] = a1\n 13346: a1 = u64 [s1 + 0xa8]\n 13350: u8 [a0 + 0x19] = a1\n 13353: a1 = 0x20\n 13356: a0 = 0\n 13358: ra = 130, jump @0\n      : @188 [@dyn 65] (gas: 9)\n 13364: a1 = sp + 0xffffffffffffffe0\n 13367: a1 = a1 & 0xffffffffffffffe0\n 13370: u64 [s1 + 0x4c8] = a1\n 13374: sp = a1\n 13376: i32 a0 = a0 + 0\n 13378: i32 a2 = a1 + 0\n 13380: a1 = 0x20\n 13383: ecalli 6 // 'hash_keccak_256'\n 13385: fallthrough\n      : @189 (gas: 117)\n 13386: a0 = u64 [s1 + 0x268]\n 13390: a1 = a0 + 0x1f\n 13393: a0 = a1 <u a0\n 13396: a5 = u64 [s1 + 0x138]\n 13400: a3 = a5 + a0\n 13403: a2 = a3 <u a5\n 13406: a2 = a0 if a0 == 0\n 13409: a4 = u64 [s1 + 0x160]\n 13413: a2 = a2 + a4\n 13416: u64 [s1 + 0x4c0] = a2\n 13420: a2 = a2 << 0x3b\n 13423: a4 = a3 >> 0x5\n 13426: a2 = a2 | a4\n 13429: a0 = u64 [s1 + 0x4c8]\n 13433: t0 = u64 [a0 + 0x18]\n 13436: a3 = a3 << 0x3b\n 13439: a0 = u64 [a0 + 0x10]\n 13442: a1 = a1 >> 0x5\n 13445: a3 = a3 | a1\n 13448: t2 = reverse t0\n 13450: a4 = reverse a0\n 13452: a1 = u64 [s1 + 0x118]\n 13456: a1 = 0 if a5 != 0\n 13458: a0 = u64 [s1 + 0x120]\n 13462: a1 = 0 if a0 != 0\n 13464: a2 = 0 if a1 != 0\n 13466: a3 = 0 if a1 != 0\n 13468: t1 = t2 + a3\n 13471: a0 = t1 <u t2\n 13474: a3 = a4 + a0\n 13477: t0 = a3 + a2\n 13480: a3 = t0 ^ a4\n 13483: a2 = t0 <u a4\n 13486: a2 = a0 if a3 == 0\n 13489: u64 [s1 + 0x8] = a2\n 13492: a0 = u64 [s1 + 0x4e0]\n 13496: ra = a0 + 0x1f\n 13499: a2 = ra <u a0\n 13502: a3 = u64 [s1 + 0x4f8]\n 13506: a0 = a3 + a2\n 13509: a3 = a0 <u a3\n 13512: a3 = a2 if a2 == 0\n 13515: a2 = u64 [s1 + 0x4f0]\n 13519: a2 = a2 + a3\n 13522: u64 [s1 + 0x4e0] = a2\n 13526: a2 = a2 << 0x3b\n 13529: a5 = a0 >> 0x5\n 13532: a2 = a2 | a5\n 13535: a0 = a0 << 0x3b\n 13538: a5 = ra >> 0x5\n 13541: ra = t1\n 13543: a0 = a0 | a5\n 13546: a3 = t2 + a0\n 13549: a0 = a3 <u t2\n 13552: a5 = a4 + a0\n 13555: a5 = a5 + a2\n 13558: a2 = a5 ^ a4\n 13561: t2 = a5 <u a4\n 13564: t2 = a0 if a2 == 0\n 13567: a0 = t0 ^ a5\n 13570: u64 [s1 + 0x4d0] = a5\n 13574: a2 = t0 <u a5\n 13577: u64 [s1 + 0x4d8] = a3\n 13581: t1 = t1 <u a3\n 13584: t1 = a2 if a0 != 0\n 13587: a2 = u64 [s1 + 0x4c0]\n 13591: a0 = u64 [s1 + 0x160]\n 13595: a0 = a2 <u a0\n 13598: a4 = u64 [s1 + 0x130]\n 13602: a4 = a4 + a0\n 13605: a2 = a2 >> 0x5\n 13608: a0 = a4 << 0x3b\n 13611: a0 = a0 | a2\n 13614: a2 = u64 [s1 + 0x4c8]\n 13618: a3 = u64 [a2]\n 13620: a2 = u64 [a2 + 0x8]\n 13623: a4 = a4 >> 0x5\n 13626: a0 = 0 if a1 != 0\n 13628: a4 = 0 if a1 != 0\n 13630: a1 = reverse a2\n 13632: a2 = reverse a3\n 13634: a4 = a4 + a2\n 13637: a0 = a0 + a1\n 13640: a3 = a0 <u a1\n 13643: a3 = a3 + a4\n 13646: a4 = u64 [s1 + 0x8]\n 13649: a4 = a4 + a0\n 13652: u64 [s1 + 0x4f8] = a4\n 13656: a0 = a4 <u a0\n 13659: a5 = a3 + a0\n 13662: a4 = u64 [s1 + 0x4e0]\n 13666: a0 = u64 [s1 + 0x4f0]\n 13670: a0 = a4 <u a0\n 13673: a3 = u64 [s1 + 0x4e8]\n 13677: a0 = a0 + a3\n 13680: a3 = a4 >> 0x5\n 13683: a4 = a0 << 0x3b\n 13686: a3 = a3 | a4\n 13689: a0 = a0 >> 0x5\n 13692: a0 = a0 + a2\n 13695: a3 = a3 + a1\n 13698: a1 = a3 <u a1\n 13701: a0 = a0 + a1\n 13704: t2 = t2 + a3\n 13707: a1 = t2 <u a3\n 13710: a3 = u64 [s1 + 0x4f8]\n 13714: a2 = a0 + a1\n 13717: a0 = a3 <u t2\n 13720: a1 = a5 ^ a2\n 13723: u64 [s1 + 0x4c0] = a2\n 13727: a2 = a5 <u a2\n 13730: a2 = a0 if a1 == 0\n 13733: u64 [s1 + 0x4c8] = t2\n 13737: a0 = a3 ^ t2\n 13740: a0 = a0 | a1\n 13743: t1 = a2 if a0 != 0\n 13746: jump @192 if t1 == 0\n      : @190 (gas: 23)\n 13750: u64 [s1 + 0x4f8] = a3\n 13754: u64 [s1 + 0x4e0] = a5\n 13758: u64 [s1 + 0x4e8] = t0\n 13762: u64 [s1 + 0x4f0] = ra\n 13766: a0 = s1 + 0x7ff\n 13770: a0 = a0 + 0x479\n 13774: u64 [a0 + 0xd0] = t0\n 13778: u64 [a0 + 0xc8] = ra\n 13782: u64 [a0 + 0xd8] = a3\n 13786: u64 [a0 + 0xe0] = a5\n 13790: u64 [a0 + 256] = 0\n 13794: u64 [a0 + 248] = 0\n 13798: u64 [a0 + 240] = 0\n 13802: u64 [a0 + 232] = 0\n 13806: a0 = s1 + 0x1000\n 13810: i32 a1 = a0 + 0xfffffffffffffd40\n 13814: a0 = s1 + 0x1000\n 13818: i32 a3 = a0 + 0xfffffffffffffd60\n 13822: a2 = 0xffffffffffffffff\n 13825: a4 = 0x20\n 13828: a0 = 0\n 13830: ecalli 9 // 'set_storage'\n 13832: fallthrough\n      : @191 (gas: 29)\n 13833: a5 = u64 [s1 + 0x4e0]\n 13837: t0 = u64 [s1 + 0x4e8]\n 13841: ra = u64 [s1 + 0x4f0]\n 13845: ra = ra + 0x1\n 13848: a0 = ra <u 0x1\n 13851: t0 = t0 + a0\n 13854: a0 = ra | t0\n 13857: a0 = a0 <u 0x1\n 13860: a1 = u64 [s1 + 0x4f8]\n 13864: a0 = a0 + a1\n 13867: a1 = a0 <u a1\n 13870: a5 = a5 + a1\n 13873: a1 = u64 [s1 + 0x4d8]\n 13877: a1 = ra <u a1\n 13880: a3 = u64 [s1 + 0x4d0]\n 13884: a2 = t0 ^ a3\n 13887: a3 = t0 <u a3\n 13890: a3 = a1 if a2 == 0\n 13893: a1 = u64 [s1 + 0x4c8]\n 13897: t1 = a0 <u a1\n 13900: a4 = u64 [s1 + 0x4c0]\n 13904: a2 = a5 ^ a4\n 13907: a4 = a5 <u a4\n 13910: a4 = t1 if a2 == 0\n 13913: a1 = a1 ^ a0\n 13916: a1 = a1 | a2\n 13919: a4 = a3 if a1 == 0\n 13922: a3 = a0\n 13924: jump @190 if a4 != 0\n      : @192 (gas: 13)\n 13928: a2 = u64 [s1 + 0x138]\n 13932: a0 = a2 >u 0\n 13934: a1 = u64 [s1 + 0x118]\n 13938: a1 = a1 ^ 0x1\n 13941: a1 = a0 if a2 != 0\n 13944: a0 = u64 [s1 + 0x160]\n 13948: a0 = a0 >u 0\n 13950: a3 = u64 [s1 + 0x130]\n 13954: a2 = a3 >u 0\n 13956: a2 = a0 if a3 == 0\n 13959: a0 = u64 [s1 + 0x120]\n 13963: a2 = a1 if a0 == 0\n 13966: jump @244 if a2 == 0\n      : @193 (gas: 6)\n 13970: a0 = u64 [s1 + 0x268]\n 13974: a0 = a0 & 0xffffffffffffffe0\n 13977: u64 [s1 + 0x120] = a0\n 13981: a1 = 0x20\n 13984: a0 = 0\n 13986: ra = 132, jump @0\n      : @194 [@dyn 66] (gas: 67)\n 13992: a1 = u64 [s1 + 0x480]\n 13996: u8 [a0 + 0x8] = a1\n 13999: a1 = u64 [s1 + 0x68]\n 14002: u8 [a0 + 0x7] = a1\n 14005: a1 = u64 [s1 + 0x60]\n 14008: u8 [a0 + 0x6] = a1\n 14011: a1 = u64 [s1 + 0x58]\n 14014: u8 [a0 + 0x5] = a1\n 14017: a1 = u64 [s1 + 0x50]\n 14020: u8 [a0 + 0x4] = a1\n 14023: a1 = u64 [s1 + 0x48]\n 14026: u8 [a0 + 0x3] = a1\n 14029: a1 = u64 [s1 + 0x40]\n 14032: u8 [a0 + 0x2] = a1\n 14035: a1 = u64 [s1 + 0x38]\n 14038: u8 [a0 + 0x1] = a1\n 14041: a1 = u64 [s1 + 0x488]\n 14045: u8 [a0] = a1\n 14047: a1 = u64 [s1 + 0x490]\n 14051: u8 [a0 + 0x10] = a1\n 14054: a1 = u64 [s1 + 0xa0]\n 14058: u8 [a0 + 0xf] = a1\n 14061: a1 = u64 [s1 + 0x98]\n 14065: u8 [a0 + 0xe] = a1\n 14068: a1 = u64 [s1 + 0x90]\n 14072: u8 [a0 + 0xd] = a1\n 14075: a1 = u64 [s1 + 0x88]\n 14079: u8 [a0 + 0xc] = a1\n 14082: a1 = u64 [s1 + 0x80]\n 14086: u8 [a0 + 0xb] = a1\n 14089: a1 = u64 [s1 + 0x78]\n 14092: u8 [a0 + 0xa] = a1\n 14095: a1 = u64 [s1 + 0x70]\n 14098: u8 [a0 + 0x9] = a1\n 14101: a1 = u64 [s1 + 0x498]\n 14105: u8 [a0 + 0x18] = a1\n 14108: a1 = u64 [s1 + 0x110]\n 14112: u8 [a0 + 0x17] = a1\n 14115: a1 = u64 [s1 + 0x108]\n 14119: u8 [a0 + 0x16] = a1\n 14122: a1 = u64 [s1 + 0x100]\n 14126: u8 [a0 + 0x15] = a1\n 14129: a1 = u64 [s1 + 0xf8]\n 14133: u8 [a0 + 0x14] = a1\n 14136: a1 = u64 [s1 + 0xf0]\n 14140: u8 [a0 + 0x13] = a1\n 14143: a1 = u64 [s1 + 0xe8]\n 14147: u8 [a0 + 0x12] = a1\n 14150: a1 = u64 [s1 + 0xe0]\n 14154: u8 [a0 + 0x11] = a1\n 14157: a1 = u64 [s1 + 0xd8]\n 14161: u8 [a0 + 0x1f] = a1\n 14164: a1 = u64 [s1 + 0xd0]\n 14168: u8 [a0 + 0x1e] = a1\n 14171: a1 = u64 [s1 + 0xc8]\n 14175: u8 [a0 + 0x1d] = a1\n 14178: a1 = u64 [s1 + 0xc0]\n 14182: u8 [a0 + 0x1c] = a1\n 14185: a1 = u64 [s1 + 0xb8]\n 14189: u8 [a0 + 0x1b] = a1\n 14192: a1 = u64 [s1 + 0xb0]\n 14196: u8 [a0 + 0x1a] = a1\n 14199: a1 = u64 [s1 + 0xa8]\n 14203: u8 [a0 + 0x19] = a1\n 14206: a1 = 0x20\n 14209: a0 = 0\n 14211: ra = 134, jump @0\n      : @195 [@dyn 67] (gas: 9)\n 14217: a1 = sp + 0xffffffffffffffe0\n 14220: a1 = a1 & 0xffffffffffffffe0\n 14223: u64 [s1 + 0x4f8] = a1\n 14227: sp = a1\n 14229: i32 a0 = a0 + 0\n 14231: i32 a2 = a1 + 0\n 14233: a1 = 0x20\n 14236: ecalli 6 // 'hash_keccak_256'\n 14238: fallthrough\n      : @196 (gas: 15)\n 14239: a3 = u64 [s1 + 0x4f8]\n 14243: a0 = u64 [a3]\n 14245: a1 = u64 [a3 + 0x8]\n 14248: a2 = u64 [a3 + 0x10]\n 14251: a3 = u64 [a3 + 0x18]\n 14254: a0 = reverse a0\n 14256: u64 [s1 + 0x4e8] = a0\n 14260: a0 = reverse a1\n 14262: u64 [s1 + 0x4e0] = a0\n 14266: a0 = reverse a2\n 14268: u64 [s1 + 0x4f0] = a0\n 14272: a0 = reverse a3\n 14274: u64 [s1 + 0x4f8] = a0\n 14278: a0 = u64 [s1 + 0x120]\n 14282: jump @246 if a0 != 0\n      : @197 (gas: 6)\n 14286: ra = 0\n 14288: t2 = 0\n 14290: t0 = 0\n 14292: a2 = u64 [s1 + 0x4e0]\n 14296: t1 = 0x20\n 14299: jump @251\n      : @198 (gas: 1)\n 14302: jump @200 if a0 == 1078619920\n      : @199 (gas: 1)\n 14309: jump @289\n      : @200 (gas: 11)\n 14312: a0 = sp + 0xffffffffffffffe0\n 14315: a0 = a0 & 0xffffffffffffffe0\n 14318: u64 [s1 + 0x4f0] = a0\n 14322: sp = a0\n 14324: u64 [a0 + 24] = 0\n 14327: u64 [a0 + 16] = 0\n 14330: u64 [a0 + 8] = 0\n 14333: u64 [a0 + 0] = 0\n 14335: i32 a0 = a0 + 0\n 14337: ecalli 10 // 'value_transferred'\n 14339: fallthrough\n      : @201 (gas: 9)\n 14340: a3 = u64 [s1 + 0x4f0]\n 14344: a0 = u64 [a3 + 0x10]\n 14347: a1 = u64 [a3 + 0x18]\n 14350: a2 = u64 [a3 + 0x8]\n 14353: a3 = u64 [a3]\n 14355: a1 = a1 | a2\n 14358: a0 = a0 | a3\n 14361: a0 = a0 | a1\n 14364: jump @203 if a0 == 0\n      : @202 (gas: 1)\n 14367: jump @289\n      : @203 (gas: 3)\n 14370: a0 = u64 [s1 + 0x4f8]\n 14374: a0 = i32 [a0]\n 14376: jump @205 if a0 >u 35\n      : @204 (gas: 1)\n 14380: jump @289\n      : @205 (gas: 17)\n 14383: a0 = s1 + 0x1000\n 14387: i32 a0 = a0 + 0xfffffffffffffd00\n 14391: a1 = 0x4\n 14394: ecalli 1 // 'call_data_load'\n 14396: a0 = s1 + 0x7ff\n 14400: a0 = a0 + 0x479\n 14404: a1 = u64 [a0 + 0x88]\n 14408: u64 [s1 + 0x4f8] = a1\n 14412: a1 = u64 [a0 + 0x90]\n 14416: u64 [s1 + 0x4f0] = a1\n 14420: a1 = u64 [a0 + 0x98]\n 14424: u64 [s1 + 0x4e8] = a1\n 14428: a0 = u64 [a0 + 0xa0]\n 14432: u64 [s1 + 0x4e0] = a0\n 14436: a1 = 0x20\n 14439: a0 = 0\n 14441: ra = 136, jump @0\n      : @206 [@dyn 68] (gas: 71)\n 14447: a1 = u64 [s1 + 0x4e0]\n 14451: a1 = reverse a1\n 14453: a2 = u64 [s1 + 0x4e8]\n 14457: a2 = reverse a2\n 14459: a3 = u64 [s1 + 0x4f0]\n 14463: a3 = reverse a3\n 14465: a4 = u64 [s1 + 0x4f8]\n 14469: a4 = reverse a4\n 14471: a5 = a4 >> 0x38\n 14474: u8 [a0 + 0x1f] = a5\n 14477: a5 = a4 >> 0x30\n 14480: u8 [a0 + 0x1e] = a5\n 14483: a5 = a4 >> 0x28\n 14486: u8 [a0 + 0x1d] = a5\n 14489: a5 = a4 >> 0x20\n 14492: u8 [a0 + 0x1c] = a5\n 14495: a5 = a4 >> 0x18\n 14498: u8 [a0 + 0x1b] = a5\n 14501: a5 = a4 >> 0x10\n 14504: u8 [a0 + 0x1a] = a5\n 14507: a5 = a4 >> 0x8\n 14510: u8 [a0 + 0x19] = a5\n 14513: u8 [a0 + 0x18] = a4\n 14516: a4 = a3 >> 0x38\n 14519: u8 [a0 + 0x17] = a4\n 14522: a4 = a3 >> 0x30\n 14525: u8 [a0 + 0x16] = a4\n 14528: a4 = a3 >> 0x28\n 14531: u8 [a0 + 0x15] = a4\n 14534: a4 = a3 >> 0x20\n 14537: u8 [a0 + 0x14] = a4\n 14540: a4 = a3 >> 0x18\n 14543: u8 [a0 + 0x13] = a4\n 14546: a4 = a3 >> 0x10\n 14549: u8 [a0 + 0x12] = a4\n 14552: a4 = a3 >> 0x8\n 14555: u8 [a0 + 0x11] = a4\n 14558: u8 [a0 + 0x10] = a3\n 14561: a3 = a2 >> 0x38\n 14564: u8 [a0 + 0xf] = a3\n 14567: a3 = a2 >> 0x30\n 14570: u8 [a0 + 0xe] = a3\n 14573: a3 = a2 >> 0x28\n 14576: u8 [a0 + 0xd] = a3\n 14579: a3 = a2 >> 0x20\n 14582: u8 [a0 + 0xc] = a3\n 14585: a3 = a2 >> 0x18\n 14588: u8 [a0 + 0xb] = a3\n 14591: a3 = a2 >> 0x10\n 14594: u8 [a0 + 0xa] = a3\n 14597: a3 = a2 >> 0x8\n 14600: u8 [a0 + 0x9] = a3\n 14603: u8 [a0 + 0x8] = a2\n 14606: a2 = a1 >> 0x38\n 14609: u8 [a0 + 0x7] = a2\n 14612: a2 = a1 >> 0x30\n 14615: u8 [a0 + 0x6] = a2\n 14618: a2 = a1 >> 0x28\n 14621: u8 [a0 + 0x5] = a2\n 14624: a2 = a1 >> 0x20\n 14627: u8 [a0 + 0x4] = a2\n 14630: a2 = a1 >> 0x18\n 14633: u8 [a0 + 0x3] = a2\n 14636: a2 = a1 >> 0x10\n 14639: u8 [a0 + 0x2] = a2\n 14642: a2 = a1 >> 0x8\n 14645: u8 [a0 + 0x1] = a2\n 14648: u8 [a0] = a1\n 14650: a0 = 0x20\n 14653: a1 = 0x20\n 14656: ra = 138, jump @0\n      : @207 [@dyn 69] (gas: 35)\n 14662: u8 [a0 + 31] = 0x1\n 14666: u8 [a0 + 30] = 0\n 14669: u8 [a0 + 29] = 0\n 14672: u8 [a0 + 28] = 0\n 14675: u8 [a0 + 27] = 0\n 14678: u8 [a0 + 26] = 0\n 14681: u8 [a0 + 25] = 0\n 14684: u8 [a0 + 24] = 0\n 14687: u8 [a0 + 23] = 0\n 14690: u8 [a0 + 22] = 0\n 14693: u8 [a0 + 21] = 0\n 14696: u8 [a0 + 20] = 0\n 14699: u8 [a0 + 19] = 0\n 14702: u8 [a0 + 18] = 0\n 14705: u8 [a0 + 17] = 0\n 14708: u8 [a0 + 16] = 0\n 14711: u8 [a0 + 15] = 0\n 14714: u8 [a0 + 14] = 0\n 14717: u8 [a0 + 13] = 0\n 14720: u8 [a0 + 12] = 0\n 14723: u8 [a0 + 11] = 0\n 14726: u8 [a0 + 10] = 0\n 14729: u8 [a0 + 9] = 0\n 14732: u8 [a0 + 8] = 0\n 14735: u8 [a0 + 7] = 0\n 14738: u8 [a0 + 6] = 0\n 14741: u8 [a0 + 5] = 0\n 14744: u8 [a0 + 4] = 0\n 14747: u8 [a0 + 3] = 0\n 14750: u8 [a0 + 2] = 0\n 14753: u8 [a0 + 1] = 0\n 14756: u8 [a0 + 0] = 0\n 14758: a1 = 0x40\n 14761: a0 = 0\n 14763: ra = 140, jump @0\n      : @208 [@dyn 70] (gas: 44)\n 14769: a1 = sp + 0xffffffffffffffe0\n 14772: a1 = a1 & 0xffffffffffffffe0\n 14775: u64 [s1 + 0x4f8] = a1\n 14779: sp = a1\n 14781: i32 a0 = a0 + 0\n 14783: i32 a2 = a1 + 0\n 14785: a1 = 0x40\n 14788: ecalli 6 // 'hash_keccak_256'\n 14790: a3 = u64 [s1 + 0x4f8]\n 14794: a0 = u64 [a3 + 0x18]\n 14797: a1 = u64 [a3 + 0x10]\n 14800: a2 = u64 [a3 + 0x8]\n 14803: a3 = u64 [a3]\n 14805: a0 = reverse a0\n 14807: a1 = reverse a1\n 14809: a2 = reverse a2\n 14811: a3 = reverse a3\n 14813: a4 = s1 + 0x7ff\n 14817: a4 = a4 + 0x479\n 14821: u64 [a4 + 0xe0] = a3\n 14825: u64 [a4 + 0xd8] = a2\n 14829: u64 [a4 + 0xd0] = a1\n 14833: u64 [a4 + 0xc8] = a0\n 14837: u64 [a4 + 256] = 0\n 14841: u64 [a4 + 248] = 0\n 14845: u64 [a4 + 240] = 0\n 14849: u64 [a4 + 232] = 0\n 14853: u32 [a4 + 264] = 0x20\n 14858: a0 = s1 + 0x1000\n 14862: i32 a1 = a0 + 0xfffffffffffffd40\n 14866: a0 = s1 + 0x1000\n 14870: i32 a3 = a0 + 0xfffffffffffffd60\n 14874: a0 = s1 + 0x1000\n 14878: i32 a4 = a0 + 0xfffffffffffffd80\n 14882: a2 = 0xffffffffffffffff\n 14885: a0 = 0\n 14887: ecalli 5 // 'get_storage'\n 14889: a0 = s1 + 0x7ff\n 14893: a0 = a0 + 0x479\n 14897: a0 = u64 [a0 + 0xe8]\n 14901: u64 [s1 + 0x4f8] = a0\n 14905: a0 = 0x40\n 14908: a1 = 0x20\n 14911: ra = 142, jump @0\n      : @209 [@dyn 71] (gas: 100)\n 14917: a1 = u8 [a0 + 0x11]\n 14920: a2 = u8 [a0 + 0x10]\n 14923: a3 = u8 [a0 + 0x12]\n 14926: a4 = u8 [a0 + 0x13]\n 14929: a1 = a1 << 0x8\n 14932: a1 = a1 | a2\n 14935: a3 = a3 << 0x10\n 14938: a4 = a4 << 0x18\n 14941: a3 = a3 | a4\n 14944: a1 = a1 | a3\n 14947: a2 = u8 [a0 + 0x15]\n 14950: a3 = u8 [a0 + 0x14]\n 14953: a4 = u8 [a0 + 0x16]\n 14956: a5 = u8 [a0 + 0x17]\n 14959: a2 = a2 << 0x8\n 14962: a2 = a2 | a3\n 14965: a4 = a4 << 0x10\n 14968: a5 = a5 << 0x18\n 14971: a4 = a4 | a5\n 14974: a2 = a2 | a4\n 14977: a2 = a2 << 0x20\n 14980: t0 = a2 | a1\n 14983: a2 = u8 [a0 + 0x1]\n 14986: a3 = u8 [a0]\n 14988: a4 = u8 [a0 + 0x2]\n 14991: a5 = u8 [a0 + 0x3]\n 14994: a2 = a2 << 0x8\n 14997: a2 = a2 | a3\n 15000: a4 = a4 << 0x10\n 15003: a5 = a5 << 0x18\n 15006: a4 = a4 | a5\n 15009: a2 = a2 | a4\n 15012: a3 = u8 [a0 + 0x5]\n 15015: a4 = u8 [a0 + 0x4]\n 15018: a5 = u8 [a0 + 0x6]\n 15021: a1 = u8 [a0 + 0x7]\n 15024: a3 = a3 << 0x8\n 15027: a3 = a3 | a4\n 15030: a5 = a5 << 0x10\n 15033: a1 = a1 << 0x18\n 15036: a1 = a1 | a5\n 15039: a1 = a1 | a3\n 15042: a1 = a1 << 0x20\n 15045: t1 = a1 | a2\n 15048: a1 = u8 [a0 + 0x19]\n 15051: a3 = u8 [a0 + 0x18]\n 15054: a4 = u8 [a0 + 0x1a]\n 15057: a5 = u8 [a0 + 0x1b]\n 15060: a1 = a1 << 0x8\n 15063: a1 = a1 | a3\n 15066: a4 = a4 << 0x10\n 15069: a5 = a5 << 0x18\n 15072: a4 = a4 | a5\n 15075: a1 = a1 | a4\n 15078: a3 = u8 [a0 + 0x1d]\n 15081: a4 = u8 [a0 + 0x1c]\n 15084: a5 = u8 [a0 + 0x1e]\n 15087: a2 = u8 [a0 + 0x1f]\n 15090: a3 = a3 << 0x8\n 15093: a3 = a3 | a4\n 15096: a5 = a5 << 0x10\n 15099: a2 = a2 << 0x18\n 15102: a2 = a2 | a5\n 15105: a2 = a2 | a3\n 15108: a2 = a2 << 0x20\n 15111: a3 = a2 | a1\n 15114: a1 = u8 [a0 + 0x9]\n 15117: a2 = u8 [a0 + 0x8]\n 15120: a4 = u8 [a0 + 0xa]\n 15123: a5 = u8 [a0 + 0xb]\n 15126: a1 = a1 << 0x8\n 15129: a1 = a1 | a2\n 15132: a4 = a4 << 0x10\n 15135: a5 = a5 << 0x18\n 15138: a4 = a4 | a5\n 15141: a1 = a1 | a4\n 15144: a2 = u8 [a0 + 0xd]\n 15147: a4 = u8 [a0 + 0xc]\n 15150: a5 = u8 [a0 + 0xe]\n 15153: a0 = u8 [a0 + 0xf]\n 15156: a2 = a2 << 0x8\n 15159: a2 = a2 | a4\n 15162: a5 = a5 << 0x10\n 15165: a0 = a0 << 0x18\n 15168: a0 = a0 | a5\n 15171: a0 = a0 | a2\n 15174: a0 = a0 << 0x20\n 15177: a0 = a0 | a1\n 15180: a1 = reverse a0\n 15182: a0 = reverse a3\n 15184: a2 = reverse t1\n 15186: a3 = reverse t0\n 15188: a2 = a2 | a3\n 15191: a3 = a0 | a1\n 15194: a3 = a3 | a2\n 15197: a3 = a3 >> 0x20\n 15200: a1 = a1 | a2\n 15203: a1 = a1 << 0x20\n 15206: a1 = a1 | a3\n 15209: jump @222 if a1 != 0\n      : @210 (gas: 7)\n 15213: a1 = u8 [s1 + 0x4f8]\n 15217: a1 = a1 >u 0\n 15219: u64 [s1 + 0x4f0] = a1\n 15223: i32 a0 = a0 + 0\n 15225: u64 [s1 + 0x4f8] = a0\n 15229: a1 = 0x20\n 15232: ra = 144, jump @0\n      : @211 [@dyn 72] (gas: 37)\n 15238: a1 = u64 [s1 + 0x4f0]\n 15242: u8 [a0 + 0x1f] = a1\n 15245: u8 [a0 + 30] = 0\n 15248: u8 [a0 + 29] = 0\n 15251: u8 [a0 + 28] = 0\n 15254: u8 [a0 + 27] = 0\n 15257: u8 [a0 + 26] = 0\n 15260: u8 [a0 + 25] = 0\n 15263: u8 [a0 + 24] = 0\n 15266: u8 [a0 + 23] = 0\n 15269: u8 [a0 + 22] = 0\n 15272: u8 [a0 + 21] = 0\n 15275: u8 [a0 + 20] = 0\n 15278: u8 [a0 + 19] = 0\n 15281: u8 [a0 + 18] = 0\n 15284: u8 [a0 + 17] = 0\n 15287: u8 [a0 + 16] = 0\n 15290: u8 [a0 + 15] = 0\n 15293: u8 [a0 + 14] = 0\n 15296: u8 [a0 + 13] = 0\n 15299: u8 [a0 + 12] = 0\n 15302: u8 [a0 + 11] = 0\n 15305: u8 [a0 + 10] = 0\n 15308: u8 [a0 + 9] = 0\n 15311: u8 [a0 + 8] = 0\n 15314: u8 [a0 + 7] = 0\n 15317: u8 [a0 + 6] = 0\n 15320: u8 [a0 + 5] = 0\n 15323: u8 [a0 + 4] = 0\n 15326: u8 [a0 + 3] = 0\n 15329: u8 [a0 + 2] = 0\n 15332: u8 [a0 + 1] = 0\n 15335: u8 [a0 + 0] = 0\n 15337: a1 = 0x20\n 15340: a0 = u64 [s1 + 0x4f8]\n 15344: ra = 0xd8\n 15348: jump @0\n      : @212 (gas: 1)\n 15351: jump @214 if a0 == 3191343421\n      : @213 (gas: 1)\n 15358: jump @289\n      : @214 (gas: 11)\n 15361: a0 = sp + 0xffffffffffffffe0\n 15364: a0 = a0 & 0xffffffffffffffe0\n 15367: u64 [s1 + 0x4f0] = a0\n 15371: sp = a0\n 15373: u64 [a0 + 24] = 0\n 15376: u64 [a0 + 16] = 0\n 15379: u64 [a0 + 8] = 0\n 15382: u64 [a0 + 0] = 0\n 15384: i32 a0 = a0 + 0\n 15386: ecalli 10 // 'value_transferred'\n 15388: fallthrough\n      : @215 (gas: 9)\n 15389: a3 = u64 [s1 + 0x4f0]\n 15393: a0 = u64 [a3 + 0x10]\n 15396: a1 = u64 [a3 + 0x18]\n 15399: a2 = u64 [a3 + 0x8]\n 15402: a3 = u64 [a3]\n 15404: a1 = a1 | a2\n 15407: a0 = a0 | a3\n 15410: a0 = a0 | a1\n 15413: jump @217 if a0 == 0\n      : @216 (gas: 1)\n 15416: jump @289\n      : @217 (gas: 5)\n 15419: a0 = u64 [s1 + 0x4f8]\n 15423: a0 = i32 [a0]\n 15425: a2 = s1 + 0x7ff\n 15429: a2 = a2 + 0x479\n 15433: jump @219 if a0 >u 3\n      : @218 (gas: 1)\n 15437: jump @289\n      : @219 (gas: 31)\n 15440: u64 [a2 + 224] = 0\n 15444: u64 [a2 + 216] = 0\n 15448: u64 [a2 + 208] = 0\n 15452: u64 [a2 + 200] = 0x2\n 15457: u64 [a2 + 256] = 0\n 15461: u64 [a2 + 248] = 0\n 15465: u64 [a2 + 240] = 0\n 15469: u64 [a2 + 232] = 0\n 15473: u32 [a2 + 264] = 0x20\n 15478: a0 = s1 + 0x1000\n 15482: i32 a1 = a0 + 0xfffffffffffffd40\n 15486: a0 = s1 + 0x1000\n 15490: i32 a3 = a0 + 0xfffffffffffffd60\n 15494: a0 = s1 + 0x1000\n 15498: i32 a4 = a0 + 0xfffffffffffffd80\n 15502: a2 = 0xffffffffffffffff\n 15505: a0 = 0\n 15507: ecalli 5 // 'get_storage'\n 15509: a1 = s1 + 0x7ff\n 15513: a1 = a1 + 0x479\n 15517: a0 = u64 [a1 + 0x100]\n 15521: u64 [s1 + 0x4e0] = a0\n 15525: a0 = u64 [a1 + 0xf8]\n 15529: u64 [s1 + 0x4e8] = a0\n 15533: a0 = u64 [a1 + 0xf0]\n 15537: u64 [s1 + 0x4f0] = a0\n 15541: a0 = u64 [a1 + 0xe8]\n 15545: u64 [s1 + 0x4f8] = a0\n 15549: a0 = 0x40\n 15552: a1 = 0x20\n 15555: ra = 146, jump @0\n      : @220 [@dyn 73] (gas: 100)\n 15561: a1 = u8 [a0 + 0x11]\n 15564: a2 = u8 [a0 + 0x10]\n 15567: a3 = u8 [a0 + 0x12]\n 15570: a4 = u8 [a0 + 0x13]\n 15573: a1 = a1 << 0x8\n 15576: a1 = a1 | a2\n 15579: a3 = a3 << 0x10\n 15582: a4 = a4 << 0x18\n 15585: a3 = a3 | a4\n 15588: a1 = a1 | a3\n 15591: a2 = u8 [a0 + 0x15]\n 15594: a3 = u8 [a0 + 0x14]\n 15597: a4 = u8 [a0 + 0x16]\n 15600: a5 = u8 [a0 + 0x17]\n 15603: a2 = a2 << 0x8\n 15606: a2 = a2 | a3\n 15609: a4 = a4 << 0x10\n 15612: a5 = a5 << 0x18\n 15615: a4 = a4 | a5\n 15618: a2 = a2 | a4\n 15621: a2 = a2 << 0x20\n 15624: t0 = a2 | a1\n 15627: a2 = u8 [a0 + 0x1]\n 15630: a3 = u8 [a0]\n 15632: a4 = u8 [a0 + 0x2]\n 15635: a5 = u8 [a0 + 0x3]\n 15638: a2 = a2 << 0x8\n 15641: a2 = a2 | a3\n 15644: a4 = a4 << 0x10\n 15647: a5 = a5 << 0x18\n 15650: a4 = a4 | a5\n 15653: a2 = a2 | a4\n 15656: a3 = u8 [a0 + 0x5]\n 15659: a4 = u8 [a0 + 0x4]\n 15662: a5 = u8 [a0 + 0x6]\n 15665: a1 = u8 [a0 + 0x7]\n 15668: a3 = a3 << 0x8\n 15671: a3 = a3 | a4\n 15674: a5 = a5 << 0x10\n 15677: a1 = a1 << 0x18\n 15680: a1 = a1 | a5\n 15683: a1 = a1 | a3\n 15686: a1 = a1 << 0x20\n 15689: t1 = a1 | a2\n 15692: a1 = u8 [a0 + 0x19]\n 15695: a3 = u8 [a0 + 0x18]\n 15698: a4 = u8 [a0 + 0x1a]\n 15701: a5 = u8 [a0 + 0x1b]\n 15704: a1 = a1 << 0x8\n 15707: a1 = a1 | a3\n 15710: a4 = a4 << 0x10\n 15713: a5 = a5 << 0x18\n 15716: a4 = a4 | a5\n 15719: a1 = a1 | a4\n 15722: a3 = u8 [a0 + 0x1d]\n 15725: a4 = u8 [a0 + 0x1c]\n 15728: a5 = u8 [a0 + 0x1e]\n 15731: a2 = u8 [a0 + 0x1f]\n 15734: a3 = a3 << 0x8\n 15737: a3 = a3 | a4\n 15740: a5 = a5 << 0x10\n 15743: a2 = a2 << 0x18\n 15746: a2 = a2 | a5\n 15749: a2 = a2 | a3\n 15752: a2 = a2 << 0x20\n 15755: a3 = a2 | a1\n 15758: a1 = u8 [a0 + 0x9]\n 15761: a2 = u8 [a0 + 0x8]\n 15764: a4 = u8 [a0 + 0xa]\n 15767: a5 = u8 [a0 + 0xb]\n 15770: a1 = a1 << 0x8\n 15773: a1 = a1 | a2\n 15776: a4 = a4 << 0x10\n 15779: a5 = a5 << 0x18\n 15782: a4 = a4 | a5\n 15785: a1 = a1 | a4\n 15788: a2 = u8 [a0 + 0xd]\n 15791: a4 = u8 [a0 + 0xc]\n 15794: a5 = u8 [a0 + 0xe]\n 15797: a0 = u8 [a0 + 0xf]\n 15800: a2 = a2 << 0x8\n 15803: a2 = a2 | a4\n 15806: a5 = a5 << 0x10\n 15809: a0 = a0 << 0x18\n 15812: a0 = a0 | a5\n 15815: a0 = a0 | a2\n 15818: a0 = a0 << 0x20\n 15821: a0 = a0 | a1\n 15824: a1 = reverse a0\n 15826: a0 = reverse a3\n 15828: a2 = reverse t1\n 15830: a3 = reverse t0\n 15832: a2 = a2 | a3\n 15835: a3 = a0 | a1\n 15838: a3 = a3 | a2\n 15841: a3 = a3 >> 0x20\n 15844: a1 = a1 | a2\n 15847: a1 = a1 << 0x20\n 15850: a1 = a1 | a3\n 15853: jump @222 if a1 != 0\n      : @221 (gas: 1)\n 15856: jump @297\n      : @222 (gas: 1)\n 15859: trap\n      : @223 (gas: 3)\n 15860: a0 = 0x40\n 15863: a1 = 0x20\n 15866: ra = 148, jump @0\n      : @224 [@dyn 74] (gas: 100)\n 15872: a1 = u8 [a0 + 0x11]\n 15875: a2 = u8 [a0 + 0x10]\n 15878: a3 = u8 [a0 + 0x12]\n 15881: a4 = u8 [a0 + 0x13]\n 15884: a1 = a1 << 0x8\n 15887: a1 = a1 | a2\n 15890: a3 = a3 << 0x10\n 15893: a4 = a4 << 0x18\n 15896: a3 = a3 | a4\n 15899: a1 = a1 | a3\n 15902: a2 = u8 [a0 + 0x15]\n 15905: a3 = u8 [a0 + 0x14]\n 15908: a4 = u8 [a0 + 0x16]\n 15911: a5 = u8 [a0 + 0x17]\n 15914: a2 = a2 << 0x8\n 15917: a2 = a2 | a3\n 15920: a4 = a4 << 0x10\n 15923: a5 = a5 << 0x18\n 15926: a4 = a4 | a5\n 15929: a2 = a2 | a4\n 15932: a2 = a2 << 0x20\n 15935: t0 = a2 | a1\n 15938: a2 = u8 [a0 + 0x1]\n 15941: a3 = u8 [a0]\n 15943: a4 = u8 [a0 + 0x2]\n 15946: a5 = u8 [a0 + 0x3]\n 15949: a2 = a2 << 0x8\n 15952: a2 = a2 | a3\n 15955: a4 = a4 << 0x10\n 15958: a5 = a5 << 0x18\n 15961: a4 = a4 | a5\n 15964: a2 = a2 | a4\n 15967: a3 = u8 [a0 + 0x5]\n 15970: a4 = u8 [a0 + 0x4]\n 15973: a5 = u8 [a0 + 0x6]\n 15976: a1 = u8 [a0 + 0x7]\n 15979: a3 = a3 << 0x8\n 15982: a3 = a3 | a4\n 15985: a5 = a5 << 0x10\n 15988: a1 = a1 << 0x18\n 15991: a1 = a1 | a5\n 15994: a1 = a1 | a3\n 15997: a1 = a1 << 0x20\n 16000: t1 = a1 | a2\n 16003: a1 = u8 [a0 + 0x19]\n 16006: a3 = u8 [a0 + 0x18]\n 16009: a4 = u8 [a0 + 0x1a]\n 16012: a5 = u8 [a0 + 0x1b]\n 16015: a1 = a1 << 0x8\n 16018: a1 = a1 | a3\n 16021: a4 = a4 << 0x10\n 16024: a5 = a5 << 0x18\n 16027: a4 = a4 | a5\n 16030: a1 = a1 | a4\n 16033: a3 = u8 [a0 + 0x1d]\n 16036: a4 = u8 [a0 + 0x1c]\n 16039: a5 = u8 [a0 + 0x1e]\n 16042: a2 = u8 [a0 + 0x1f]\n 16045: a3 = a3 << 0x8\n 16048: a3 = a3 | a4\n 16051: a5 = a5 << 0x10\n 16054: a2 = a2 << 0x18\n 16057: a2 = a2 | a5\n 16060: a2 = a2 | a3\n 16063: a2 = a2 << 0x20\n 16066: a3 = a2 | a1\n 16069: a1 = u8 [a0 + 0x9]\n 16072: a2 = u8 [a0 + 0x8]\n 16075: a4 = u8 [a0 + 0xa]\n 16078: a5 = u8 [a0 + 0xb]\n 16081: a1 = a1 << 0x8\n 16084: a1 = a1 | a2\n 16087: a4 = a4 << 0x10\n 16090: a5 = a5 << 0x18\n 16093: a4 = a4 | a5\n 16096: a1 = a1 | a4\n 16099: a2 = u8 [a0 + 0xd]\n 16102: a4 = u8 [a0 + 0xc]\n 16105: a5 = u8 [a0 + 0xe]\n 16108: a0 = u8 [a0 + 0xf]\n 16111: a2 = a2 << 0x8\n 16114: a2 = a2 | a4\n 16117: a5 = a5 << 0x10\n 16120: a0 = a0 << 0x18\n 16123: a0 = a0 | a5\n 16126: a0 = a0 | a2\n 16129: a0 = a0 << 0x20\n 16132: a0 = a0 | a1\n 16135: a4 = reverse a0\n 16137: a2 = reverse a3\n 16139: a5 = reverse t1\n 16141: a3 = reverse t0\n 16143: a0 = a3 | a5\n 16146: a1 = a2 | a4\n 16149: a1 = a1 | a0\n 16152: a1 = a1 >> 0x20\n 16155: a0 = a0 | a4\n 16158: a0 = a0 << 0x20\n 16161: a0 = a0 | a1\n 16164: jump @222 if a0 != 0\n      : @225 (gas: 8)\n 16168: i32 a0 = a2 + 0\n 16170: a1 = 0x20\n 16173: u64 [s1 + 0x4d8] = a0\n 16177: u64 [s1 + 0x4f8] = a2\n 16181: u64 [s1 + 0x4f0] = a3\n 16185: u64 [s1 + 0x4e8] = a4\n 16189: u64 [s1 + 0x4e0] = a5\n 16193: ra = 150, jump @0\n      : @226 [@dyn 75] (gas: 43)\n 16199: u8 [a0 + 31] = 0\n 16202: u8 [a0 + 30] = 0\n 16205: u8 [a0 + 29] = 0\n 16208: u8 [a0 + 28] = 0\n 16211: u8 [a0 + 27] = 0\n 16214: u8 [a0 + 26] = 0\n 16217: u8 [a0 + 25] = 0\n 16220: u8 [a0 + 24] = 0\n 16223: u8 [a0 + 23] = 0\n 16226: u8 [a0 + 22] = 0\n 16229: u8 [a0 + 21] = 0\n 16232: u8 [a0 + 20] = 0\n 16235: u8 [a0 + 19] = 0\n 16238: u8 [a0 + 18] = 0\n 16241: u8 [a0 + 17] = 0\n 16244: u8 [a0 + 16] = 0\n 16247: u8 [a0 + 15] = 0\n 16250: u8 [a0 + 14] = 0\n 16253: u8 [a0 + 13] = 0\n 16256: u8 [a0 + 12] = 0\n 16259: u8 [a0 + 11] = 0\n 16262: u8 [a0 + 10] = 0\n 16265: u8 [a0 + 9] = 0\n 16268: u8 [a0 + 8] = 0\n 16271: u8 [a0 + 7] = 0\n 16274: u8 [a0 + 6] = 0\n 16277: u8 [a0 + 5] = 0\n 16280: u8 [a0 + 3] = 0xa0\n 16285: u8 [a0 + 2] = 0x79\n 16289: u8 [a0 + 1] = 0xc3\n 16294: u8 [a0 + 0] = 0x8\n 16297: a1 = u64 [s1 + 0x4e8]\n 16301: a3 = u64 [s1 + 0x4e0]\n 16305: a3 = a3 | a1\n 16308: a4 = 0x100000000\n 16318: a1 = 0xfffffffc\n 16328: a2 = u64 [s1 + 0x4f8]\n 16332: a1 = a2 <u a1\n 16335: a2 = u64 [s1 + 0x4f0]\n 16339: a1 = 0 if a2 != 0\n 16341: a1 = 0 if a3 != 0\n 16343: u8 [a0 + 4] = 0\n 16346: jump @222 if a1 == 0\n      : @227 (gas: 6)\n 16350: a0 = u64 [s1 + 0x4d8]\n 16354: i32 a0 = a0 + 0x4\n 16357: a1 = 0x20\n 16360: u64 [s1 + 0x4e8] = a3\n 16364: u64 [s1 + 0x4e0] = a4\n 16368: ra = 152, jump @0\n      : @228 [@dyn 76] (gas: 41)\n 16374: a4 = u64 [s1 + 0x4e8]\n 16378: a3 = u64 [s1 + 0x4f0]\n 16382: a2 = u64 [s1 + 0x4f8]\n 16386: u8 [a0 + 31] = 0x20\n 16390: u8 [a0 + 30] = 0\n 16393: u8 [a0 + 29] = 0\n 16396: u8 [a0 + 28] = 0\n 16399: u8 [a0 + 27] = 0\n 16402: u8 [a0 + 26] = 0\n 16405: u8 [a0 + 25] = 0\n 16408: u8 [a0 + 24] = 0\n 16411: u8 [a0 + 23] = 0\n 16414: u8 [a0 + 22] = 0\n 16417: u8 [a0 + 21] = 0\n 16420: u8 [a0 + 20] = 0\n 16423: u8 [a0 + 19] = 0\n 16426: u8 [a0 + 18] = 0\n 16429: u8 [a0 + 17] = 0\n 16432: u8 [a0 + 16] = 0\n 16435: u8 [a0 + 15] = 0\n 16438: u8 [a0 + 14] = 0\n 16441: u8 [a0 + 13] = 0\n 16444: u8 [a0 + 12] = 0\n 16447: u8 [a0 + 11] = 0\n 16450: u8 [a0 + 10] = 0\n 16453: u8 [a0 + 9] = 0\n 16456: u8 [a0 + 8] = 0\n 16459: u8 [a0 + 7] = 0\n 16462: u8 [a0 + 6] = 0\n 16465: u8 [a0 + 5] = 0\n 16468: u8 [a0 + 4] = 0\n 16471: u8 [a0 + 3] = 0\n 16474: u8 [a0 + 2] = 0\n 16477: u8 [a0 + 1] = 0\n 16480: a1 = u64 [s1 + 0x4e0]\n 16484: a1 = a1 + 0xffffffffffffffdc\n 16487: a1 = a2 <u a1\n 16490: a1 = 0 if a3 != 0\n 16492: a1 = 0 if a4 != 0\n 16494: u8 [a0 + 0] = 0\n 16496: jump @222 if a1 == 0\n      : @229 (gas: 4)\n 16500: a0 = u64 [s1 + 0x4d8]\n 16504: i32 a0 = a0 + 0x24\n 16507: a1 = 0x20\n 16510: ra = 154, jump @0\n      : @230 [@dyn 77] (gas: 40)\n 16516: u8 [a0 + 31] = 0x12\n 16520: u8 [a0 + 30] = 0\n 16523: u8 [a0 + 29] = 0\n 16526: u8 [a0 + 28] = 0\n 16529: u8 [a0 + 27] = 0\n 16532: u8 [a0 + 26] = 0\n 16535: u8 [a0 + 25] = 0\n 16538: u8 [a0 + 24] = 0\n 16541: u8 [a0 + 23] = 0\n 16544: u8 [a0 + 22] = 0\n 16547: u8 [a0 + 21] = 0\n 16550: u8 [a0 + 20] = 0\n 16553: u8 [a0 + 19] = 0\n 16556: u8 [a0 + 18] = 0\n 16559: u8 [a0 + 17] = 0\n 16562: u8 [a0 + 16] = 0\n 16565: u8 [a0 + 15] = 0\n 16568: u8 [a0 + 14] = 0\n 16571: u8 [a0 + 13] = 0\n 16574: u8 [a0 + 12] = 0\n 16577: u8 [a0 + 11] = 0\n 16580: u8 [a0 + 10] = 0\n 16583: u8 [a0 + 9] = 0\n 16586: u8 [a0 + 8] = 0\n 16589: u8 [a0 + 7] = 0\n 16592: u8 [a0 + 6] = 0\n 16595: u8 [a0 + 5] = 0\n 16598: u8 [a0 + 4] = 0\n 16601: u8 [a0 + 3] = 0\n 16604: u8 [a0 + 2] = 0\n 16607: u8 [a0 + 1] = 0\n 16610: a1 = 0xffffffbc\n 16620: a2 = u64 [s1 + 0x4f8]\n 16624: a1 = a2 <u a1\n 16627: a2 = u64 [s1 + 0x4f0]\n 16631: a1 = 0 if a2 != 0\n 16633: a2 = u64 [s1 + 0x4e8]\n 16637: a1 = 0 if a2 != 0\n 16639: u8 [a0 + 0] = 0\n 16641: jump @222 if a1 == 0\n      : @231 (gas: 4)\n 16645: a0 = u64 [s1 + 0x4d8]\n 16649: i32 a0 = a0 + 0x44\n 16652: a1 = 0x20\n 16655: ra = 156, jump @0\n      : @232 [@dyn 78] (gas: 34)\n 16661: u8 [a0 + 31] = 0\n 16664: u8 [a0 + 30] = 0\n 16667: u8 [a0 + 29] = 0\n 16670: u8 [a0 + 28] = 0\n 16673: u8 [a0 + 27] = 0\n 16676: u8 [a0 + 26] = 0\n 16679: u8 [a0 + 25] = 0\n 16682: u8 [a0 + 24] = 0\n 16685: u8 [a0 + 23] = 0\n 16688: u8 [a0 + 22] = 0\n 16691: u8 [a0 + 21] = 0\n 16694: u8 [a0 + 20] = 0\n 16697: u8 [a0 + 19] = 0\n 16700: u8 [a0 + 18] = 0\n 16703: u8 [a0 + 17] = 0x65\n 16707: u8 [a0 + 16] = 0x67\n 16711: u8 [a0 + 15] = 0x6e\n 16715: u8 [a0 + 14] = 0x61\n 16719: u8 [a0 + 13] = 0x72\n 16723: a5 = 0x20\n 16726: u8 [a0 + 0xc] = a5\n 16729: u8 [a0 + 11] = 0x66\n 16733: u8 [a0 + 10] = 0x6f\n 16737: u8 [a0 + 0x9] = a5\n 16740: u8 [a0 + 8] = 0x74\n 16744: a4 = 0x75\n 16747: u8 [a0 + 0x7] = a4\n 16750: u8 [a0 + 6] = 0x6f\n 16754: u8 [a0 + 0x5] = a5\n 16757: u8 [a0 + 4] = 0x78\n 16761: u8 [a0 + 3] = 0x65\n 16765: u8 [a0 + 2] = 0x64\n 16769: u8 [a0 + 1] = 0x6e\n 16773: fallthrough\n      : @233 (gas: 4)\n 16774: u8 [a0 + 0] = 0x49\n 16777: a1 = 0x64\n 16780: a0 = u64 [s1 + 0x4d8]\n 16784: ra = 158, jump @0\n      : @234 [@dyn 79] (gas: 5)\n 16790: i32 a1 = a0 + 0\n 16792: a0 = 0x1\n 16795: a2 = 0x64\n 16798: ecalli 7 // 'seal_return'\n 16800: fallthrough\n      : @235 (gas: 6)\n 16801: a0 = t0 | a5\n 16804: a0 = a0 >> 0x20\n 16807: a1 = a1 | a5\n 16810: a1 = a1 << 0x20\n 16813: a0 = a0 | a1\n 16816: jump @222 if a0 != 0\n      : @236 (gas: 7)\n 16820: i32 a0 = a2 + 0\n 16822: a1 = 0x20\n 16825: u64 [s1 + 0x4d8] = a0\n 16829: u64 [s1 + 0x4e8] = a2\n 16833: u64 [s1 + 0x4e0] = a3\n 16837: u64 [s1 + 0x4f8] = a4\n 16841: ra = 160, jump @0\n      : @237 [@dyn 80] (gas: 44)\n 16847: a3 = u64 [s1 + 0x4e0]\n 16851: a2 = u64 [s1 + 0x4e8]\n 16855: u8 [a0 + 31] = 0\n 16858: u8 [a0 + 30] = 0\n 16861: u8 [a0 + 29] = 0\n 16864: u8 [a0 + 28] = 0\n 16867: u8 [a0 + 27] = 0\n 16870: u8 [a0 + 26] = 0\n 16873: u8 [a0 + 25] = 0\n 16876: u8 [a0 + 24] = 0\n 16879: u8 [a0 + 23] = 0\n 16882: u8 [a0 + 22] = 0\n 16885: u8 [a0 + 21] = 0\n 16888: u8 [a0 + 20] = 0\n 16891: u8 [a0 + 19] = 0\n 16894: u8 [a0 + 18] = 0\n 16897: u8 [a0 + 17] = 0\n 16900: u8 [a0 + 16] = 0\n 16903: u8 [a0 + 15] = 0\n 16906: u8 [a0 + 14] = 0\n 16909: u8 [a0 + 13] = 0\n 16912: u8 [a0 + 12] = 0\n 16915: u8 [a0 + 11] = 0\n 16918: u8 [a0 + 10] = 0\n 16921: u8 [a0 + 9] = 0\n 16924: u8 [a0 + 8] = 0\n 16927: u8 [a0 + 7] = 0\n 16930: u8 [a0 + 6] = 0\n 16933: u8 [a0 + 5] = 0\n 16936: u8 [a0 + 3] = 0xa0\n 16941: u8 [a0 + 2] = 0x79\n 16945: u8 [a0 + 1] = 0xc3\n 16950: u8 [a0 + 0] = 0x8\n 16953: a1 = u64 [s1 + 0x4f0]\n 16957: a4 = u64 [s1 + 0x4f8]\n 16961: a4 = a4 | a1\n 16964: a5 = 0x100000000\n 16974: a1 = 0xfffffffc\n 16984: a1 = a2 <u a1\n 16987: a1 = 0 if a3 != 0\n 16989: u64 [s1 + 0x4f8] = a4\n 16993: a1 = 0 if a4 != 0\n 16995: u8 [a0 + 4] = 0\n 16998: jump @222 if a1 == 0\n      : @238 (gas: 5)\n 17002: a0 = u64 [s1 + 0x4d8]\n 17006: i32 a0 = a0 + 0x4\n 17009: a1 = 0x20\n 17012: u64 [s1 + 0x4f0] = a5\n 17016: ra = 162, jump @0\n      : @239 [@dyn 81] (gas: 41)\n 17022: u8 [a0 + 31] = 0x20\n 17026: u8 [a0 + 30] = 0\n 17029: u8 [a0 + 29] = 0\n 17032: u8 [a0 + 28] = 0\n 17035: u8 [a0 + 27] = 0\n 17038: u8 [a0 + 26] = 0\n 17041: u8 [a0 + 25] = 0\n 17044: u8 [a0 + 24] = 0\n 17047: u8 [a0 + 23] = 0\n 17050: u8 [a0 + 22] = 0\n 17053: u8 [a0 + 21] = 0\n 17056: u8 [a0 + 20] = 0\n 17059: u8 [a0 + 19] = 0\n 17062: u8 [a0 + 18] = 0\n 17065: u8 [a0 + 17] = 0\n 17068: u8 [a0 + 16] = 0\n 17071: u8 [a0 + 15] = 0\n 17074: u8 [a0 + 14] = 0\n 17077: u8 [a0 + 13] = 0\n 17080: u8 [a0 + 12] = 0\n 17083: u8 [a0 + 11] = 0\n 17086: u8 [a0 + 10] = 0\n 17089: u8 [a0 + 9] = 0\n 17092: u8 [a0 + 8] = 0\n 17095: u8 [a0 + 7] = 0\n 17098: u8 [a0 + 6] = 0\n 17101: u8 [a0 + 5] = 0\n 17104: u8 [a0 + 4] = 0\n 17107: u8 [a0 + 3] = 0\n 17110: u8 [a0 + 2] = 0\n 17113: u8 [a0 + 1] = 0\n 17116: a1 = u64 [s1 + 0x4f0]\n 17120: a1 = a1 + 0xffffffffffffffdc\n 17123: a2 = u64 [s1 + 0x4e8]\n 17127: a1 = a2 <u a1\n 17130: a2 = u64 [s1 + 0x4e0]\n 17134: a1 = 0 if a2 != 0\n 17136: a2 = u64 [s1 + 0x4f8]\n 17140: a1 = 0 if a2 != 0\n 17142: u8 [a0 + 0] = 0\n 17144: jump @222 if a1 == 0\n      : @240 (gas: 4)\n 17148: a0 = u64 [s1 + 0x4d8]\n 17152: i32 a0 = a0 + 0x24\n 17155: a1 = 0x20\n 17158: ra = 164, jump @0\n      : @241 [@dyn 82] (gas: 40)\n 17164: u8 [a0 + 31] = 0xc\n 17168: u8 [a0 + 30] = 0\n 17171: u8 [a0 + 29] = 0\n 17174: u8 [a0 + 28] = 0\n 17177: u8 [a0 + 27] = 0\n 17180: u8 [a0 + 26] = 0\n 17183: u8 [a0 + 25] = 0\n 17186: u8 [a0 + 24] = 0\n 17189: u8 [a0 + 23] = 0\n 17192: u8 [a0 + 22] = 0\n 17195: u8 [a0 + 21] = 0\n 17198: u8 [a0 + 20] = 0\n 17201: u8 [a0 + 19] = 0\n 17204: u8 [a0 + 18] = 0\n 17207: u8 [a0 + 17] = 0\n 17210: u8 [a0 + 16] = 0\n 17213: u8 [a0 + 15] = 0\n 17216: u8 [a0 + 14] = 0\n 17219: u8 [a0 + 13] = 0\n 17222: u8 [a0 + 12] = 0\n 17225: u8 [a0 + 11] = 0\n 17228: u8 [a0 + 10] = 0\n 17231: u8 [a0 + 9] = 0\n 17234: u8 [a0 + 8] = 0\n 17237: u8 [a0 + 7] = 0\n 17240: u8 [a0 + 6] = 0\n 17243: u8 [a0 + 5] = 0\n 17246: u8 [a0 + 4] = 0\n 17249: u8 [a0 + 3] = 0\n 17252: u8 [a0 + 2] = 0\n 17255: u8 [a0 + 1] = 0\n 17258: a1 = 0xffffffbc\n 17268: a2 = u64 [s1 + 0x4e8]\n 17272: a1 = a2 <u a1\n 17275: a2 = u64 [s1 + 0x4e0]\n 17279: a1 = 0 if a2 != 0\n 17281: a2 = u64 [s1 + 0x4f8]\n 17285: a1 = 0 if a2 != 0\n 17287: u8 [a0 + 0] = 0\n 17289: jump @222 if a1 == 0\n      : @242 (gas: 4)\n 17293: a0 = u64 [s1 + 0x4d8]\n 17297: i32 a0 = a0 + 0x44\n 17300: a1 = 0x20\n 17303: ra = 166, jump @0\n      : @243 [@dyn 83] (gas: 32)\n 17309: u8 [a0 + 31] = 0\n 17312: u8 [a0 + 30] = 0\n 17315: u8 [a0 + 29] = 0\n 17318: u8 [a0 + 28] = 0\n 17321: u8 [a0 + 27] = 0\n 17324: u8 [a0 + 26] = 0\n 17327: u8 [a0 + 25] = 0\n 17330: u8 [a0 + 24] = 0\n 17333: u8 [a0 + 23] = 0\n 17336: u8 [a0 + 22] = 0\n 17339: u8 [a0 + 21] = 0\n 17342: u8 [a0 + 20] = 0\n 17345: u8 [a0 + 19] = 0\n 17348: u8 [a0 + 18] = 0\n 17351: u8 [a0 + 17] = 0\n 17354: u8 [a0 + 16] = 0\n 17357: u8 [a0 + 15] = 0\n 17360: u8 [a0 + 14] = 0\n 17363: u8 [a0 + 13] = 0\n 17366: u8 [a0 + 12] = 0\n 17369: u8 [a0 + 11] = 0x65\n 17373: u8 [a0 + 10] = 0x74\n 17377: u8 [a0 + 9] = 0x73\n 17381: u8 [a0 + 8] = 0x69\n 17385: u8 [a0 + 7] = 0x78\n 17389: u8 [a0 + 6] = 0x65\n 17393: u8 [a0 + 5] = 0x20\n 17397: u8 [a0 + 4] = 0x61\n 17401: u8 [a0 + 3] = 0x79\n 17405: u8 [a0 + 2] = 0x20\n 17409: u8 [a0 + 1] = 0x44\n 17413: jump @233\n      : @244 (gas: 8)\n 17416: a0 = u64 [s1 + 0x28]\n 17419: a1 = u64 [s1 + 0x20]\n 17422: a0 = a0 | a1\n 17425: a1 = u64 [s1 + 0x30]\n 17428: a2 = u64 [s1 + 0x18]\n 17431: a1 = a1 | a2\n 17434: a0 = a0 | a1\n 17437: jump @256 if a0 != 0\n      : @245 (gas: 5)\n 17441: u64 [s1 + 1272] = 0\n 17445: u64 [s1 + 1264] = 0\n 17449: u64 [s1 + 1256] = 0\n 17453: u64 [s1 + 1248] = 0\n 17457: jump @260\n      : @246 (gas: 124)\n 17460: u64 [s1 + 1232] = 0\n 17464: u64 [s1 + 1240] = 0\n 17468: u64 [s1 + 1224] = 0\n 17472: t1 = u64 [s1 + 0x4b8]\n 17476: t0 = t1 + 0x20\n 17479: a0 = t0 <u t1\n 17482: ra = u64 [s1 + 0x4a0]\n 17486: a2 = ra + a0\n 17489: a1 = a2 <u ra\n 17492: a1 = a0 if a0 == 0\n 17495: a0 = u64 [s1 + 0x4a8]\n 17499: a1 = a1 + a0\n 17502: a0 = a1 <u a0\n 17505: t2 = u64 [s1 + 0x4b0]\n 17509: t2 = t2 + a0\n 17512: a4 = a1 >u 0\n 17514: a5 = t2 >u 0\n 17516: a5 = a4 if t2 == 0\n 17519: a4 = 0x100000000\n 17529: a3 = t0\n 17531: a0 = maxu(t0, a4)\n 17534: t0 = a4 if a5 == 0\n 17537: a3 = a4 if a2 == 0\n 17540: a0 = a3 if a2 != 0\n 17543: a3 = a1 | t2\n 17546: a0 = t0 if a3 != 0\n 17549: a4 = a2\n 17551: a4 = 0 if a5 == 0\n 17553: a4 = a2 if a3 == 0\n 17556: a2 = ra ^ 0xffffffffffffffff\n 17559: a4 = a4 + a2\n 17562: a3 = t1 ^ 0xffffffffffffffff\n 17565: a0 = a0 + a3\n 17568: a5 = a0 <u a3\n 17571: a3 = a4 + a5\n 17574: a4 = a3 ^ a2\n 17577: a2 = a3 <u a2\n 17580: a2 = a5 if a4 == 0\n 17583: a5 = a1\n 17585: a5 = 0 if t2 == 0\n 17587: a5 = a1 if t2 == 0\n 17590: a1 = u64 [s1 + 0x4a8]\n 17594: a1 = a1 ^ 0xffffffffffffffff\n 17597: u64 [s1 + 0x490] = a1\n 17601: a5 = a5 + a1\n 17604: t1 = a5 + a2\n 17607: a1 = t1 << 0x3b\n 17610: a2 = a3 >> 0x5\n 17613: a1 = a1 | a2\n 17616: a3 = a3 << 0x3b\n 17619: a0 = a0 >> 0x5\n 17622: a4 = a0 | a3\n 17625: u64 [s1 + 0x498] = a4\n 17629: a2 = u64 [s1 + 0x120]\n 17633: a0 = a2 <u 0x1\n 17636: a3 = -a0\n 17638: ra = a0 << 0x3b\n 17641: a0 = a2 + 0xffffffffffffffff\n 17644: a0 = a0 >> 0x5\n 17647: a2 = a0 - ra\n 17650: u64 [s1 + 0x4c0] = a2\n 17654: a0 = a1 ^ a3\n 17657: t0 = a1 <u a3\n 17660: u64 [s1 + 0x480] = a3\n 17664: a2 = a4 <u a2\n 17667: a2 = t0 if a0 != 0\n 17670: u64 [s1 + 0x488] = a2\n 17674: a0 = u64 [s1 + 0x4b0]\n 17678: a4 = a0 ^ 0xffffffffffffffff\n 17681: t2 = t2 + a4\n 17684: a0 = u64 [s1 + 0x490]\n 17688: a4 = a5 <u a0\n 17691: a4 = a4 + t2\n 17694: a5 = t1 <u a5\n 17697: a5 = a5 + a4\n 17700: t0 = t1 >> 0x5\n 17703: a4 = a5 << 0x3b\n 17706: a4 = t0 | a4\n 17709: a5 = a5 >> 0x5\n 17712: t0 = a3 >> 0x5\n 17715: t1 = t0 - ra\n 17718: t2 = a4 <u t1\n 17721: ra = a5 ^ t0\n 17724: a0 = a5 <u t0\n 17727: a0 = t2 if ra == 0\n 17730: a2 = a4 ^ t1\n 17733: a2 = a2 | ra\n 17736: a3 = u64 [s1 + 0x488]\n 17740: a0 = a3 if a2 == 0\n 17743: a2 = u64 [s1 + 0x498]\n 17747: a3 = u64 [s1 + 0x4c0]\n 17751: a2 = a3 if a0 == 0\n 17754: a3 = u64 [s1 + 0x480]\n 17758: a1 = a3 if a0 == 0\n 17761: a5 = t0 if a0 == 0\n 17764: a4 = t1 if a0 == 0\n 17767: t0 = u64 [s1 + 0x4c8]\n 17771: a0 = a4 >> 0x3b\n 17774: a5 = a5 << 0x5\n 17777: t1 = a5 | a0\n 17780: a5 = u64 [s1 + 0x4d8]\n 17784: a0 = a1 >> 0x3b\n 17787: a4 = a4 << 0x5\n 17790: t2 = a4 | a0\n 17793: a4 = u64 [s1 + 0x4d0]\n 17797: a3 = a2 >> 0x3b\n 17800: a1 = a1 << 0x5\n 17803: a1 = a1 | a3\n 17806: a3 = a2 << 0x5\n 17809: a0 = a3 + 0x40\n 17812: u64 [s1 + 0x498] = a0\n 17816: a3 = a0 <u a3\n 17819: a0 = a1 + a3\n 17822: u64 [s1 + 0x490] = a0\n 17826: a1 = a0 <u a1\n 17829: a1 = a3 if a3 == 0\n 17832: a1 = a1 + t2\n 17835: u64 [s1 + 0x488] = a1\n 17839: a1 = a1 <u t2\n 17842: a1 = a1 + t1\n 17845: u64 [s1 + 0x480] = a1\n 17849: a3 = 0x20\n 17852: a0 = u64 [s1 + 0x4e0]\n 17856: fallthrough\n      : @247 (gas: 31)\n 17857: u64 [s1 + 0x4c8] = t0\n 17861: u64 [s1 + 0x4e0] = a0\n 17865: a0 = u64 [s1 + 0x4b8]\n 17869: a0 = a0 + a3\n 17872: u64 [s1 + 0x4c0] = a3\n 17876: a1 = a0 <u a3\n 17879: a2 = u64 [s1 + 0x4a0]\n 17883: a2 = a2 + a4\n 17886: a2 = a2 + a1\n 17889: a3 = a2 ^ a4\n 17892: u64 [s1 + 0x4d0] = a4\n 17896: a4 = a2 <u a4\n 17899: a4 = a1 if a3 == 0\n 17902: a1 = u64 [s1 + 0x4a8]\n 17906: a1 = a1 + a5\n 17909: u64 [s1 + 0x4d8] = a5\n 17913: a3 = a1 <u a5\n 17916: a5 = u64 [s1 + 0x4b0]\n 17920: a5 = a5 + t0\n 17923: a3 = a3 + a5\n 17926: a4 = a4 + a1\n 17929: a1 = a4 <u a1\n 17932: a1 = a1 + a3\n 17935: a1 = a1 | a2\n 17938: a2 = a0 | a4\n 17941: a2 = a2 | a1\n 17944: a1 = a1 | a4\n 17947: a2 = a2 >> 0x20\n 17950: a1 = a1 << 0x20\n 17953: a1 = a1 | a2\n 17956: jump @222 if a1 != 0\n      : @248 (gas: 3)\n 17960: i32 a0 = a0 + 0\n 17962: a1 = 0x20\n 17965: ra = 168, jump @0\n      : @249 [@dyn 84] (gas: 115)\n 17971: a1 = u8 [a0 + 0x1]\n 17974: a2 = u8 [a0]\n 17976: a3 = u8 [a0 + 0x2]\n 17979: a4 = u8 [a0 + 0x3]\n 17982: a1 = a1 << 0x8\n 17985: a1 = a1 | a2\n 17988: a3 = a3 << 0x10\n 17991: a4 = a4 << 0x18\n 17994: a3 = a3 | a4\n 17997: a1 = a1 | a3\n 18000: a2 = u8 [a0 + 0x5]\n 18003: a3 = u8 [a0 + 0x4]\n 18006: a4 = u8 [a0 + 0x6]\n 18009: a5 = u8 [a0 + 0x7]\n 18012: a2 = a2 << 0x8\n 18015: a2 = a2 | a3\n 18018: a4 = a4 << 0x10\n 18021: a5 = a5 << 0x18\n 18024: a4 = a4 | a5\n 18027: a2 = a2 | a4\n 18030: a2 = a2 << 0x20\n 18033: t0 = a2 | a1\n 18036: a2 = u8 [a0 + 0x9]\n 18039: a3 = u8 [a0 + 0x8]\n 18042: a4 = u8 [a0 + 0xa]\n 18045: a5 = u8 [a0 + 0xb]\n 18048: a2 = a2 << 0x8\n 18051: a2 = a2 | a3\n 18054: a4 = a4 << 0x10\n 18057: a5 = a5 << 0x18\n 18060: a4 = a4 | a5\n 18063: a2 = a2 | a4\n 18066: a3 = u8 [a0 + 0xd]\n 18069: a4 = u8 [a0 + 0xc]\n 18072: a5 = u8 [a0 + 0xe]\n 18075: a1 = u8 [a0 + 0xf]\n 18078: a3 = a3 << 0x8\n 18081: a3 = a3 | a4\n 18084: a5 = a5 << 0x10\n 18087: a1 = a1 << 0x18\n 18090: a1 = a1 | a5\n 18093: a1 = a1 | a3\n 18096: a1 = a1 << 0x20\n 18099: t1 = a1 | a2\n 18102: a1 = u8 [a0 + 0x11]\n 18105: a3 = u8 [a0 + 0x10]\n 18108: a4 = u8 [a0 + 0x12]\n 18111: a5 = u8 [a0 + 0x13]\n 18114: a1 = a1 << 0x8\n 18117: a1 = a1 | a3\n 18120: a4 = a4 << 0x10\n 18123: a5 = a5 << 0x18\n 18126: a4 = a4 | a5\n 18129: a1 = a1 | a4\n 18132: a3 = u8 [a0 + 0x15]\n 18135: a4 = u8 [a0 + 0x14]\n 18138: a5 = u8 [a0 + 0x16]\n 18141: a2 = u8 [a0 + 0x17]\n 18144: a3 = a3 << 0x8\n 18147: a3 = a3 | a4\n 18150: a5 = a5 << 0x10\n 18153: a2 = a2 << 0x18\n 18156: a2 = a2 | a5\n 18159: a2 = a2 | a3\n 18162: a2 = a2 << 0x20\n 18165: a3 = a2 | a1\n 18168: a1 = u8 [a0 + 0x19]\n 18171: a2 = u8 [a0 + 0x18]\n 18174: a4 = u8 [a0 + 0x1a]\n 18177: a5 = u8 [a0 + 0x1b]\n 18180: a1 = a1 << 0x8\n 18183: a1 = a1 | a2\n 18186: a4 = a4 << 0x10\n 18189: a5 = a5 << 0x18\n 18192: a4 = a4 | a5\n 18195: a1 = a1 | a4\n 18198: a2 = u8 [a0 + 0x1d]\n 18201: a4 = u8 [a0 + 0x1c]\n 18204: a5 = u8 [a0 + 0x1e]\n 18207: a0 = u8 [a0 + 0x1f]\n 18210: a2 = a2 << 0x8\n 18213: a2 = a2 | a4\n 18216: a5 = a5 << 0x10\n 18219: a0 = a0 << 0x18\n 18222: a0 = a0 | a5\n 18225: a0 = a0 | a2\n 18228: a0 = a0 << 0x20\n 18231: a0 = a0 | a1\n 18234: a1 = reverse t0\n 18236: a2 = s1 + 0x7ff\n 18240: a2 = a2 + 0x479\n 18244: u64 [a2 + 0x100] = a1\n 18248: a1 = reverse t1\n 18250: u64 [a2 + 0xf8] = a1\n 18254: a1 = reverse a3\n 18256: u64 [a2 + 0xf0] = a1\n 18260: a0 = reverse a0\n 18262: u64 [a2 + 0xe8] = a0\n 18266: a0 = u64 [s1 + 0x4e8]\n 18270: u64 [a2 + 0xe0] = a0\n 18274: a0 = u64 [s1 + 0x4e0]\n 18278: u64 [a2 + 0xd8] = a0\n 18282: a0 = u64 [s1 + 0x4f0]\n 18286: u64 [a2 + 0xd0] = a0\n 18290: a0 = u64 [s1 + 0x4f8]\n 18294: u64 [a2 + 0xc8] = a0\n 18298: a0 = s1 + 0x1000\n 18302: i32 a1 = a0 + 0xfffffffffffffd40\n 18306: a0 = s1 + 0x1000\n 18310: i32 a3 = a0 + 0xfffffffffffffd60\n 18314: a2 = 0xffffffffffffffff\n 18317: a4 = 0x20\n 18320: a0 = 0\n 18322: ecalli 9 // 'set_storage'\n 18324: fallthrough\n      : @250 (gas: 46)\n 18325: a2 = u64 [s1 + 0x4f8]\n 18329: a2 = a2 + 0x1\n 18332: a0 = a2 <u 0x1\n 18335: a1 = u64 [s1 + 0x4f0]\n 18339: a1 = a1 + a0\n 18342: u64 [s1 + 0x4f8] = a2\n 18346: u64 [s1 + 0x4f0] = a1\n 18350: a0 = a2 | a1\n 18353: a0 = a0 <u 0x1\n 18356: a1 = u64 [s1 + 0x4e0]\n 18360: a2 = a1 + a0\n 18363: t0 = a2 <u a1\n 18366: a0 = u64 [s1 + 0x4c0]\n 18370: t1 = a0 + 0x20\n 18373: a0 = t1 <u a0\n 18376: a3 = u64 [s1 + 0x4d0]\n 18380: ra = a3 + a0\n 18383: a3 = ra <u a3\n 18386: a3 = a0 if a0 == 0\n 18389: a4 = u64 [s1 + 0x4d8]\n 18393: t2 = a4 + a3\n 18396: a3 = t2 <u a4\n 18399: a1 = u64 [s1 + 0x4c8]\n 18403: a1 = a1 + a3\n 18406: a3 = u64 [s1 + 0x488]\n 18410: a3 = t2 ^ a3\n 18413: a4 = u64 [s1 + 0x498]\n 18417: a4 = t1 ^ a4\n 18420: a3 = a3 | a4\n 18423: a4 = u64 [s1 + 0x480]\n 18427: a4 = a4 ^ a1\n 18430: a5 = u64 [s1 + 0x490]\n 18434: a5 = ra ^ a5\n 18437: a4 = a4 | a5\n 18440: a3 = a3 | a4\n 18443: u64 [s1 + 0x4e0] = a3\n 18447: a0 = u64 [s1 + 0x4e8]\n 18451: a0 = a0 + t0\n 18454: u64 [s1 + 0x4e8] = a0\n 18458: a3 = t1\n 18460: a4 = ra\n 18462: a5 = t2\n 18464: a0 = a2\n 18466: t0 = a1\n 18468: a1 = u64 [s1 + 0x4e0]\n 18472: jump @247 if a1 != 0\n      : @251 (gas: 11)\n 18476: u64 [s1 + 0x4e0] = a2\n 18480: a2 = u64 [s1 + 0x268]\n 18484: a3 = u64 [s1 + 0x120]\n 18488: a2 = a2 ^ a3\n 18491: a3 = u64 [s1 + 0x160]\n 18495: a2 = a2 | a3\n 18498: a3 = u64 [s1 + 0x138]\n 18502: a4 = u64 [s1 + 0x130]\n 18506: a3 = a3 | a4\n 18509: a2 = a2 | a3\n 18512: jump @255 if a2 == 0\n      : @252 (gas: 26)\n 18516: a2 = u64 [s1 + 0x4b8]\n 18520: a2 = a2 + t1\n 18523: a3 = a2 <u t1\n 18526: a4 = u64 [s1 + 0x4a0]\n 18530: a4 = a4 + ra\n 18533: a4 = a4 + a3\n 18536: a5 = a4 ^ ra\n 18539: a1 = a4 <u ra\n 18542: a1 = a3 if a5 == 0\n 18545: a3 = u64 [s1 + 0x4a8]\n 18549: a3 = a3 + t2\n 18552: a1 = a1 + a3\n 18555: a5 = a1 <u a3\n 18558: a0 = a3 <u t2\n 18561: a3 = u64 [s1 + 0x4b0]\n 18565: a3 = a3 + t0\n 18568: a0 = a0 + a3\n 18571: a0 = a0 + a5\n 18574: a3 = a2 | a1\n 18577: a0 = a0 | a4\n 18580: a3 = a3 | a0\n 18583: a3 = a3 >> 0x20\n 18586: a0 = a0 | a1\n 18589: a0 = a0 << 0x20\n 18592: a0 = a0 | a3\n 18595: jump @222 if a0 != 0\n      : @253 (gas: 3)\n 18599: i32 a0 = a2 + 0\n 18601: a1 = 0x20\n 18604: ra = 170, jump @0\n      : @254 [@dyn 85] (gas: 282)\n 18610: a1 = u8 [a0 + 0x19]\n 18613: a2 = u8 [a0 + 0x18]\n 18616: a3 = u8 [a0 + 0x1a]\n 18619: a4 = u8 [a0 + 0x1b]\n 18622: a1 = a1 << 0x8\n 18625: a1 = a1 | a2\n 18628: a3 = a3 << 0x10\n 18631: a4 = a4 << 0x18\n 18634: a3 = a3 | a4\n 18637: a1 = a1 | a3\n 18640: a2 = u8 [a0 + 0x1d]\n 18643: a3 = u8 [a0 + 0x1c]\n 18646: a4 = u8 [a0 + 0x1e]\n 18649: a5 = u8 [a0 + 0x1f]\n 18652: a2 = a2 << 0x8\n 18655: a2 = a2 | a3\n 18658: a4 = a4 << 0x10\n 18661: a5 = a5 << 0x18\n 18664: a4 = a4 | a5\n 18667: a2 = a2 | a4\n 18670: a2 = a2 << 0x20\n 18673: a1 = a1 | a2\n 18676: u64 [s1 + 0x4d8] = a1\n 18680: a1 = u8 [a0 + 0x11]\n 18683: a2 = u8 [a0 + 0x10]\n 18686: a3 = u8 [a0 + 0x12]\n 18689: a4 = u8 [a0 + 0x13]\n 18692: a1 = a1 << 0x8\n 18695: a1 = a1 | a2\n 18698: a3 = a3 << 0x10\n 18701: a4 = a4 << 0x18\n 18704: a3 = a3 | a4\n 18707: a1 = a1 | a3\n 18710: a2 = u8 [a0 + 0x15]\n 18713: a3 = u8 [a0 + 0x14]\n 18716: a4 = u8 [a0 + 0x16]\n 18719: a5 = u8 [a0 + 0x17]\n 18722: a2 = a2 << 0x8\n 18725: a2 = a2 | a3\n 18728: a4 = a4 << 0x10\n 18731: a5 = a5 << 0x18\n 18734: a4 = a4 | a5\n 18737: a2 = a2 | a4\n 18740: a2 = a2 << 0x20\n 18743: a1 = a1 | a2\n 18746: u64 [s1 + 0x4d0] = a1\n 18750: a1 = u8 [a0 + 0x9]\n 18753: a2 = u8 [a0 + 0x8]\n 18756: a3 = u8 [a0 + 0xa]\n 18759: a4 = u8 [a0 + 0xb]\n 18762: a1 = a1 << 0x8\n 18765: a1 = a1 | a2\n 18768: a3 = a3 << 0x10\n 18771: a4 = a4 << 0x18\n 18774: a3 = a3 | a4\n 18777: a1 = a1 | a3\n 18780: a2 = u8 [a0 + 0xd]\n 18783: a3 = u8 [a0 + 0xc]\n 18786: a4 = u8 [a0 + 0xe]\n 18789: a5 = u8 [a0 + 0xf]\n 18792: a2 = a2 << 0x8\n 18795: a2 = a2 | a3\n 18798: a4 = a4 << 0x10\n 18801: a5 = a5 << 0x18\n 18804: a4 = a4 | a5\n 18807: a2 = a2 | a4\n 18810: a2 = a2 << 0x20\n 18813: t2 = a2 | a1\n 18816: a1 = u8 [a0 + 0x1]\n 18819: a2 = u8 [a0]\n 18821: a4 = u8 [a0 + 0x2]\n 18824: a5 = u8 [a0 + 0x3]\n 18827: a1 = a1 << 0x8\n 18830: a1 = a1 | a2\n 18833: a4 = a4 << 0x10\n 18836: a5 = a5 << 0x18\n 18839: a4 = a4 | a5\n 18842: a1 = a1 | a4\n 18845: a2 = u8 [a0 + 0x5]\n 18848: a4 = u8 [a0 + 0x4]\n 18851: a5 = u8 [a0 + 0x6]\n 18854: a0 = u8 [a0 + 0x7]\n 18857: a2 = a2 << 0x8\n 18860: a2 = a2 | a4\n 18863: a5 = a5 << 0x10\n 18866: a0 = a0 << 0x18\n 18869: a0 = a0 | a5\n 18872: a0 = a0 | a2\n 18875: a0 = a0 << 0x20\n 18878: ra = a0 | a1\n 18881: u8 [s1 + 2015] = 0\n 18885: u8 [s1 + 2014] = 0\n 18889: u8 [s1 + 2013] = 0\n 18893: u8 [s1 + 2012] = 0\n 18897: u8 [s1 + 2011] = 0\n 18901: u8 [s1 + 2010] = 0\n 18905: u8 [s1 + 2009] = 0\n 18909: u8 [s1 + 2008] = 0\n 18913: u8 [s1 + 2007] = 0\n 18917: u8 [s1 + 2006] = 0\n 18921: u8 [s1 + 2005] = 0\n 18925: u8 [s1 + 2004] = 0\n 18929: u8 [s1 + 2003] = 0\n 18933: u8 [s1 + 2002] = 0\n 18937: u8 [s1 + 2001] = 0\n 18941: u8 [s1 + 2000] = 0\n 18945: u8 [s1 + 1999] = 0\n 18949: u8 [s1 + 1998] = 0\n 18953: u8 [s1 + 1997] = 0\n 18957: u8 [s1 + 1996] = 0\n 18961: u8 [s1 + 1995] = 0\n 18965: u8 [s1 + 1994] = 0\n 18969: u8 [s1 + 1993] = 0\n 18973: u8 [s1 + 1992] = 0\n 18977: u8 [s1 + 1991] = 0\n 18981: u8 [s1 + 1990] = 0\n 18985: u8 [s1 + 1989] = 0\n 18989: u8 [s1 + 1988] = 0\n 18993: u8 [s1 + 1987] = 0\n 18997: u8 [s1 + 1986] = 0\n 19001: u8 [s1 + 1985] = 0\n 19005: u8 [s1 + 1984] = 0\n 19009: u8 [s1 + 1983] = 0xff\n 19015: u8 [s1 + 1982] = 0xff\n 19021: u8 [s1 + 1981] = 0xff\n 19027: u8 [s1 + 1979] = 0xff\n 19033: u8 [s1 + 1976] = 0xffffffffffffffff\n 19038: u8 [s1 + 1975] = 0xff\n 19044: u8 [s1 + 1974] = 0xff\n 19050: u8 [s1 + 1973] = 0xff\n 19056: u8 [s1 + 1971] = 0xff\n 19062: u8 [s1 + 1968] = 0xffffffffffffffff\n 19067: u8 [s1 + 1967] = 0xff\n 19073: u8 [s1 + 1966] = 0xff\n 19079: u8 [s1 + 1965] = 0xff\n 19085: u8 [s1 + 1963] = 0xff\n 19091: u8 [s1 + 1960] = 0xffffffffffffffff\n 19096: u8 [s1 + 1959] = 0xff\n 19102: u8 [s1 + 1958] = 0xff\n 19108: u8 [s1 + 1957] = 0xff\n 19114: u8 [s1 + 1955] = 0xff\n 19120: u8 [s1 + 1952] = 0xffffffffffffffff\n 19125: a2 = 0xffffffff\n 19135: u8 [s1 + 0x7bc] = a2\n 19139: u8 [s1 + 0x7b4] = a2\n 19143: u8 [s1 + 0x7ac] = a2\n 19147: u8 [s1 + 0x7a4] = a2\n 19151: a2 = 0xffffffffffff\n 19161: u8 [s1 + 0x7ba] = a2\n 19165: a1 = 0xffffffffffffff\n 19175: u8 [s1 + 0x7b9] = a1\n 19179: u8 [s1 + 0x7b2] = a2\n 19183: u8 [s1 + 0x7b1] = a1\n 19187: u8 [s1 + 0x7aa] = a2\n 19191: u8 [s1 + 0x7a9] = a1\n 19195: u8 [s1 + 0x7a2] = a2\n 19199: u8 [s1 + 0x7a1] = a1\n 19203: a4 = u64 [s1 + 0x268]\n 19207: a4 = a4 & 0x1f\n 19210: a1 = s1 + 0x7a0\n 19214: a4 = a4 + a1\n 19217: a1 = u8 [a4 + 0x19]\n 19220: a2 = u8 [a4 + 0x18]\n 19223: a5 = u8 [a4 + 0x1a]\n 19226: a3 = u8 [a4 + 0x1b]\n 19229: a1 = a1 << 0x8\n 19232: a1 = a1 | a2\n 19235: a5 = a5 << 0x10\n 19238: a3 = a3 << 0x18\n 19241: a3 = a3 | a5\n 19244: a1 = a1 | a3\n 19247: a2 = u8 [a4 + 0x1d]\n 19250: a3 = u8 [a4 + 0x1c]\n 19253: a5 = u8 [a4 + 0x1e]\n 19256: a0 = u8 [a4 + 0x1f]\n 19259: a2 = a2 << 0x8\n 19262: a2 = a2 | a3\n 19265: a5 = a5 << 0x10\n 19268: a0 = a0 << 0x18\n 19271: a0 = a0 | a5\n 19274: a0 = a0 | a2\n 19277: a0 = a0 << 0x20\n 19280: t1 = a0 | a1\n 19283: a0 = u8 [a4 + 0x11]\n 19286: a1 = u8 [a4 + 0x10]\n 19289: a2 = u8 [a4 + 0x12]\n 19292: a3 = u8 [a4 + 0x13]\n 19295: a0 = a0 << 0x8\n 19298: a0 = a0 | a1\n 19301: a2 = a2 << 0x10\n 19304: a3 = a3 << 0x18\n 19307: a2 = a2 | a3\n 19310: a5 = a2 | a0\n 19313: a1 = u8 [a4 + 0x15]\n 19316: a2 = u8 [a4 + 0x14]\n 19319: a3 = u8 [a4 + 0x16]\n 19322: a0 = u8 [a4 + 0x17]\n 19325: a1 = a1 << 0x8\n 19328: a1 = a1 | a2\n 19331: a3 = a3 << 0x10\n 19334: a0 = a0 << 0x18\n 19337: a0 = a0 | a3\n 19340: a0 = a0 | a1\n 19343: a0 = a0 << 0x20\n 19346: t0 = a0 | a5\n 19349: a0 = u8 [a4 + 0x9]\n 19352: a2 = u8 [a4 + 0x8]\n 19355: a3 = u8 [a4 + 0xa]\n 19358: a5 = u8 [a4 + 0xb]\n 19361: a0 = a0 << 0x8\n 19364: a0 = a0 | a2\n 19367: a3 = a3 << 0x10\n 19370: a5 = a5 << 0x18\n 19373: a3 = a3 | a5\n 19376: a1 = a3 | a0\n 19379: a2 = u8 [a4 + 0xd]\n 19382: a3 = u8 [a4 + 0xc]\n 19385: a5 = u8 [a4 + 0xe]\n 19388: a0 = u8 [a4 + 0xf]\n 19391: a2 = a2 << 0x8\n 19394: a2 = a2 | a3\n 19397: a5 = a5 << 0x10\n 19400: a0 = a0 << 0x18\n 19403: a0 = a0 | a5\n 19406: a0 = a0 | a2\n 19409: a0 = a0 << 0x20\n 19412: a2 = a0 | a1\n 19415: a0 = u8 [a4 + 0x1]\n 19418: a1 = u8 [a4]\n 19420: a3 = u8 [a4 + 0x2]\n 19423: a5 = u8 [a4 + 0x3]\n 19426: a0 = a0 << 0x8\n 19429: a0 = a0 | a1\n 19432: a3 = a3 << 0x10\n 19435: a5 = a5 << 0x18\n 19438: a3 = a3 | a5\n 19441: a0 = a0 | a3\n 19444: a1 = u8 [a4 + 0x5]\n 19447: a3 = u8 [a4 + 0x4]\n 19450: a5 = u8 [a4 + 0x6]\n 19453: a4 = u8 [a4 + 0x7]\n 19456: a1 = a1 << 0x8\n 19459: a1 = a1 | a3\n 19462: a5 = a5 << 0x10\n 19465: a4 = a4 << 0x18\n 19468: a4 = a4 | a5\n 19471: a1 = a1 | a4\n 19474: a1 = a1 << 0x20\n 19477: a0 = a0 | a1\n 19480: a1 = u64 [s1 + 0x4d8]\n 19484: a1 = reverse a1\n 19486: a0 = a1 & ~a0\n 19489: a1 = u64 [s1 + 0x4d0]\n 19493: a1 = reverse a1\n 19495: a1 = a1 & ~a2\n 19498: a2 = reverse t2\n 19500: a2 = a2 & ~t0\n 19503: a3 = reverse ra\n 19505: a3 = a3 & ~t1\n 19508: a4 = s1 + 0x7ff\n 19512: a4 = a4 + 0x479\n 19516: a5 = u64 [s1 + 0x4e8]\n 19520: u64 [a4 + 0xe0] = a5\n 19524: a5 = u64 [s1 + 0x4e0]\n 19528: u64 [a4 + 0xd8] = a5\n 19532: a5 = u64 [s1 + 0x4f0]\n 19536: u64 [a4 + 0xd0] = a5\n 19540: a5 = u64 [s1 + 0x4f8]\n 19544: u64 [a4 + 0xc8] = a5\n 19548: u64 [a4 + 0x100] = a3\n 19552: u64 [a4 + 0xf8] = a2\n 19556: u64 [a4 + 0xf0] = a1\n 19560: u64 [a4 + 0xe8] = a0\n 19564: a0 = s1 + 0x1000\n 19568: i32 a1 = a0 + 0xfffffffffffffd40\n 19572: a0 = s1 + 0x1000\n 19576: i32 a3 = a0 + 0xfffffffffffffd60\n 19580: a2 = 0xffffffffffffffff\n 19583: a4 = 0x20\n 19586: a0 = 0\n 19588: ecalli 9 // 'set_storage'\n 19590: fallthrough\n      : @255 (gas: 30)\n 19591: a2 = u64 [s1 + 0x160]\n 19595: a0 = a2 >> 0x3f\n 19598: a1 = u64 [s1 + 0x130]\n 19602: a1 = a1 << 0x1\n 19605: a0 = a0 | a1\n 19608: a3 = u64 [s1 + 0x138]\n 19612: a1 = a3 >> 0x3f\n 19615: a2 = a2 << 0x1\n 19618: a1 = a1 | a2\n 19621: a4 = u64 [s1 + 0x268]\n 19625: a2 = a4 >> 0x3f\n 19628: a3 = a3 << 0x1\n 19631: a2 = a2 | a3\n 19634: a3 = a4 << 0x1\n 19637: a3 = a3 + 0x1\n 19640: a4 = s1 + 0x7ff\n 19644: a4 = a4 + 0x479\n 19648: a5 = u64 [s1 + 0x148]\n 19652: u64 [a4 + 0xd0] = a5\n 19656: a5 = u64 [s1 + 0x140]\n 19660: u64 [a4 + 0xc8] = a5\n 19664: a5 = u64 [s1 + 0x150]\n 19668: u64 [a4 + 0xd8] = a5\n 19672: a5 = u64 [s1 + 0x158]\n 19676: u64 [a4 + 0xe0] = a5\n 19680: u64 [a4 + 0xe8] = a3\n 19684: u64 [a4 + 0xf0] = a2\n 19688: u64 [a4 + 0xf8] = a1\n 19692: u64 [a4 + 0x100] = a0\n 19696: jump @261\n      : @256 (gas: 10)\n 19699: a0 = u64 [s1 + 0x4b0]\n 19703: a1 = u64 [s1 + 0x4a8]\n 19707: a0 = a0 | a1\n 19710: a1 = 0xffffffe0\n 19720: a2 = u64 [s1 + 0x4b8]\n 19724: a1 = a2 <u a1\n 19727: a2 = u64 [s1 + 0x4a0]\n 19731: a1 = 0 if a2 != 0\n 19733: a1 = 0 if a0 != 0\n 19735: jump @258 if a1 != 0\n      : @257 (gas: 1)\n 19738: jump @222\n      : @258 (gas: 4)\n 19741: a0 = u64 [s1 + 0x10]\n 19744: i32 a0 = a0 + 0x20\n 19747: a1 = 0x20\n 19750: ra = 172, jump @0\n      : @259 [@dyn 86] (gas: 97)\n 19756: a1 = u8 [a0 + 0x19]\n 19759: a2 = u8 [a0 + 0x18]\n 19762: a3 = u8 [a0 + 0x1a]\n 19765: a4 = u8 [a0 + 0x1b]\n 19768: a1 = a1 << 0x8\n 19771: a1 = a1 | a2\n 19774: a3 = a3 << 0x10\n 19777: a4 = a4 << 0x18\n 19780: a3 = a3 | a4\n 19783: a1 = a1 | a3\n 19786: a2 = u8 [a0 + 0x1d]\n 19789: a3 = u8 [a0 + 0x1c]\n 19792: a4 = u8 [a0 + 0x1e]\n 19795: a5 = u8 [a0 + 0x1f]\n 19798: a2 = a2 << 0x8\n 19801: a2 = a2 | a3\n 19804: a4 = a4 << 0x10\n 19807: a5 = a5 << 0x18\n 19810: a4 = a4 | a5\n 19813: a2 = a2 | a4\n 19816: a2 = a2 << 0x20\n 19819: t0 = a2 | a1\n 19822: a2 = u8 [a0 + 0x11]\n 19825: a3 = u8 [a0 + 0x10]\n 19828: a4 = u8 [a0 + 0x12]\n 19831: a5 = u8 [a0 + 0x13]\n 19834: a2 = a2 << 0x8\n 19837: a2 = a2 | a3\n 19840: a4 = a4 << 0x10\n 19843: a5 = a5 << 0x18\n 19846: a4 = a4 | a5\n 19849: a2 = a2 | a4\n 19852: a3 = u8 [a0 + 0x15]\n 19855: a4 = u8 [a0 + 0x14]\n 19858: a5 = u8 [a0 + 0x16]\n 19861: a1 = u8 [a0 + 0x17]\n 19864: a3 = a3 << 0x8\n 19867: a3 = a3 | a4\n 19870: a5 = a5 << 0x10\n 19873: a1 = a1 << 0x18\n 19876: a1 = a1 | a5\n 19879: a1 = a1 | a3\n 19882: a1 = a1 << 0x20\n 19885: t1 = a1 | a2\n 19888: a1 = u8 [a0 + 0x9]\n 19891: a3 = u8 [a0 + 0x8]\n 19894: a4 = u8 [a0 + 0xa]\n 19897: a5 = u8 [a0 + 0xb]\n 19900: a1 = a1 << 0x8\n 19903: a1 = a1 | a3\n 19906: a4 = a4 << 0x10\n 19909: a5 = a5 << 0x18\n 19912: a4 = a4 | a5\n 19915: a1 = a1 | a4\n 19918: a3 = u8 [a0 + 0xd]\n 19921: a4 = u8 [a0 + 0xc]\n 19924: a5 = u8 [a0 + 0xe]\n 19927: a2 = u8 [a0 + 0xf]\n 19930: a3 = a3 << 0x8\n 19933: a3 = a3 | a4\n 19936: a5 = a5 << 0x10\n 19939: a2 = a2 << 0x18\n 19942: a2 = a2 | a5\n 19945: a2 = a2 | a3\n 19948: a2 = a2 << 0x20\n 19951: a3 = a2 | a1\n 19954: a1 = u8 [a0 + 0x1]\n 19957: a2 = u8 [a0]\n 19959: a4 = u8 [a0 + 0x2]\n 19962: a5 = u8 [a0 + 0x3]\n 19965: a1 = a1 << 0x8\n 19968: a1 = a1 | a2\n 19971: a4 = a4 << 0x10\n 19974: a5 = a5 << 0x18\n 19977: a4 = a4 | a5\n 19980: a1 = a1 | a4\n 19983: a2 = u8 [a0 + 0x5]\n 19986: a4 = u8 [a0 + 0x4]\n 19989: a5 = u8 [a0 + 0x6]\n 19992: a0 = u8 [a0 + 0x7]\n 19995: a2 = a2 << 0x8\n 19998: a2 = a2 | a4\n 20001: a5 = a5 << 0x10\n 20004: a0 = a0 << 0x18\n 20007: a0 = a0 | a5\n 20010: a0 = a0 | a2\n 20013: a0 = a0 << 0x20\n 20016: a0 = a0 | a1\n 20019: a0 = reverse a0\n 20021: u64 [s1 + 0x4e0] = a0\n 20025: a0 = reverse a3\n 20027: u64 [s1 + 0x4e8] = a0\n 20031: a0 = reverse t1\n 20033: u64 [s1 + 0x4f0] = a0\n 20037: a0 = reverse t0\n 20039: u64 [s1 + 0x4f8] = a0\n 20043: fallthrough\n      : @260 (gas: 235)\n 20044: a5 = u64 [s1 + 0x160]\n 20048: a0 = a5 >> 0x3f\n 20051: a4 = u64 [s1 + 0x130]\n 20055: a4 = a4 << 0x1\n 20058: a0 = a0 | a4\n 20061: u64 [s1 + 0x4d8] = a0\n 20065: a1 = u64 [s1 + 0x138]\n 20069: a0 = a1 >> 0x3f\n 20072: a5 = a5 << 0x1\n 20075: a0 = a0 | a5\n 20078: u64 [s1 + 0x4d0] = a0\n 20082: a5 = u64 [s1 + 0x268]\n 20086: a0 = a5 >> 0x3f\n 20089: a1 = a1 << 0x1\n 20092: a4 = a1 | a0\n 20095: a0 = s1 + 0x1000\n 20099: u8 [a0 + 4294965279] = 0\n 20103: a0 = s1 + 0x1000\n 20107: u8 [a0 + 4294965278] = 0\n 20111: a0 = s1 + 0x1000\n 20115: u8 [a0 + 4294965277] = 0\n 20119: a0 = s1 + 0x1000\n 20123: u8 [a0 + 4294965276] = 0\n 20127: a0 = s1 + 0x1000\n 20131: u8 [a0 + 4294965275] = 0\n 20135: a0 = s1 + 0x1000\n 20139: u8 [a0 + 4294965274] = 0\n 20143: a0 = s1 + 0x1000\n 20147: u8 [a0 + 4294965273] = 0\n 20151: a0 = s1 + 0x1000\n 20155: u8 [a0 + 4294965272] = 0\n 20159: a0 = s1 + 0x1000\n 20163: u8 [a0 + 4294965271] = 0\n 20167: a0 = s1 + 0x1000\n 20171: u8 [a0 + 4294965270] = 0\n 20175: a0 = s1 + 0x1000\n 20179: u8 [a0 + 4294965269] = 0\n 20183: a0 = s1 + 0x1000\n 20187: u8 [a0 + 4294965268] = 0\n 20191: a0 = s1 + 0x1000\n 20195: u8 [a0 + 4294965267] = 0\n 20199: a0 = s1 + 0x1000\n 20203: u8 [a0 + 4294965266] = 0\n 20207: a0 = s1 + 0x1000\n 20211: u8 [a0 + 4294965265] = 0\n 20215: a0 = s1 + 0x1000\n 20219: u8 [a0 + 4294965264] = 0\n 20223: a0 = s1 + 0x1000\n 20227: u8 [a0 + 4294965263] = 0\n 20231: a0 = s1 + 0x1000\n 20235: u8 [a0 + 4294965262] = 0\n 20239: a0 = s1 + 0x1000\n 20243: u8 [a0 + 4294965261] = 0\n 20247: a0 = s1 + 0x1000\n 20251: u8 [a0 + 4294965260] = 0\n 20255: a0 = s1 + 0x1000\n 20259: u8 [a0 + 4294965259] = 0\n 20263: a0 = s1 + 0x1000\n 20267: u8 [a0 + 4294965258] = 0\n 20271: a0 = s1 + 0x1000\n 20275: u8 [a0 + 4294965257] = 0\n 20279: a0 = s1 + 0x1000\n 20283: u8 [a0 + 4294965256] = 0\n 20287: a0 = s1 + 0x1000\n 20291: u8 [a0 + 4294965255] = 0\n 20295: a0 = s1 + 0x1000\n 20299: u8 [a0 + 4294965254] = 0\n 20303: a0 = s1 + 0x1000\n 20307: u8 [a0 + 4294965253] = 0\n 20311: a0 = s1 + 0x1000\n 20315: u8 [a0 + 4294965252] = 0\n 20319: a0 = s1 + 0x1000\n 20323: u8 [a0 + 4294965251] = 0\n 20327: a0 = s1 + 0x1000\n 20331: u8 [a0 + 4294965250] = 0\n 20335: a0 = s1 + 0x1000\n 20339: u8 [a0 + 4294965249] = 0\n 20343: a0 = s1 + 0x1000\n 20347: u8 [a0 + 4294965248] = 0\n 20351: u8 [s1 + 2047] = 0xff\n 20357: u8 [s1 + 2046] = 0xff\n 20363: u8 [s1 + 2045] = 0xff\n 20369: u8 [s1 + 2043] = 0xff\n 20375: u8 [s1 + 2040] = 0xffffffffffffffff\n 20380: u8 [s1 + 2039] = 0xff\n 20386: u8 [s1 + 2038] = 0xff\n 20392: u8 [s1 + 2037] = 0xff\n 20398: u8 [s1 + 2035] = 0xff\n 20404: u8 [s1 + 2032] = 0xffffffffffffffff\n 20409: u8 [s1 + 2031] = 0xff\n 20415: u8 [s1 + 2030] = 0xff\n 20421: u8 [s1 + 2029] = 0xff\n 20427: u8 [s1 + 2027] = 0xff\n 20433: u8 [s1 + 2024] = 0xffffffffffffffff\n 20438: u8 [s1 + 2023] = 0xff\n 20444: u8 [s1 + 2022] = 0xff\n 20450: u8 [s1 + 2021] = 0xff\n 20456: u8 [s1 + 2019] = 0xff\n 20462: u8 [s1 + 2016] = 0xffffffffffffffff\n 20467: a2 = 0xffffffff\n 20477: u8 [s1 + 0x7fc] = a2\n 20481: u8 [s1 + 0x7f4] = a2\n 20485: u8 [s1 + 0x7ec] = a2\n 20489: u8 [s1 + 0x7e4] = a2\n 20493: a2 = 0xffffffffffff\n 20503: u8 [s1 + 0x7fa] = a2\n 20507: a1 = 0xffffffffffffff\n 20517: u8 [s1 + 0x7f9] = a1\n 20521: u8 [s1 + 0x7f2] = a2\n 20525: u8 [s1 + 0x7f1] = a1\n 20529: u8 [s1 + 0x7ea] = a2\n 20533: u8 [s1 + 0x7e9] = a1\n 20537: u8 [s1 + 0x7e2] = a2\n 20541: u8 [s1 + 0x7e1] = a1\n 20545: a1 = a5 & 0x1f\n 20548: a2 = s1 + 0x7e0\n 20552: a1 = a1 + a2\n 20555: t0 = u8 [a1 + 0x1]\n 20558: a3 = u8 [a1]\n 20560: a2 = u8 [a1 + 0x2]\n 20563: t1 = u8 [a1 + 0x3]\n 20566: t0 = t0 << 0x8\n 20569: a3 = t0 | a3\n 20572: a2 = a2 << 0x10\n 20575: t1 = t1 << 0x18\n 20578: a2 = t1 | a2\n 20581: t0 = a2 | a3\n 20584: a3 = u8 [a1 + 0x5]\n 20587: t1 = u8 [a1 + 0x4]\n 20590: a2 = u8 [a1 + 0x6]\n 20593: t2 = u8 [a1 + 0x7]\n 20596: a3 = a3 << 0x8\n 20599: a3 = a3 | t1\n 20602: a2 = a2 << 0x10\n 20605: t2 = t2 << 0x18\n 20608: a2 = t2 | a2\n 20611: a2 = a2 | a3\n 20614: a2 = a2 << 0x20\n 20617: t1 = a2 | t0\n 20620: t2 = u8 [a1 + 0x9]\n 20623: t0 = u8 [a1 + 0x8]\n 20626: a2 = u8 [a1 + 0xa]\n 20629: a3 = u8 [a1 + 0xb]\n 20632: t2 = t2 << 0x8\n 20635: t0 = t2 | t0\n 20638: a2 = a2 << 0x10\n 20641: a3 = a3 << 0x18\n 20644: a2 = a2 | a3\n 20647: t0 = a2 | t0\n 20650: a3 = u8 [a1 + 0xd]\n 20653: t2 = u8 [a1 + 0xc]\n 20656: a2 = u8 [a1 + 0xe]\n 20659: ra = u8 [a1 + 0xf]\n 20662: a3 = a3 << 0x8\n 20665: a3 = a3 | t2\n 20668: a2 = a2 << 0x10\n 20671: ra = ra << 0x18\n 20674: a2 = ra | a2\n 20677: a2 = a2 | a3\n 20680: a2 = a2 << 0x20\n 20683: t2 = a2 | t0\n 20686: t0 = u8 [a1 + 0x11]\n 20689: ra = u8 [a1 + 0x10]\n 20692: a2 = u8 [a1 + 0x12]\n 20695: a3 = u8 [a1 + 0x13]\n 20698: t0 = t0 << 0x8\n 20701: t0 = t0 | ra\n 20704: a2 = a2 << 0x10\n 20707: a3 = a3 << 0x18\n 20710: a2 = a2 | a3\n 20713: t0 = a2 | t0\n 20716: a3 = u8 [a1 + 0x15]\n 20719: ra = u8 [a1 + 0x14]\n 20722: a2 = u8 [a1 + 0x16]\n 20725: a0 = u8 [a1 + 0x17]\n 20728: a3 = a3 << 0x8\n 20731: a3 = a3 | ra\n 20734: a2 = a2 << 0x10\n 20737: a0 = a0 << 0x18\n 20740: a0 = a0 | a2\n 20743: a0 = a0 | a3\n 20746: a0 = a0 << 0x20\n 20749: t0 = a0 | t0\n 20752: ra = u8 [a1 + 0x19]\n 20755: a2 = u8 [a1 + 0x18]\n 20758: a3 = u8 [a1 + 0x1a]\n 20761: a0 = u8 [a1 + 0x1b]\n 20764: ra = ra << 0x8\n 20767: a2 = ra | a2\n 20770: a3 = a3 << 0x10\n 20773: a0 = a0 << 0x18\n 20776: a0 = a0 | a3\n 20779: ra = a0 | a2\n 20782: a2 = u8 [a1 + 0x1d]\n 20785: a3 = u8 [a1 + 0x1c]\n 20788: a0 = u8 [a1 + 0x1e]\n 20791: a1 = u8 [a1 + 0x1f]\n 20794: a2 = a2 << 0x8\n 20797: a2 = a2 | a3\n 20800: a0 = a0 << 0x10\n 20803: a1 = a1 << 0x18\n 20806: a0 = a0 | a1\n 20809: a0 = a0 | a2\n 20812: a0 = a0 << 0x20\n 20815: a0 = a0 | ra\n 20818: a1 = u64 [s1 + 0x4e0]\n 20822: a0 = a1 & ~a0\n 20825: a1 = u64 [s1 + 0x4e8]\n 20829: a1 = a1 & ~t0\n 20832: a2 = u64 [s1 + 0x4f0]\n 20836: a2 = a2 & ~t2\n 20839: a3 = u64 [s1 + 0x4f8]\n 20843: a3 = a3 & ~t1\n 20846: a5 = a5 << 0x1\n 20849: a3 = a3 | a5\n 20852: a2 = a2 | a4\n 20855: a4 = u64 [s1 + 0x4d0]\n 20859: a1 = a1 | a4\n 20862: a4 = u64 [s1 + 0x4d8]\n 20866: a0 = a0 | a4\n 20869: a4 = s1 + 0x7ff\n 20873: a4 = a4 + 0x479\n 20877: u64 [a4 + 0x100] = a0\n 20881: u64 [a4 + 0xf8] = a1\n 20885: u64 [a4 + 0xf0] = a2\n 20889: u64 [a4 + 0xe8] = a3\n 20893: a0 = u64 [s1 + 0x148]\n 20897: u64 [a4 + 0xd0] = a0\n 20901: a0 = u64 [s1 + 0x140]\n 20905: u64 [a4 + 0xc8] = a0\n 20909: a0 = u64 [s1 + 0x150]\n 20913: u64 [a4 + 0xd8] = a0\n 20917: a0 = u64 [s1 + 0x158]\n 20921: u64 [a4 + 0xe0] = a0\n 20925: fallthrough\n      : @261 (gas: 11)\n 20926: a0 = s1 + 0x1000\n 20930: i32 a1 = a0 + 0xfffffffffffffd40\n 20934: a0 = s1 + 0x1000\n 20938: i32 a3 = a0 + 0xfffffffffffffd60\n 20942: a2 = 0xffffffffffffffff\n 20945: a4 = 0x20\n 20948: a0 = 0\n 20950: ecalli 9 // 'set_storage'\n 20952: a1 = 0x20\n 20955: a0 = u64 [s1 + 0x378]\n 20959: ra = 174, jump @0\n      : @262 [@dyn 87] (gas: 125)\n 20965: a1 = u8 [a0 + 0x1]\n 20968: a2 = u8 [a0]\n 20970: a3 = u8 [a0 + 0x2]\n 20973: a4 = u8 [a0 + 0x3]\n 20976: a1 = a1 << 0x8\n 20979: a1 = a1 | a2\n 20982: a3 = a3 << 0x10\n 20985: a4 = a4 << 0x18\n 20988: a3 = a3 | a4\n 20991: a1 = a1 | a3\n 20994: a2 = u8 [a0 + 0x5]\n 20997: a3 = u8 [a0 + 0x4]\n 21000: a4 = u8 [a0 + 0x6]\n 21003: a5 = u8 [a0 + 0x7]\n 21006: a2 = a2 << 0x8\n 21009: a2 = a2 | a3\n 21012: a4 = a4 << 0x10\n 21015: a5 = a5 << 0x18\n 21018: a4 = a4 | a5\n 21021: a2 = a2 | a4\n 21024: a2 = a2 << 0x20\n 21027: t0 = a2 | a1\n 21030: a2 = u8 [a0 + 0x9]\n 21033: a3 = u8 [a0 + 0x8]\n 21036: a4 = u8 [a0 + 0xa]\n 21039: a5 = u8 [a0 + 0xb]\n 21042: a2 = a2 << 0x8\n 21045: a2 = a2 | a3\n 21048: a4 = a4 << 0x10\n 21051: a5 = a5 << 0x18\n 21054: a4 = a4 | a5\n 21057: a2 = a2 | a4\n 21060: a3 = u8 [a0 + 0xd]\n 21063: a4 = u8 [a0 + 0xc]\n 21066: a5 = u8 [a0 + 0xe]\n 21069: a1 = u8 [a0 + 0xf]\n 21072: a3 = a3 << 0x8\n 21075: a3 = a3 | a4\n 21078: a5 = a5 << 0x10\n 21081: a1 = a1 << 0x18\n 21084: a1 = a1 | a5\n 21087: a1 = a1 | a3\n 21090: a1 = a1 << 0x20\n 21093: t1 = a1 | a2\n 21096: a1 = u8 [a0 + 0x11]\n 21099: a3 = u8 [a0 + 0x10]\n 21102: a4 = u8 [a0 + 0x12]\n 21105: a5 = u8 [a0 + 0x13]\n 21108: a1 = a1 << 0x8\n 21111: a1 = a1 | a3\n 21114: a4 = a4 << 0x10\n 21117: a5 = a5 << 0x18\n 21120: a4 = a4 | a5\n 21123: a1 = a1 | a4\n 21126: a3 = u8 [a0 + 0x15]\n 21129: a4 = u8 [a0 + 0x14]\n 21132: a5 = u8 [a0 + 0x16]\n 21135: a2 = u8 [a0 + 0x17]\n 21138: a3 = a3 << 0x8\n 21141: a3 = a3 | a4\n 21144: a5 = a5 << 0x10\n 21147: a2 = a2 << 0x18\n 21150: a2 = a2 | a5\n 21153: a2 = a2 | a3\n 21156: a2 = a2 << 0x20\n 21159: a3 = a2 | a1\n 21162: a1 = u8 [a0 + 0x19]\n 21165: a2 = u8 [a0 + 0x18]\n 21168: a4 = u8 [a0 + 0x1a]\n 21171: a5 = u8 [a0 + 0x1b]\n 21174: a1 = a1 << 0x8\n 21177: a1 = a1 | a2\n 21180: a4 = a4 << 0x10\n 21183: a5 = a5 << 0x18\n 21186: a4 = a4 | a5\n 21189: a1 = a1 | a4\n 21192: a2 = u8 [a0 + 0x1d]\n 21195: a4 = u8 [a0 + 0x1c]\n 21198: a5 = u8 [a0 + 0x1e]\n 21201: a0 = u8 [a0 + 0x1f]\n 21204: a2 = a2 << 0x8\n 21207: a2 = a2 | a4\n 21210: a5 = a5 << 0x10\n 21213: a0 = a0 << 0x18\n 21216: a0 = a0 | a5\n 21219: a0 = a0 | a2\n 21222: a0 = a0 << 0x20\n 21225: a0 = a0 | a1\n 21228: a1 = u64 [s1 + 0x140]\n 21232: a1 = a1 + 0x1\n 21235: a2 = a1 <u 0x1\n 21238: a4 = u64 [s1 + 0x148]\n 21242: a2 = a2 + a4\n 21245: a4 = s1 + 0x7ff\n 21249: a4 = a4 + 0x479\n 21253: u64 [a4 + 0xd0] = a2\n 21257: a2 = a2 | a1\n 21260: u64 [a4 + 0xc8] = a1\n 21264: a1 = a2 <u 0x1\n 21267: a2 = u64 [s1 + 0x150]\n 21271: a1 = a1 + a2\n 21274: u64 [a4 + 0xd8] = a1\n 21278: a1 = a1 <u a2\n 21281: a2 = u64 [s1 + 0x158]\n 21285: a1 = a1 + a2\n 21288: u64 [a4 + 0xe0] = a1\n 21292: a1 = reverse t0\n 21294: u64 [a4 + 0x100] = a1\n 21298: a1 = reverse t1\n 21300: u64 [a4 + 0xf8] = a1\n 21304: a1 = reverse a3\n 21306: u64 [a4 + 0xf0] = a1\n 21310: a0 = reverse a0\n 21312: u64 [a4 + 0xe8] = a0\n 21316: a0 = s1 + 0x1000\n 21320: i32 a1 = a0 + 0xfffffffffffffd40\n 21324: a0 = s1 + 0x1000\n 21328: i32 a3 = a0 + 0xfffffffffffffd60\n 21332: a2 = 0xffffffffffffffff\n 21335: a4 = 0x20\n 21338: a0 = 0\n 21340: ecalli 9 // 'set_storage'\n 21342: a1 = 0x20\n 21345: a0 = u64 [s1 + 0x270]\n 21349: ra = 176, jump @0\n      : @263 [@dyn 88] (gas: 141)\n 21355: a1 = u8 [a0 + 0x1]\n 21358: a2 = u8 [a0]\n 21360: a3 = u8 [a0 + 0x2]\n 21363: a4 = u8 [a0 + 0x3]\n 21366: a1 = a1 << 0x8\n 21369: a1 = a1 | a2\n 21372: a3 = a3 << 0x10\n 21375: a4 = a4 << 0x18\n 21378: a3 = a3 | a4\n 21381: a1 = a1 | a3\n 21384: a2 = u8 [a0 + 0x5]\n 21387: a3 = u8 [a0 + 0x4]\n 21390: a4 = u8 [a0 + 0x6]\n 21393: a5 = u8 [a0 + 0x7]\n 21396: a2 = a2 << 0x8\n 21399: a2 = a2 | a3\n 21402: a4 = a4 << 0x10\n 21405: a5 = a5 << 0x18\n 21408: a4 = a4 | a5\n 21411: a2 = a2 | a4\n 21414: a2 = a2 << 0x20\n 21417: t0 = a2 | a1\n 21420: a2 = u8 [a0 + 0x9]\n 21423: a3 = u8 [a0 + 0x8]\n 21426: a4 = u8 [a0 + 0xa]\n 21429: a5 = u8 [a0 + 0xb]\n 21432: a2 = a2 << 0x8\n 21435: a2 = a2 | a3\n 21438: a4 = a4 << 0x10\n 21441: a5 = a5 << 0x18\n 21444: a4 = a4 | a5\n 21447: a2 = a2 | a4\n 21450: a3 = u8 [a0 + 0xd]\n 21453: a4 = u8 [a0 + 0xc]\n 21456: a5 = u8 [a0 + 0xe]\n 21459: a1 = u8 [a0 + 0xf]\n 21462: a3 = a3 << 0x8\n 21465: a3 = a3 | a4\n 21468: a5 = a5 << 0x10\n 21471: a1 = a1 << 0x18\n 21474: a1 = a1 | a5\n 21477: a1 = a1 | a3\n 21480: a1 = a1 << 0x20\n 21483: t1 = a1 | a2\n 21486: a1 = u8 [a0 + 0x11]\n 21489: a3 = u8 [a0 + 0x10]\n 21492: a4 = u8 [a0 + 0x12]\n 21495: a5 = u8 [a0 + 0x13]\n 21498: a1 = a1 << 0x8\n 21501: a1 = a1 | a3\n 21504: a4 = a4 << 0x10\n 21507: a5 = a5 << 0x18\n 21510: a4 = a4 | a5\n 21513: a1 = a1 | a4\n 21516: a3 = u8 [a0 + 0x15]\n 21519: a4 = u8 [a0 + 0x14]\n 21522: a5 = u8 [a0 + 0x16]\n 21525: a2 = u8 [a0 + 0x17]\n 21528: a3 = a3 << 0x8\n 21531: a3 = a3 | a4\n 21534: a5 = a5 << 0x10\n 21537: a2 = a2 << 0x18\n 21540: a2 = a2 | a5\n 21543: a2 = a2 | a3\n 21546: a2 = a2 << 0x20\n 21549: t2 = a2 | a1\n 21552: a1 = u8 [a0 + 0x19]\n 21555: a2 = u8 [a0 + 0x18]\n 21558: a4 = u8 [a0 + 0x1a]\n 21561: a5 = u8 [a0 + 0x1b]\n 21564: a1 = a1 << 0x8\n 21567: a1 = a1 | a2\n 21570: a4 = a4 << 0x10\n 21573: a5 = a5 << 0x18\n 21576: a4 = a4 | a5\n 21579: a1 = a1 | a4\n 21582: a2 = u8 [a0 + 0x1d]\n 21585: a4 = u8 [a0 + 0x1c]\n 21588: a5 = u8 [a0 + 0x1e]\n 21591: a0 = u8 [a0 + 0x1f]\n 21594: a2 = a2 << 0x8\n 21597: a2 = a2 | a4\n 21600: a5 = a5 << 0x10\n 21603: a0 = a0 << 0x18\n 21606: a0 = a0 | a5\n 21609: a0 = a0 | a2\n 21612: a0 = a0 << 0x20\n 21615: a0 = a0 | a1\n 21618: a2 = u64 [s1 + 0x140]\n 21622: a1 = a2 + 0x2\n 21625: a2 = a1 <u a2\n 21628: a3 = u64 [s1 + 0x148]\n 21632: a4 = a3 + a2\n 21635: a5 = a4 <u a3\n 21638: a5 = a2 if a2 == 0\n 21641: a2 = u64 [s1 + 0x150]\n 21645: a5 = a5 + a2\n 21648: a2 = a5 <u a2\n 21651: a3 = u64 [s1 + 0x158]\n 21655: a2 = a2 + a3\n 21658: a3 = s1 + 0x7ff\n 21662: a3 = a3 + 0x479\n 21666: u64 [a3 + 0xe0] = a2\n 21670: u64 [a3 + 0xd8] = a5\n 21674: u64 [a3 + 0xd0] = a4\n 21678: u64 [a3 + 0xc8] = a1\n 21682: a1 = reverse t0\n 21684: u64 [a3 + 0x100] = a1\n 21688: a1 = reverse t1\n 21690: u64 [a3 + 0xf8] = a1\n 21694: a1 = reverse t2\n 21696: u64 [a3 + 0xf0] = a1\n 21700: a0 = reverse a0\n 21702: u64 [a3 + 0xe8] = a0\n 21706: a0 = s1 + 0x1000\n 21710: i32 a1 = a0 + 0xfffffffffffffd40\n 21714: a0 = s1 + 0x1000\n 21718: i32 a3 = a0 + 0xfffffffffffffd60\n 21722: a2 = 0xffffffffffffffff\n 21725: a4 = 0x20\n 21728: a0 = 0\n 21730: ecalli 9 // 'set_storage'\n 21732: a1 = u64 [s1 + 0x140]\n 21736: a0 = a1 + 0x3\n 21739: u64 [s1 + 0x4f8] = a0\n 21743: a0 = a0 <u a1\n 21746: a2 = u64 [s1 + 0x148]\n 21750: a1 = a2 + a0\n 21753: u64 [s1 + 0x4f0] = a1\n 21757: a1 = a1 <u a2\n 21760: a1 = a0 if a0 == 0\n 21763: a0 = u64 [s1 + 0x150]\n 21767: a1 = a1 + a0\n 21770: u64 [s1 + 0x4e8] = a1\n 21774: a0 = a1 <u a0\n 21777: a1 = u64 [s1 + 0x158]\n 21781: a0 = a0 + a1\n 21784: u64 [s1 + 0x4e0] = a0\n 21788: a1 = 0x20\n 21791: a0 = u64 [s1 + 0x128]\n 21795: ra = 178, jump @0\n      : @264 [@dyn 89] (gas: 72)\n 21801: a1 = u8 [a0 + 0x11]\n 21804: a2 = u8 [a0 + 0x10]\n 21807: a3 = u8 [a0 + 0x12]\n 21810: a4 = u8 [a0 + 0x13]\n 21813: a1 = a1 << 0x8\n 21816: a1 = a1 | a2\n 21819: a3 = a3 << 0x10\n 21822: a4 = a4 << 0x18\n 21825: a3 = a3 | a4\n 21828: a1 = a1 | a3\n 21831: a2 = u8 [a0 + 0x15]\n 21834: a3 = u8 [a0 + 0x14]\n 21837: a4 = u8 [a0 + 0x16]\n 21840: a5 = u8 [a0 + 0x17]\n 21843: a2 = a2 << 0x8\n 21846: a2 = a2 | a3\n 21849: a4 = a4 << 0x10\n 21852: a5 = a5 << 0x18\n 21855: a4 = a4 | a5\n 21858: a2 = a2 | a4\n 21861: a2 = a2 << 0x20\n 21864: t0 = a2 | a1\n 21867: a2 = u8 [a0 + 0x19]\n 21870: a3 = u8 [a0 + 0x18]\n 21873: a4 = u8 [a0 + 0x1a]\n 21876: a5 = u8 [a0 + 0x1b]\n 21879: a2 = a2 << 0x8\n 21882: a2 = a2 | a3\n 21885: a4 = a4 << 0x10\n 21888: a5 = a5 << 0x18\n 21891: a4 = a4 | a5\n 21894: a2 = a2 | a4\n 21897: a3 = u8 [a0 + 0x1d]\n 21900: a4 = u8 [a0 + 0x1c]\n 21903: a5 = u8 [a0 + 0x1e]\n 21906: a1 = u8 [a0 + 0x1f]\n 21909: a3 = a3 << 0x8\n 21912: a3 = a3 | a4\n 21915: a5 = a5 << 0x10\n 21918: a1 = a1 << 0x18\n 21921: a1 = a1 | a5\n 21924: a1 = a1 | a3\n 21927: a1 = a1 << 0x20\n 21930: a1 = a1 | a2\n 21933: a2 = u8 [a0 + 0xd]\n 21936: a3 = u8 [a0 + 0xc]\n 21939: a4 = u8 [a0 + 0xe]\n 21942: a0 = u8 [a0 + 0xf]\n 21945: a2 = a2 << 0x8\n 21948: a2 = a2 | a3\n 21951: a4 = a4 << 0x10\n 21954: a0 = a0 << 0x18\n 21957: a0 = a0 | a4\n 21960: a0 = a0 | a2\n 21963: a1 = reverse a1\n 21965: u64 [s1 + 0x4d8] = a1\n 21969: a1 = reverse t0\n 21971: u64 [s1 + 0x4d0] = a1\n 21975: a0 = reverse a0\n 21977: a0 = a0 >> 0x20\n 21980: u64 [s1 + 0x4c8] = a0\n 21984: a0 = u64 [s1 + 0x4e0]\n 21988: u64 [s1 + 0x778] = a0\n 21992: a0 = u64 [s1 + 0x4e8]\n 21996: u64 [s1 + 0x770] = a0\n 22000: a0 = u64 [s1 + 0x4f0]\n 22004: u64 [s1 + 0x768] = a0\n 22008: a0 = s1 + 0x780\n 22012: a2 = s1 + 0x760\n 22016: a1 = u64 [s1 + 0x4f8]\n 22020: u64 [s1 + 0x760] = a1\n 22024: ra = 180, jump @25\n      : @265 [@dyn 90] (gas: 32)\n 22030: a0 = u32 [s1 + 0x794]\n 22034: a0 = a0 << 0x20\n 22037: a1 = u64 [s1 + 0x798]\n 22041: a2 = u64 [s1 + 0x4c8]\n 22045: a0 = a0 | a2\n 22048: a2 = s1 + 0x7ff\n 22052: a2 = a2 + 0x479\n 22056: a3 = u64 [s1 + 0x4e0]\n 22060: u64 [a2 + 0xe0] = a3\n 22064: a3 = u64 [s1 + 0x4e8]\n 22068: u64 [a2 + 0xd8] = a3\n 22072: a3 = u64 [s1 + 0x4f0]\n 22076: u64 [a2 + 0xd0] = a3\n 22080: a3 = u64 [s1 + 0x4f8]\n 22084: u64 [a2 + 0xc8] = a3\n 22088: u64 [a2 + 0x100] = a1\n 22092: u64 [a2 + 0xf8] = a0\n 22096: a0 = u64 [s1 + 0x4d0]\n 22100: u64 [a2 + 0xf0] = a0\n 22104: a0 = u64 [s1 + 0x4d8]\n 22108: u64 [a2 + 0xe8] = a0\n 22112: a0 = s1 + 0x1000\n 22116: i32 a1 = a0 + 0xfffffffffffffd40\n 22120: a0 = s1 + 0x1000\n 22124: i32 a3 = a0 + 0xfffffffffffffd60\n 22128: a2 = 0xffffffffffffffff\n 22131: a4 = 0x20\n 22134: a0 = 0\n 22136: ecalli 9 // 'set_storage'\n 22138: a1 = 0x20\n 22141: a0 = 0\n 22143: ra = 182, jump @0\n      : @266 [@dyn 91] (gas: 67)\n 22149: a1 = u64 [s1 + 0x458]\n 22153: u8 [a0 + 0x1f] = a1\n 22156: a1 = u64 [s1 + 0x450]\n 22160: u8 [a0 + 0x1e] = a1\n 22163: a1 = u64 [s1 + 0x448]\n 22167: u8 [a0 + 0x1d] = a1\n 22170: a1 = u64 [s1 + 0x440]\n 22174: u8 [a0 + 0x1c] = a1\n 22177: a1 = u64 [s1 + 0x438]\n 22181: u8 [a0 + 0x1b] = a1\n 22184: a1 = u64 [s1 + 0x430]\n 22188: u8 [a0 + 0x1a] = a1\n 22191: a1 = u64 [s1 + 0x428]\n 22195: u8 [a0 + 0x19] = a1\n 22198: a1 = u64 [s1 + 0x460]\n 22202: u8 [a0 + 0x18] = a1\n 22205: a1 = u64 [s1 + 0x420]\n 22209: u8 [a0 + 0x17] = a1\n 22212: a1 = u64 [s1 + 0x418]\n 22216: u8 [a0 + 0x16] = a1\n 22219: a1 = u64 [s1 + 0x410]\n 22223: u8 [a0 + 0x15] = a1\n 22226: a1 = u64 [s1 + 0x408]\n 22230: u8 [a0 + 0x14] = a1\n 22233: a1 = u64 [s1 + 0x400]\n 22237: u8 [a0 + 0x13] = a1\n 22240: a1 = u64 [s1 + 0x3f8]\n 22244: u8 [a0 + 0x12] = a1\n 22247: a1 = u64 [s1 + 0x3f0]\n 22251: u8 [a0 + 0x11] = a1\n 22254: a1 = u64 [s1 + 0x468]\n 22258: u8 [a0 + 0x10] = a1\n 22261: a1 = u64 [s1 + 0x3e8]\n 22265: u8 [a0 + 0xf] = a1\n 22268: a1 = u64 [s1 + 0x3e0]\n 22272: u8 [a0 + 0xe] = a1\n 22275: a1 = u64 [s1 + 0x3d8]\n 22279: u8 [a0 + 0xd] = a1\n 22282: a1 = u64 [s1 + 0x3d0]\n 22286: u8 [a0 + 0xc] = a1\n 22289: a1 = u64 [s1 + 0x3c8]\n 22293: u8 [a0 + 0xb] = a1\n 22296: a1 = u64 [s1 + 0x3c0]\n 22300: u8 [a0 + 0xa] = a1\n 22303: a1 = u64 [s1 + 0x3b8]\n 22307: u8 [a0 + 0x9] = a1\n 22310: a1 = u64 [s1 + 0x470]\n 22314: u8 [a0 + 0x8] = a1\n 22317: a1 = u64 [s1 + 0x3b0]\n 22321: u8 [a0 + 0x7] = a1\n 22324: a1 = u64 [s1 + 0x3a8]\n 22328: u8 [a0 + 0x6] = a1\n 22331: a1 = u64 [s1 + 0x3a0]\n 22335: u8 [a0 + 0x5] = a1\n 22338: a1 = u64 [s1 + 0x398]\n 22342: u8 [a0 + 0x4] = a1\n 22345: a1 = u64 [s1 + 0x390]\n 22349: u8 [a0 + 0x3] = a1\n 22352: a1 = u64 [s1 + 0x388]\n 22356: u8 [a0 + 0x2] = a1\n 22359: a1 = u64 [s1 + 0x380]\n 22363: u8 [a0 + 0x1] = a1\n 22366: a1 = u64 [s1 + 0x478]\n 22370: u8 [a0] = a1\n 22372: a0 = 0x20\n 22375: a1 = 0x20\n 22378: ra = 184, jump @0\n      : @267 [@dyn 92] (gas: 35)\n 22384: u8 [a0 + 31] = 0x1\n 22388: u8 [a0 + 30] = 0\n 22391: u8 [a0 + 29] = 0\n 22394: u8 [a0 + 28] = 0\n 22397: u8 [a0 + 27] = 0\n 22400: u8 [a0 + 26] = 0\n 22403: u8 [a0 + 25] = 0\n 22406: u8 [a0 + 24] = 0\n 22409: u8 [a0 + 23] = 0\n 22412: u8 [a0 + 22] = 0\n 22415: u8 [a0 + 21] = 0\n 22418: u8 [a0 + 20] = 0\n 22421: u8 [a0 + 19] = 0\n 22424: u8 [a0 + 18] = 0\n 22427: u8 [a0 + 17] = 0\n 22430: u8 [a0 + 16] = 0\n 22433: u8 [a0 + 15] = 0\n 22436: u8 [a0 + 14] = 0\n 22439: u8 [a0 + 13] = 0\n 22442: u8 [a0 + 12] = 0\n 22445: u8 [a0 + 11] = 0\n 22448: u8 [a0 + 10] = 0\n 22451: u8 [a0 + 9] = 0\n 22454: u8 [a0 + 8] = 0\n 22457: u8 [a0 + 7] = 0\n 22460: u8 [a0 + 6] = 0\n 22463: u8 [a0 + 5] = 0\n 22466: u8 [a0 + 4] = 0\n 22469: u8 [a0 + 3] = 0\n 22472: u8 [a0 + 2] = 0\n 22475: u8 [a0 + 1] = 0\n 22478: u8 [a0 + 0] = 0\n 22480: a1 = 0x40\n 22483: a0 = 0\n 22485: ra = 186, jump @0\n      : @268 [@dyn 93] (gas: 28)\n 22491: a1 = sp + 0xffffffffffffffe0\n 22494: a1 = a1 & 0xffffffffffffffe0\n 22497: u64 [s1 + 0x4f8] = a1\n 22501: sp = a1\n 22503: i32 a0 = a0 + 0\n 22505: i32 a2 = a1 + 0\n 22507: a1 = 0x40\n 22510: ecalli 6 // 'hash_keccak_256'\n 22512: a3 = u64 [s1 + 0x4f8]\n 22516: a0 = u64 [a3 + 0x18]\n 22519: a1 = u64 [a3 + 0x10]\n 22522: a2 = u64 [a3 + 0x8]\n 22525: a3 = u64 [a3]\n 22527: a4 = reverse a0\n 22529: u64 [s1 + 0x4e0] = a4\n 22533: a0 = reverse a1\n 22535: u64 [s1 + 0x4f8] = a0\n 22539: a1 = reverse a2\n 22541: u64 [s1 + 0x4f0] = a1\n 22545: a2 = reverse a3\n 22547: u64 [s1 + 0x4e8] = a2\n 22551: u64 [s1 + 0x738] = a2\n 22555: u64 [s1 + 0x730] = a1\n 22559: u64 [s1 + 0x728] = a0\n 22563: a0 = s1 + 0x740\n 22567: a2 = s1 + 0x720\n 22571: u64 [s1 + 0x720] = a4\n 22575: ra = 188, jump @25\n      : @269 [@dyn 94] (gas: 31)\n 22581: a0 = u64 [s1 + 0x740]\n 22585: a1 = u64 [s1 + 0x748]\n 22589: a2 = u64 [s1 + 0x750]\n 22593: a3 = u64 [s1 + 0x758]\n 22597: a0 = a0 & 0xffffffffffffff00\n 22601: a0 = a0 | 0x1\n 22604: a4 = s1 + 0x7ff\n 22608: a4 = a4 + 0x479\n 22612: a5 = u64 [s1 + 0x4e8]\n 22616: u64 [a4 + 0xe0] = a5\n 22620: a5 = u64 [s1 + 0x4f0]\n 22624: u64 [a4 + 0xd8] = a5\n 22628: a5 = u64 [s1 + 0x4f8]\n 22632: u64 [a4 + 0xd0] = a5\n 22636: a5 = u64 [s1 + 0x4e0]\n 22640: u64 [a4 + 0xc8] = a5\n 22644: u64 [a4 + 0x100] = a3\n 22648: u64 [a4 + 0xf8] = a2\n 22652: u64 [a4 + 0xf0] = a1\n 22656: u64 [a4 + 0xe8] = a0\n 22660: a0 = s1 + 0x1000\n 22664: i32 a1 = a0 + 0xfffffffffffffd40\n 22668: a0 = s1 + 0x1000\n 22672: i32 a3 = a0 + 0xfffffffffffffd60\n 22676: a2 = 0xffffffffffffffff\n 22679: a4 = 0x20\n 22682: a0 = 0\n 22684: ecalli 9 // 'set_storage'\n 22686: a0 = 0x40\n 22689: a1 = 0x20\n 22692: ra = 190, jump @0\n      : @270 [@dyn 95] (gas: 104)\n 22698: a1 = u8 [a0 + 0x11]\n 22701: a2 = u8 [a0 + 0x10]\n 22704: a3 = u8 [a0 + 0x12]\n 22707: a4 = u8 [a0 + 0x13]\n 22710: a1 = a1 << 0x8\n 22713: a1 = a1 | a2\n 22716: a3 = a3 << 0x10\n 22719: a4 = a4 << 0x18\n 22722: a3 = a3 | a4\n 22725: a1 = a1 | a3\n 22728: a2 = u8 [a0 + 0x15]\n 22731: a3 = u8 [a0 + 0x14]\n 22734: a4 = u8 [a0 + 0x16]\n 22737: a5 = u8 [a0 + 0x17]\n 22740: a2 = a2 << 0x8\n 22743: a2 = a2 | a3\n 22746: a4 = a4 << 0x10\n 22749: a5 = a5 << 0x18\n 22752: a4 = a4 | a5\n 22755: a2 = a2 | a4\n 22758: a2 = a2 << 0x20\n 22761: t0 = a2 | a1\n 22764: a2 = u8 [a0 + 0x1]\n 22767: a3 = u8 [a0]\n 22769: a4 = u8 [a0 + 0x2]\n 22772: a5 = u8 [a0 + 0x3]\n 22775: a2 = a2 << 0x8\n 22778: a2 = a2 | a3\n 22781: a4 = a4 << 0x10\n 22784: a5 = a5 << 0x18\n 22787: a4 = a4 | a5\n 22790: a2 = a2 | a4\n 22793: a3 = u8 [a0 + 0x5]\n 22796: a4 = u8 [a0 + 0x4]\n 22799: a5 = u8 [a0 + 0x6]\n 22802: a1 = u8 [a0 + 0x7]\n 22805: a3 = a3 << 0x8\n 22808: a3 = a3 | a4\n 22811: a5 = a5 << 0x10\n 22814: a1 = a1 << 0x18\n 22817: a1 = a1 | a5\n 22820: a1 = a1 | a3\n 22823: a1 = a1 << 0x20\n 22826: t1 = a1 | a2\n 22829: a1 = u8 [a0 + 0x19]\n 22832: a3 = u8 [a0 + 0x18]\n 22835: a4 = u8 [a0 + 0x1a]\n 22838: a5 = u8 [a0 + 0x1b]\n 22841: a1 = a1 << 0x8\n 22844: a1 = a1 | a3\n 22847: a4 = a4 << 0x10\n 22850: a5 = a5 << 0x18\n 22853: a4 = a4 | a5\n 22856: a1 = a1 | a4\n 22859: a3 = u8 [a0 + 0x1d]\n 22862: a4 = u8 [a0 + 0x1c]\n 22865: a5 = u8 [a0 + 0x1e]\n 22868: a2 = u8 [a0 + 0x1f]\n 22871: a3 = a3 << 0x8\n 22874: a3 = a3 | a4\n 22877: a5 = a5 << 0x10\n 22880: a2 = a2 << 0x18\n 22883: a2 = a2 | a5\n 22886: a2 = a2 | a3\n 22889: a2 = a2 << 0x20\n 22892: a3 = a2 | a1\n 22895: a1 = u8 [a0 + 0x9]\n 22898: a2 = u8 [a0 + 0x8]\n 22901: a4 = u8 [a0 + 0xa]\n 22904: a5 = u8 [a0 + 0xb]\n 22907: a1 = a1 << 0x8\n 22910: a1 = a1 | a2\n 22913: a4 = a4 << 0x10\n 22916: a5 = a5 << 0x18\n 22919: a4 = a4 | a5\n 22922: a1 = a1 | a4\n 22925: a2 = u8 [a0 + 0xd]\n 22928: a4 = u8 [a0 + 0xc]\n 22931: a5 = u8 [a0 + 0xe]\n 22934: a0 = u8 [a0 + 0xf]\n 22937: a2 = a2 << 0x8\n 22940: a2 = a2 | a4\n 22943: a5 = a5 << 0x10\n 22946: a0 = a0 << 0x18\n 22949: a0 = a0 | a5\n 22952: a0 = a0 | a2\n 22955: a0 = a0 << 0x20\n 22958: a0 = a0 | a1\n 22961: a2 = reverse a0\n 22963: a1 = reverse a3\n 22965: a3 = reverse t1\n 22967: a0 = reverse t0\n 22969: u64 [s1 + 0x4f0] = a0\n 22973: u64 [s1 + 0x4e0] = a3\n 22977: a0 = a0 | a3\n 22980: u64 [s1 + 0x4f8] = a1\n 22984: a1 = a1 | a2\n 22987: a1 = a1 | a0\n 22990: a1 = a1 >> 0x20\n 22993: u64 [s1 + 0x4e8] = a2\n 22997: a0 = a0 | a2\n 23000: a0 = a0 << 0x20\n 23003: a0 = a0 | a1\n 23006: jump @272 if a0 == 0\n      : @271 (gas: 1)\n 23009: jump @222\n      : @272 (gas: 4)\n 23012: a0 = i32 [s1 + 0x4f8]\n 23016: a1 = 0x20\n 23019: u64 [s1 + 0x4d8] = a0\n 23023: ra = 192, jump @0\n      : @273 [@dyn 96] (gas: 56)\n 23029: u8 [a0 + 31] = 0x60\n 23033: u8 [a0 + 30] = 0\n 23036: u8 [a0 + 29] = 0\n 23039: u8 [a0 + 28] = 0\n 23042: u8 [a0 + 27] = 0\n 23045: u8 [a0 + 26] = 0\n 23048: u8 [a0 + 25] = 0\n 23051: u8 [a0 + 24] = 0\n 23054: u8 [a0 + 23] = 0\n 23057: u8 [a0 + 22] = 0\n 23060: u8 [a0 + 21] = 0\n 23063: u8 [a0 + 20] = 0\n 23066: u8 [a0 + 19] = 0\n 23069: u8 [a0 + 18] = 0\n 23072: u8 [a0 + 17] = 0\n 23075: u8 [a0 + 16] = 0\n 23078: u8 [a0 + 15] = 0\n 23081: u8 [a0 + 14] = 0\n 23084: u8 [a0 + 13] = 0\n 23087: u8 [a0 + 12] = 0\n 23090: u8 [a0 + 11] = 0\n 23093: u8 [a0 + 10] = 0\n 23096: u8 [a0 + 9] = 0\n 23099: u8 [a0 + 8] = 0\n 23102: u8 [a0 + 7] = 0\n 23105: u8 [a0 + 6] = 0\n 23108: u8 [a0 + 5] = 0\n 23111: u8 [a0 + 4] = 0\n 23114: u8 [a0 + 3] = 0\n 23117: u8 [a0 + 2] = 0\n 23120: u8 [a0 + 1] = 0\n 23123: u8 [a0 + 0] = 0\n 23125: a1 = u64 [s1 + 0x4f8]\n 23129: a0 = a1 + 0x60\n 23132: a1 = a0 <u a1\n 23135: a3 = u64 [s1 + 0x4f0]\n 23139: a2 = a3 + a1\n 23142: a3 = a2 <u a3\n 23145: a3 = a1 if a1 == 0\n 23148: a1 = u64 [s1 + 0x4e8]\n 23152: a3 = a3 + a1\n 23155: a1 = a3 <u a1\n 23158: a4 = u64 [s1 + 0x4e0]\n 23162: a4 = a4 + a1\n 23165: u64 [s1 + 0x6c8] = a2\n 23169: u64 [s1 + 0x6c0] = a0\n 23173: u64 [s1 + 1784] = 0\n 23177: u64 [s1 + 1776] = 0\n 23181: u64 [s1 + 1768] = 0\n 23185: u64 [s1 + 1760] = 0x80\n 23191: u64 [s1 + 0x6d0] = a3\n 23195: a0 = s1 + 0x700\n 23199: a1 = s1 + 0x6e0\n 23203: a2 = s1 + 0x6c0\n 23207: u64 [s1 + 0x6d8] = a4\n 23211: ra = 194, jump @323\n      : @274 [@dyn 97] (gas: 11)\n 23217: a0 = u64 [s1 + 0x4e8]\n 23221: a1 = u64 [s1 + 0x4e0]\n 23225: a1 = a1 | a0\n 23228: a0 = 0xffffffe0\n 23238: a2 = u64 [s1 + 0x4f8]\n 23242: a0 = a2 <u a0\n 23245: a2 = u64 [s1 + 0x4f0]\n 23249: a0 = 0 if a2 != 0\n 23251: u64 [s1 + 0x4d0] = a1\n 23255: a0 = 0 if a1 != 0\n 23257: jump @276 if a0 != 0\n      : @275 (gas: 1)\n 23260: jump @222\n      : @276 (gas: 12)\n 23263: a0 = u64 [s1 + 0x718]\n 23267: u64 [s1 + 0x4b8] = a0\n 23271: a0 = u64 [s1 + 0x710]\n 23275: u64 [s1 + 0x4b0] = a0\n 23279: a0 = u64 [s1 + 0x708]\n 23283: u64 [s1 + 0x4c0] = a0\n 23287: a0 = u64 [s1 + 0x700]\n 23291: u64 [s1 + 0x4c8] = a0\n 23295: a0 = u64 [s1 + 0x4d8]\n 23299: i32 a0 = a0 + 0x20\n 23302: a1 = 0x20\n 23305: ra = 196, jump @0\n      : @277 [@dyn 98] (gas: 72)\n 23311: a1 = u64 [s1 + 0x320]\n 23315: u8 [a0 + 0x10] = a1\n 23318: a1 = u64 [s1 + 0x2e0]\n 23322: u8 [a0 + 0xf] = a1\n 23325: a1 = u64 [s1 + 0x2d8]\n 23329: u8 [a0 + 0xe] = a1\n 23332: a1 = u64 [s1 + 0x2d0]\n 23336: u8 [a0 + 0xd] = a1\n 23339: a1 = u64 [s1 + 0x2c8]\n 23343: u8 [a0 + 0xc] = a1\n 23346: a1 = u64 [s1 + 0x2c0]\n 23350: u8 [a0 + 0xb] = a1\n 23353: a1 = u64 [s1 + 0x2b8]\n 23357: u8 [a0 + 0xa] = a1\n 23360: a1 = u64 [s1 + 0x2b0]\n 23364: u8 [a0 + 0x9] = a1\n 23367: a1 = u64 [s1 + 0x328]\n 23371: u8 [a0 + 0x8] = a1\n 23374: a1 = u64 [s1 + 0x2a8]\n 23378: u8 [a0 + 0x7] = a1\n 23381: a1 = u64 [s1 + 0x2a0]\n 23385: u8 [a0 + 0x6] = a1\n 23388: a1 = u64 [s1 + 0x298]\n 23392: u8 [a0 + 0x5] = a1\n 23395: a1 = u64 [s1 + 0x290]\n 23399: u8 [a0 + 0x4] = a1\n 23402: a1 = u64 [s1 + 0x288]\n 23406: u8 [a0 + 0x3] = a1\n 23409: a1 = u64 [s1 + 0x280]\n 23413: u8 [a0 + 0x2] = a1\n 23416: a1 = u64 [s1 + 0x278]\n 23420: u8 [a0 + 0x1] = a1\n 23423: a1 = u64 [s1 + 0x340]\n 23427: u8 [a0] = a1\n 23429: a1 = u64 [s1 + 0x330]\n 23433: u8 [a0 + 0x18] = a1\n 23436: a1 = u64 [s1 + 0x318]\n 23440: u8 [a0 + 0x17] = a1\n 23443: a1 = u64 [s1 + 0x310]\n 23447: u8 [a0 + 0x16] = a1\n 23450: a1 = u64 [s1 + 0x308]\n 23454: u8 [a0 + 0x15] = a1\n 23457: a1 = u64 [s1 + 0x300]\n 23461: u8 [a0 + 0x14] = a1\n 23464: a1 = u64 [s1 + 0x2f8]\n 23468: u8 [a0 + 0x13] = a1\n 23471: a1 = u64 [s1 + 0x2f0]\n 23475: u8 [a0 + 0x12] = a1\n 23478: a1 = u64 [s1 + 0x2e8]\n 23482: u8 [a0 + 0x11] = a1\n 23485: a1 = u64 [s1 + 0x368]\n 23489: u8 [a0 + 0x1f] = a1\n 23492: a1 = u64 [s1 + 0x360]\n 23496: u8 [a0 + 0x1e] = a1\n 23499: a1 = u64 [s1 + 0x358]\n 23503: u8 [a0 + 0x1d] = a1\n 23506: a1 = u64 [s1 + 0x350]\n 23510: u8 [a0 + 0x1c] = a1\n 23513: a1 = u64 [s1 + 0x348]\n 23517: u8 [a0 + 0x1b] = a1\n 23520: a1 = u64 [s1 + 0x338]\n 23524: u8 [a0 + 0x1a] = a1\n 23527: a1 = 0xffffffc0\n 23537: a2 = u64 [s1 + 0x4f8]\n 23541: a1 = a2 <u a1\n 23544: a2 = u64 [s1 + 0x4f0]\n 23548: a1 = 0 if a2 != 0\n 23550: a2 = u64 [s1 + 0x4d0]\n 23554: a1 = 0 if a2 != 0\n 23556: a2 = u64 [s1 + 0x370]\n 23560: u8 [a0 + 0x19] = a2\n 23563: jump @279 if a1 != 0\n      : @278 (gas: 1)\n 23566: jump @222\n      : @279 (gas: 4)\n 23569: a0 = u64 [s1 + 0x4d8]\n 23573: i32 a0 = a0 + 0x40\n 23576: a1 = 0x20\n 23579: ra = 198, jump @0\n      : @280 [@dyn 99] (gas: 68)\n 23585: a1 = u64 [s1 + 0x210]\n 23589: u8 [a0 + 0x10] = a1\n 23592: a1 = u64 [s1 + 0x1d0]\n 23596: u8 [a0 + 0xf] = a1\n 23599: a1 = u64 [s1 + 0x1c8]\n 23603: u8 [a0 + 0xe] = a1\n 23606: a1 = u64 [s1 + 0x1c0]\n 23610: u8 [a0 + 0xd] = a1\n 23613: a1 = u64 [s1 + 0x1b8]\n 23617: u8 [a0 + 0xc] = a1\n 23620: a1 = u64 [s1 + 0x1b0]\n 23624: u8 [a0 + 0xb] = a1\n 23627: a1 = u64 [s1 + 0x1a8]\n 23631: u8 [a0 + 0xa] = a1\n 23634: a1 = u64 [s1 + 0x1a0]\n 23638: u8 [a0 + 0x9] = a1\n 23641: a1 = u64 [s1 + 0x218]\n 23645: u8 [a0 + 0x8] = a1\n 23648: a1 = u64 [s1 + 0x198]\n 23652: u8 [a0 + 0x7] = a1\n 23655: a1 = u64 [s1 + 0x190]\n 23659: u8 [a0 + 0x6] = a1\n 23662: a1 = u64 [s1 + 0x188]\n 23666: u8 [a0 + 0x5] = a1\n 23669: a1 = u64 [s1 + 0x180]\n 23673: u8 [a0 + 0x4] = a1\n 23676: a1 = u64 [s1 + 0x178]\n 23680: u8 [a0 + 0x3] = a1\n 23683: a1 = u64 [s1 + 0x170]\n 23687: u8 [a0 + 0x2] = a1\n 23690: a1 = u64 [s1 + 0x168]\n 23694: u8 [a0 + 0x1] = a1\n 23697: a1 = u64 [s1 + 0x238]\n 23701: u8 [a0] = a1\n 23703: a1 = u64 [s1 + 0x220]\n 23707: u8 [a0 + 0x18] = a1\n 23710: a1 = u64 [s1 + 0x208]\n 23714: u8 [a0 + 0x17] = a1\n 23717: a1 = u64 [s1 + 0x200]\n 23721: u8 [a0 + 0x16] = a1\n 23724: a1 = u64 [s1 + 0x1f8]\n 23728: u8 [a0 + 0x15] = a1\n 23731: a1 = u64 [s1 + 0x1f0]\n 23735: u8 [a0 + 0x14] = a1\n 23738: a1 = u64 [s1 + 0x1e8]\n 23742: u8 [a0 + 0x13] = a1\n 23745: a1 = u64 [s1 + 0x1e0]\n 23749: u8 [a0 + 0x12] = a1\n 23752: a1 = u64 [s1 + 0x1d8]\n 23756: u8 [a0 + 0x11] = a1\n 23759: a1 = u64 [s1 + 0x260]\n 23763: u8 [a0 + 0x1f] = a1\n 23766: a1 = u64 [s1 + 0x258]\n 23770: u8 [a0 + 0x1e] = a1\n 23773: a1 = u64 [s1 + 0x250]\n 23777: u8 [a0 + 0x1d] = a1\n 23780: a1 = u64 [s1 + 0x248]\n 23784: u8 [a0 + 0x1c] = a1\n 23787: a1 = u64 [s1 + 0x240]\n 23791: u8 [a0 + 0x1b] = a1\n 23794: a1 = u64 [s1 + 0x230]\n 23798: u8 [a0 + 0x1a] = a1\n 23801: a1 = u64 [s1 + 0x228]\n 23805: u8 [a0 + 0x19] = a1\n 23808: a0 = s1 + 0x1000\n 23812: i32 a0 = a0 + 0xfffffffffffffcc0\n 23816: ecalli 3 // 'caller'\n 23818: fallthrough\n      : @281 (gas: 30)\n 23819: t0 = u64 [s1 + 0x4f8]\n 23823: t1 = u64 [s1 + 0x4c8]\n 23827: t2 = t1 <u t0\n 23830: a5 = u64 [s1 + 0x4f0]\n 23834: a1 = u64 [s1 + 0x4c0]\n 23838: a3 = a1 ^ a5\n 23841: a2 = a1 <u a5\n 23844: a2 = t2 if a3 == 0\n 23847: a3 = u64 [s1 + 0x4e8]\n 23851: a4 = u64 [s1 + 0x4b0]\n 23855: a0 = a4 - a3\n 23858: ra = a4 <u a3\n 23861: a4 = u64 [s1 + 0x4e0]\n 23865: a3 = u64 [s1 + 0x4b8]\n 23869: a4 = a3 - a4\n 23872: a4 = a4 - ra\n 23875: a3 = a0 <u a2\n 23878: a4 = a4 - a3\n 23881: a2 = a0 - a2\n 23884: a1 = a1 - a5\n 23887: a0 = a1 - t2\n 23890: a1 = t1 - t0\n 23893: a0 = a0 | a4\n 23896: a3 = a1 | a2\n 23899: a3 = a3 | a0\n 23902: a0 = a0 | a2\n 23905: a3 = a3 >> 0x20\n 23908: a0 = a0 << 0x20\n 23911: a0 = a0 | a3\n 23914: jump @283 if a0 == 0\n      : @282 (gas: 1)\n 23917: jump @222\n      : @283 (gas: 57)\n 23920: a3 = s1 + 0x7ff\n 23924: a3 = a3 + 0x479\n 23928: a0 = u64 [a3 + 0x50]\n 23931: a2 = i32 [a3 + 0x58]\n 23934: a3 = u64 [a3 + 0x48]\n 23937: a4 = reverse a0\n 23939: a0 = a4 << 0x20\n 23942: a2 = reverse a2\n 23944: a2 = a2 >> 0x20\n 23947: t0 = a2 | a0\n 23950: a4 = a4 >> 0x20\n 23953: a3 = reverse a3\n 23955: a2 = a3 << 0x20\n 23958: t1 = a2 | a4\n 23961: a3 = a3 >> 0x20\n 23964: u64 [s1 + 1688] = 0\n 23968: a4 = u64 [0x20000]\n 23973: a5 = u64 [0x20008]\n 23978: a0 = u64 [0x20010]\n 23983: a2 = u64 [0x20018]\n 23988: u64 [s1 + 0x6b8] = a4\n 23992: u64 [s1 + 0x6b0] = a5\n 23996: u64 [s1 + 0x6a8] = a0\n 24000: u64 [s1 + 0x6a0] = a2\n 24004: u64 [s1 + 0x690] = a3\n 24008: u64 [s1 + 0x688] = t1\n 24012: a2 = s1 + 0x6a0\n 24016: a3 = s1 + 0x680\n 24020: u64 [s1 + 0x680] = t0\n 24024: a0 = u64 [s1 + 0x4d8]\n 24028: ra = 0xc8\n 24032: sp = sp + 0xffffffffffffff60\n 24036: u64 [sp + 0x98] = ra\n 24040: u64 [sp + 0x90] = s0\n 24044: u64 [sp + 0x88] = s1\n 24048: s0 = sp + 0xa0\n 24052: sp = sp & 0xffffffffffffffe0\n 24055: a4 = u64 [a3]\n 24057: u64 [sp + 0x38] = a4\n 24060: a4 = u64 [a3 + 0x8]\n 24063: u64 [sp + 0x28] = a4\n 24066: a4 = u64 [a3 + 0x10]\n 24069: u64 [sp + 0x20] = a4\n 24072: a3 = u64 [a3 + 0x18]\n 24075: u64 [sp + 0x18] = a3\n 24078: a3 = u64 [a2]\n 24080: u64 [sp + 0x10] = a3\n 24083: a3 = u64 [a2 + 0x8]\n 24086: u64 [sp + 0x8] = a3\n 24089: a3 = u64 [a2 + 0x10]\n 24092: u64 [sp] = a3\n 24094: s1 = u64 [a2 + 0x18]\n 24097: i32 a0 = a0 + 0\n 24099: i32 a1 = a1 + 0\n 24101: u64 [sp + 0x30] = a1\n 24104: ra = 0x4\n 24107: jump @0\n      : @284 [@dyn 100] (gas: 7)\n 24110: u64 [s1 + 1624] = 0\n 24114: u64 [s1 + 1616] = 0\n 24118: u64 [s1 + 1608] = 0\n 24122: a0 = s1 + 0x660\n 24126: a2 = s1 + 0x640\n 24130: u64 [s1 + 1600] = 0x2\n 24135: ra = 202, jump @25\n      : @285 [@dyn 101] (gas: 16)\n 24141: a3 = u64 [s1 + 0x660]\n 24145: a0 = u64 [s1 + 0x678]\n 24149: a1 = u64 [s1 + 0x668]\n 24153: a4 = u64 [s1 + 0x670]\n 24157: a3 = a3 + 0x1\n 24160: a2 = a3 <u 0x1\n 24163: a1 = a1 + a2\n 24166: a2 = a3 | a1\n 24169: a2 = a2 <u 0x1\n 24172: a2 = a2 + a4\n 24175: a4 = a2 <u a4\n 24178: a0 = a0 + a4\n 24181: a4 = a1 | a0\n 24184: a5 = a3 | a2\n 24187: a4 = a4 | a5\n 24190: jump @306 if a4 == 0\n      : @286 (gas: 43)\n 24194: u64 [s1 + 0x600] = a3\n 24198: u64 [s1 + 1592] = 0\n 24202: u64 [s1 + 1584] = 0\n 24206: u64 [s1 + 1576] = 0\n 24210: u64 [s1 + 1568] = 0x2\n 24215: u64 [s1 + 0x608] = a1\n 24219: u64 [s1 + 0x610] = a2\n 24223: a1 = s1 + 0x620\n 24227: a2 = s1 + 0x600\n 24231: u64 [s1 + 0x618] = a0\n 24235: ra = 0xcc\n 24239: sp = sp + 0xffffffffffffffa0\n 24242: u64 [sp + 0x58] = ra\n 24245: u64 [sp + 0x50] = s0\n 24248: s0 = sp + 0x60\n 24251: sp = sp & 0xffffffffffffffe0\n 24254: t0 = u64 [a2]\n 24256: t1 = u64 [a2 + 0x8]\n 24259: t2 = u64 [a2 + 0x10]\n 24262: a2 = u64 [a2 + 0x18]\n 24265: a3 = u64 [a1 + 0x18]\n 24268: a4 = u64 [a1 + 0x10]\n 24271: a5 = u64 [a1 + 0x8]\n 24274: a1 = u64 [a1]\n 24276: u64 [sp + 0x18] = a3\n 24279: u64 [sp + 0x10] = a4\n 24282: u64 [sp + 0x8] = a5\n 24285: u64 [sp] = a1\n 24287: u64 [sp + 0x38] = a2\n 24290: u64 [sp + 0x30] = t2\n 24293: u64 [sp + 0x28] = t1\n 24296: u64 [sp + 0x20] = t0\n 24299: a0 = 0\n 24301: i32 a1 = sp + 0\n 24303: i32 a3 = sp + 0x20\n 24306: a2 = 0xffffffffffffffff\n 24309: a4 = 0x20\n 24312: ecalli 9 // 'set_storage'\n 24314: sp = s0 + 0xffffffffffffffa0\n 24317: ra = u64 [sp + 0x58]\n 24320: s0 = u64 [sp + 0x50]\n 24323: sp = sp + 0x60\n 24326: ret\n      : @287 [@dyn 102] (gas: 3)\n 24328: a0 = 0\n 24330: a1 = 0\n 24332: ra = 206, jump @0\n      : @288 [@dyn 103] (gas: 8)\n 24338: i32 a1 = a0 + 0\n 24340: a0 = 0\n 24342: a2 = 0\n 24344: ecalli 7 // 'seal_return'\n 24346: a0 = 0\n 24348: a1 = 0\n 24350: ra = 0xd0\n 24354: jump @0\n      : @289 (gas: 4)\n 24357: a0 = 0\n 24359: a1 = 0\n 24361: ra = 0xd0\n 24365: jump @0\n      : @290 (gas: 2)\n 24368: a1 = 0\n 24370: ra = 208, jump @0\n      : @291 [@dyn 104] (gas: 7)\n 24376: i32 a1 = a0 + 0\n 24378: a0 = 0x1\n 24381: a2 = 0\n 24383: ecalli 7 // 'seal_return'\n 24385: a0 = 0\n 24387: ra = 0xd0\n 24391: jump @0\n      : @292 (gas: 3)\n 24394: a0 = 0\n 24396: ra = 0xd0\n 24400: jump @0\n      : @293 (gas: 8)\n 24403: u64 [s1 + 1328] = 0\n 24407: u64 [s1 + 1320] = 0\n 24411: u64 [s1 + 1312] = 0\n 24415: a0 = 0x4e487b7100000000\n 24425: a1 = s1 + 0x520\n 24429: u64 [s1 + 0x538] = a0\n 24433: a0 = 0\n 24435: ra = 210, jump @23\n      : @294 [@dyn 105] (gas: 8)\n 24441: u64 [s1 + 1304] = 0\n 24445: u64 [s1 + 1296] = 0\n 24449: u64 [s1 + 1280] = 0x41\n 24454: a0 = 0x4\n 24457: a1 = s1 + 0x500\n 24461: u64 [s1 + 1288] = 0\n 24465: ra = 0xdc\n 24469: jump @23\n      : @295 (gas: 8)\n 24472: u64 [s1 + 1392] = 0\n 24476: u64 [s1 + 1384] = 0\n 24480: u64 [s1 + 1376] = 0\n 24484: a0 = 0x4e487b7100000000\n 24494: a1 = s1 + 0x560\n 24498: u64 [s1 + 0x578] = a0\n 24502: a0 = 0\n 24504: ra = 212, jump @23\n      : @296 [@dyn 106] (gas: 8)\n 24510: u64 [s1 + 1368] = 0\n 24514: u64 [s1 + 1360] = 0\n 24518: u64 [s1 + 1344] = 0x41\n 24523: a0 = 0x4\n 24526: a1 = s1 + 0x540\n 24530: u64 [s1 + 1352] = 0\n 24534: ra = 0xdc\n 24538: jump @23\n      : @297 (gas: 4)\n 24541: i32 a0 = a0 + 0\n 24543: u64 [s1 + 0x4d8] = a0\n 24547: a1 = 0x20\n 24550: ra = 214, jump @0\n      : @298 [@dyn 107] (gas: 71)\n 24556: a1 = u64 [s1 + 0x4e0]\n 24560: a1 = reverse a1\n 24562: a2 = u64 [s1 + 0x4e8]\n 24566: a2 = reverse a2\n 24568: a3 = u64 [s1 + 0x4f0]\n 24572: a3 = reverse a3\n 24574: a4 = u64 [s1 + 0x4f8]\n 24578: a4 = reverse a4\n 24580: a5 = a4 >> 0x38\n 24583: u8 [a0 + 0x1f] = a5\n 24586: a5 = a4 >> 0x30\n 24589: u8 [a0 + 0x1e] = a5\n 24592: a5 = a4 >> 0x28\n 24595: u8 [a0 + 0x1d] = a5\n 24598: a5 = a4 >> 0x20\n 24601: u8 [a0 + 0x1c] = a5\n 24604: a5 = a4 >> 0x18\n 24607: u8 [a0 + 0x1b] = a5\n 24610: a5 = a4 >> 0x10\n 24613: u8 [a0 + 0x1a] = a5\n 24616: a5 = a4 >> 0x8\n 24619: u8 [a0 + 0x19] = a5\n 24622: u8 [a0 + 0x18] = a4\n 24625: u8 [a0 + 0x10] = a3\n 24628: a4 = a3 >> 0x38\n 24631: u8 [a0 + 0x17] = a4\n 24634: a4 = a3 >> 0x30\n 24637: u8 [a0 + 0x16] = a4\n 24640: a4 = a3 >> 0x28\n 24643: u8 [a0 + 0x15] = a4\n 24646: a4 = a3 >> 0x20\n 24649: u8 [a0 + 0x14] = a4\n 24652: a4 = a3 >> 0x18\n 24655: u8 [a0 + 0x13] = a4\n 24658: a4 = a3 >> 0x10\n 24661: u8 [a0 + 0x12] = a4\n 24664: a3 = a3 >> 0x8\n 24667: u8 [a0 + 0x11] = a3\n 24670: u8 [a0 + 0x8] = a2\n 24673: a3 = a2 >> 0x38\n 24676: u8 [a0 + 0xf] = a3\n 24679: a3 = a2 >> 0x30\n 24682: u8 [a0 + 0xe] = a3\n 24685: a3 = a2 >> 0x28\n 24688: u8 [a0 + 0xd] = a3\n 24691: a3 = a2 >> 0x20\n 24694: u8 [a0 + 0xc] = a3\n 24697: a3 = a2 >> 0x18\n 24700: u8 [a0 + 0xb] = a3\n 24703: a3 = a2 >> 0x10\n 24706: u8 [a0 + 0xa] = a3\n 24709: a2 = a2 >> 0x8\n 24712: u8 [a0 + 0x9] = a2\n 24715: u8 [a0] = a1\n 24717: a2 = a1 >> 0x38\n 24720: u8 [a0 + 0x7] = a2\n 24723: a2 = a1 >> 0x30\n 24726: u8 [a0 + 0x6] = a2\n 24729: a2 = a1 >> 0x28\n 24732: u8 [a0 + 0x5] = a2\n 24735: a2 = a1 >> 0x20\n 24738: u8 [a0 + 0x4] = a2\n 24741: a2 = a1 >> 0x18\n 24744: u8 [a0 + 0x3] = a2\n 24747: a2 = a1 >> 0x10\n 24750: u8 [a0 + 0x2] = a2\n 24753: a1 = a1 >> 0x8\n 24756: u8 [a0 + 0x1] = a1\n 24759: a1 = 0x20\n 24762: a0 = u64 [s1 + 0x4d8]\n 24766: ra = 216, jump @0\n      : @299 [@dyn 108] (gas: 5)\n 24772: i32 a1 = a0 + 0\n 24774: a2 = 0x20\n 24777: a0 = 0\n 24779: ecalli 7 // 'seal_return'\n 24781: fallthrough\n      : @300 (gas: 13)\n 24782: a0 = s1 + 0x1000\n 24786: u64 [a0 + 4294965680] = 0\n 24790: a0 = s1 + 0x1000\n 24794: u64 [a0 + 4294965672] = 0\n 24798: a0 = s1 + 0x1000\n 24802: u64 [a0 + 4294965664] = 0\n 24806: a0 = 0x4e487b7100000000\n 24816: a1 = s1 + 0x7ff\n 24820: a1 = a1 + 0x1a1\n 24824: a2 = s1 + 0x1000\n 24828: u64 [a2 + 0xfffffffffffff9b8] = a0\n 24832: a0 = 0\n 24834: ra = 218, jump @23\n      : @301 [@dyn 109] (gas: 12)\n 24840: a0 = s1 + 0x1000\n 24844: u64 [a0 + 4294965656] = 0\n 24848: a0 = s1 + 0x1000\n 24852: u64 [a0 + 4294965648] = 0\n 24856: a1 = s1 + 0x1000\n 24860: u64 [a1 + 4294965632] = 0x41\n 24865: a0 = 0x4\n 24868: a1 = s1 + 0x7ff\n 24872: a1 = a1 + 0x181\n 24876: a2 = s1 + 0x1000\n 24880: u64 [a2 + 4294965640] = 0\n 24884: ra = 220, jump @23\n      : @302 [@dyn 110] (gas: 3)\n 24890: a1 = 0x24\n 24893: a0 = 0\n 24895: ra = 222, jump @0\n      : @303 [@dyn 111] (gas: 5)\n 24901: i32 a1 = a0 + 0\n 24903: a0 = 0x1\n 24906: a2 = 0x24\n 24909: ecalli 7 // 'seal_return'\n 24911: fallthrough\n      : @304 (gas: 8)\n 24912: u64 [s1 + 1456] = 0\n 24916: u64 [s1 + 1448] = 0\n 24920: u64 [s1 + 1440] = 0\n 24924: a0 = 0x4e487b7100000000\n 24934: a1 = s1 + 0x5a0\n 24938: u64 [s1 + 0x5b8] = a0\n 24942: a0 = 0\n 24944: ra = 224, jump @23\n      : @305 [@dyn 112] (gas: 8)\n 24950: u64 [s1 + 1432] = 0\n 24954: u64 [s1 + 1424] = 0\n 24958: u64 [s1 + 1408] = 0x41\n 24963: a0 = 0x4\n 24966: a1 = s1 + 0x580\n 24970: u64 [s1 + 1416] = 0\n 24974: ra = 0xdc\n 24978: jump @23\n      : @306 (gas: 8)\n 24981: u64 [s1 + 1520] = 0\n 24985: u64 [s1 + 1512] = 0\n 24989: u64 [s1 + 1504] = 0\n 24993: a0 = 0x4e487b7100000000\n 25003: a1 = s1 + 0x5e0\n 25007: u64 [s1 + 0x5f8] = a0\n 25011: a0 = 0\n 25013: ra = 226, jump @23\n      : @307 [@dyn 113] (gas: 8)\n 25019: u64 [s1 + 1496] = 0\n 25023: u64 [s1 + 1488] = 0\n 25027: u64 [s1 + 1472] = 0x11\n 25032: a0 = 0x4\n 25035: a1 = s1 + 0x5c0\n 25039: u64 [s1 + 1480] = 0\n 25043: ra = 0xdc\n 25047: jump @23\n      : @308 (gas: 15)\n 25050: sp = sp + 0xffffffffffffff80\n 25053: u64 [sp + 0x78] = ra\n 25056: u64 [sp + 0x70] = s0\n 25059: u64 [sp + 0x68] = s1\n 25062: s0 = sp + 0x80\n 25066: sp = sp & 0xfffffffffffffff0\n 25069: a1 = u64 [a0 + 0x18]\n 25072: a2 = u64 [a0 + 0x10]\n 25075: a3 = u64 [a0]\n 25077: a0 = u64 [a0 + 0x8]\n 25080: a4 = a2 | a1\n 25083: a5 = a3 <u 0xffffffffffffff80\n 25086: a5 = 0 if a0 != 0\n 25088: a5 = 0 if a4 != 0\n 25090: jump @311 if a5 == 0\n      : @309 (gas: 14)\n 25094: a4 = a3 + 0x80\n 25098: u64 [sp + 0x18] = a4\n 25101: a3 = a4 <u a3\n 25104: a4 = a0 + a3\n 25107: u64 [sp + 0x10] = a4\n 25110: a0 = a4 <u a0\n 25113: a0 = a3 if a3 == 0\n 25116: s1 = a2 + a0\n 25119: a0 = s1 <u a2\n 25122: a0 = a0 + a1\n 25125: u64 [sp + 0x8] = a0\n 25128: a0 = 0x40\n 25131: a1 = 0x20\n 25134: ra = 228, jump @0\n      : @310 [@dyn 114] (gas: 73)\n 25140: a1 = u64 [sp + 0x8]\n 25143: a1 = reverse a1\n 25145: a2 = reverse s1\n 25147: a3 = u64 [sp + 0x10]\n 25150: a3 = reverse a3\n 25152: a4 = u64 [sp + 0x18]\n 25155: a4 = reverse a4\n 25157: u8 [a0 + 0x18] = a4\n 25160: a5 = a4 >> 0x38\n 25163: u8 [a0 + 0x1f] = a5\n 25166: a5 = a4 >> 0x30\n 25169: u8 [a0 + 0x1e] = a5\n 25172: a5 = a4 >> 0x28\n 25175: u8 [a0 + 0x1d] = a5\n 25178: a5 = a4 >> 0x20\n 25181: u8 [a0 + 0x1c] = a5\n 25184: a5 = a4 >> 0x18\n 25187: u8 [a0 + 0x1b] = a5\n 25190: a5 = a4 >> 0x10\n 25193: u8 [a0 + 0x1a] = a5\n 25196: a4 = a4 >> 0x8\n 25199: u8 [a0 + 0x19] = a4\n 25202: u8 [a0 + 0x10] = a3\n 25205: a4 = a3 >> 0x38\n 25208: u8 [a0 + 0x17] = a4\n 25211: a4 = a3 >> 0x30\n 25214: u8 [a0 + 0x16] = a4\n 25217: a4 = a3 >> 0x28\n 25220: u8 [a0 + 0x15] = a4\n 25223: a4 = a3 >> 0x20\n 25226: u8 [a0 + 0x14] = a4\n 25229: a4 = a3 >> 0x18\n 25232: u8 [a0 + 0x13] = a4\n 25235: a4 = a3 >> 0x10\n 25238: u8 [a0 + 0x12] = a4\n 25241: a3 = a3 >> 0x8\n 25244: u8 [a0 + 0x11] = a3\n 25247: u8 [a0 + 0x8] = a2\n 25250: a3 = a2 >> 0x38\n 25253: u8 [a0 + 0xf] = a3\n 25256: a3 = a2 >> 0x30\n 25259: u8 [a0 + 0xe] = a3\n 25262: a3 = a2 >> 0x28\n 25265: u8 [a0 + 0xd] = a3\n 25268: a3 = a2 >> 0x20\n 25271: u8 [a0 + 0xc] = a3\n 25274: a3 = a2 >> 0x18\n 25277: u8 [a0 + 0xb] = a3\n 25280: a3 = a2 >> 0x10\n 25283: u8 [a0 + 0xa] = a3\n 25286: a2 = a2 >> 0x8\n 25289: u8 [a0 + 0x9] = a2\n 25292: u8 [a0] = a1\n 25294: a2 = a1 >> 0x38\n 25297: u8 [a0 + 0x7] = a2\n 25300: a2 = a1 >> 0x30\n 25303: u8 [a0 + 0x6] = a2\n 25306: a2 = a1 >> 0x28\n 25309: u8 [a0 + 0x5] = a2\n 25312: a2 = a1 >> 0x20\n 25315: u8 [a0 + 0x4] = a2\n 25318: a2 = a1 >> 0x18\n 25321: u8 [a0 + 0x3] = a2\n 25324: a2 = a1 >> 0x10\n 25327: u8 [a0 + 0x2] = a2\n 25330: a1 = a1 >> 0x8\n 25333: u8 [a0 + 0x1] = a1\n 25336: sp = s0 + 0xffffffffffffff80\n 25339: ra = u64 [sp + 0x78]\n 25342: s0 = u64 [sp + 0x70]\n 25345: s1 = u64 [sp + 0x68]\n 25348: sp = sp + 0x80\n 25352: ret\n      : @311 (gas: 8)\n 25354: u64 [sp + 80] = 0\n 25357: u64 [sp + 72] = 0\n 25360: u64 [sp + 64] = 0\n 25363: a0 = 0x4e487b7100000000\n 25373: a1 = sp + 0x40\n 25376: u64 [sp + 0x58] = a0\n 25379: a0 = 0\n 25381: ra = 230, jump @23\n      : @312 [@dyn 115] (gas: 7)\n 25387: u64 [sp + 56] = 0\n 25390: u64 [sp + 48] = 0\n 25393: u64 [sp + 32] = 0x41\n 25397: a0 = 0x4\n 25400: a1 = sp + 0x20\n 25403: u64 [sp + 40] = 0\n 25406: ra = 232, jump @23\n      : @313 [@dyn 116] (gas: 3)\n 25412: a1 = 0x24\n 25415: a0 = 0\n 25417: ra = 234, jump @0\n      : @314 [@dyn 117] (gas: 6)\n 25423: i32 a1 = a0 + 0\n 25425: a0 = 0x1\n 25428: a2 = 0x24\n 25431: ra = 0xec\n 25435: ecalli 7 // 'seal_return'\n 25437: fallthrough\n      : @315 [@dyn 118] (gas: 45)\n 25438: sp = sp + 0xffffffffffffff80\n 25441: u64 [sp + 0x78] = ra\n 25444: u64 [sp + 0x70] = s0\n 25447: u64 [sp + 0x68] = s1\n 25450: s0 = sp + 0x80\n 25454: sp = sp & 0xfffffffffffffff0\n 25457: a4 = u64 [a1]\n 25459: t1 = u64 [a0 + 0x8]\n 25462: a5 = u64 [a1 + 0x8]\n 25465: ra = u64 [a0]\n 25467: s1 = a4 + 0x1f\n 25470: t2 = s1 <u a4\n 25473: a2 = a5 + t2\n 25476: s1 = s1 & 0xffffffffffffffe0\n 25479: u64 [sp + 0x18] = ra\n 25482: ra = ra + s1\n 25485: a4 = ra <u s1\n 25488: a3 = a2 + t1\n 25491: t0 = a3 + a4\n 25494: a3 = t0 ^ a2\n 25497: s1 = t0 <u a2\n 25500: s1 = a4 if a3 == 0\n 25503: a4 = u64 [a0 + 0x18]\n 25506: a2 = a2 <u a5\n 25509: a3 = u64 [a1 + 0x10]\n 25512: a0 = u64 [a0 + 0x10]\n 25515: a1 = u64 [a1 + 0x18]\n 25518: a2 = t2 if t2 == 0\n 25521: a2 = a2 + a3\n 25524: a3 = a2 <u a3\n 25527: a5 = a2 + a0\n 25530: t2 = a5 + s1\n 25533: a2 = a5 <u a2\n 25536: s1 = t2 <u a5\n 25539: a1 = a1 + a4\n 25542: a1 = a1 + a3\n 25545: a1 = a1 + a2\n 25548: s1 = s1 + a1\n 25551: a1 = s1 >u 0\n 25553: a2 = t2 >u 0\n 25555: a2 = a1 if s1 != 0\n 25558: a1 = t2 | s1\n 25561: a3 = t0 >u 0\n 25563: a3 = a2 if a1 != 0\n 25566: jump @319 if a3 != 0\n      : @316 (gas: 13)\n 25570: a1 = u64 [sp + 0x18]\n 25573: a1 = ra <u a1\n 25576: a2 = t0 ^ t1\n 25579: a3 = t0 <u t1\n 25582: a3 = a1 if a2 == 0\n 25585: a1 = t2 <u a0\n 25588: a2 = s1 ^ a4\n 25591: a4 = s1 <u a4\n 25594: a4 = a1 if a2 == 0\n 25597: a0 = t2 ^ a0\n 25600: a0 = a0 | a2\n 25603: a4 = a3 if a0 == 0\n 25606: jump @319 if a4 != 0\n      : @317 (gas: 6)\n 25610: a0 = 0x40\n 25613: a1 = 0x20\n 25616: u64 [sp + 0x18] = ra\n 25619: u64 [sp + 0x10] = t0\n 25622: u64 [sp + 0x8] = t2\n 25625: ra = 238, jump @0\n      : @318 [@dyn 119] (gas: 73)\n 25631: a1 = reverse s1\n 25633: a2 = u64 [sp + 0x8]\n 25636: a2 = reverse a2\n 25638: a3 = u64 [sp + 0x10]\n 25641: a3 = reverse a3\n 25643: a4 = u64 [sp + 0x18]\n 25646: a4 = reverse a4\n 25648: u8 [a0 + 0x18] = a4\n 25651: a5 = a4 >> 0x38\n 25654: u8 [a0 + 0x1f] = a5\n 25657: a5 = a4 >> 0x30\n 25660: u8 [a0 + 0x1e] = a5\n 25663: a5 = a4 >> 0x28\n 25666: u8 [a0 + 0x1d] = a5\n 25669: a5 = a4 >> 0x20\n 25672: u8 [a0 + 0x1c] = a5\n 25675: a5 = a4 >> 0x18\n 25678: u8 [a0 + 0x1b] = a5\n 25681: a5 = a4 >> 0x10\n 25684: u8 [a0 + 0x1a] = a5\n 25687: a4 = a4 >> 0x8\n 25690: u8 [a0 + 0x19] = a4\n 25693: u8 [a0 + 0x10] = a3\n 25696: a4 = a3 >> 0x38\n 25699: u8 [a0 + 0x17] = a4\n 25702: a4 = a3 >> 0x30\n 25705: u8 [a0 + 0x16] = a4\n 25708: a4 = a3 >> 0x28\n 25711: u8 [a0 + 0x15] = a4\n 25714: a4 = a3 >> 0x20\n 25717: u8 [a0 + 0x14] = a4\n 25720: a4 = a3 >> 0x18\n 25723: u8 [a0 + 0x13] = a4\n 25726: a4 = a3 >> 0x10\n 25729: u8 [a0 + 0x12] = a4\n 25732: a3 = a3 >> 0x8\n 25735: u8 [a0 + 0x11] = a3\n 25738: u8 [a0 + 0x8] = a2\n 25741: a3 = a2 >> 0x38\n 25744: u8 [a0 + 0xf] = a3\n 25747: a3 = a2 >> 0x30\n 25750: u8 [a0 + 0xe] = a3\n 25753: a3 = a2 >> 0x28\n 25756: u8 [a0 + 0xd] = a3\n 25759: a3 = a2 >> 0x20\n 25762: u8 [a0 + 0xc] = a3\n 25765: a3 = a2 >> 0x18\n 25768: u8 [a0 + 0xb] = a3\n 25771: a3 = a2 >> 0x10\n 25774: u8 [a0 + 0xa] = a3\n 25777: a2 = a2 >> 0x8\n 25780: u8 [a0 + 0x9] = a2\n 25783: u8 [a0] = a1\n 25785: a2 = a1 >> 0x38\n 25788: u8 [a0 + 0x7] = a2\n 25791: a2 = a1 >> 0x30\n 25794: u8 [a0 + 0x6] = a2\n 25797: a2 = a1 >> 0x28\n 25800: u8 [a0 + 0x5] = a2\n 25803: a2 = a1 >> 0x20\n 25806: u8 [a0 + 0x4] = a2\n 25809: a2 = a1 >> 0x18\n 25812: u8 [a0 + 0x3] = a2\n 25815: a2 = a1 >> 0x10\n 25818: u8 [a0 + 0x2] = a2\n 25821: a1 = a1 >> 0x8\n 25824: u8 [a0 + 0x1] = a1\n 25827: sp = s0 + 0xffffffffffffff80\n 25830: ra = u64 [sp + 0x78]\n 25833: s0 = u64 [sp + 0x70]\n 25836: s1 = u64 [sp + 0x68]\n 25839: sp = sp + 0x80\n 25843: ret\n      : @319 (gas: 8)\n 25845: u64 [sp + 80] = 0\n 25848: u64 [sp + 72] = 0\n 25851: u64 [sp + 64] = 0\n 25854: a0 = 0x4e487b7100000000\n 25864: a1 = sp + 0x40\n 25867: u64 [sp + 0x58] = a0\n 25870: a0 = 0\n 25872: ra = 240, jump @23\n      : @320 [@dyn 120] (gas: 7)\n 25878: u64 [sp + 56] = 0\n 25881: u64 [sp + 48] = 0\n 25884: u64 [sp + 32] = 0x41\n 25888: a0 = 0x4\n 25891: a1 = sp + 0x20\n 25894: u64 [sp + 40] = 0\n 25897: ra = 242, jump @23\n      : @321 [@dyn 121] (gas: 3)\n 25903: a1 = 0x24\n 25906: a0 = 0\n 25908: ra = 244, jump @0\n      : @322 [@dyn 122] (gas: 6)\n 25914: i32 a1 = a0 + 0\n 25916: a0 = 0x1\n 25919: a2 = 0x24\n 25922: ra = 0xf6\n 25926: ecalli 7 // 'seal_return'\n 25928: fallthrough\n      : @323 [@dyn 123] (gas: 16)\n 25929: sp = sp + 0xffffffffffffff80\n 25932: u64 [sp + 0x78] = ra\n 25935: u64 [sp + 0x70] = s0\n 25938: u64 [sp + 0x68] = s1\n 25941: a5 = u64 [a1 + 0x10]\n 25944: s1 = u64 [a1 + 0x18]\n 25947: a4 = u64 [a1 + 0x8]\n 25950: s0 = u64 [a1]\n 25952: a1 = a4 | s1\n 25955: a3 = s0 | a5\n 25958: a3 = a3 | a1\n 25961: a3 = a3 >> 0x20\n 25964: a1 = a1 | a5\n 25967: a1 = a1 << 0x20\n 25970: a1 = a1 | a3\n 25973: jump @336 if a1 != 0\n      : @324 (gas: 16)\n 25977: u64 [sp + 0x30] = s1\n 25980: u64 [sp + 0x38] = a5\n 25983: u64 [sp + 0x40] = a4\n 25986: u64 [sp + 0x8] = a0\n 25989: a0 = u64 [a2 + 0x18]\n 25992: u64 [sp + 0x60] = a0\n 25995: s1 = u64 [a2 + 0x10]\n 25998: a0 = u64 [a2 + 0x8]\n 26001: u64 [sp + 0x58] = a0\n 26004: a0 = u64 [a2]\n 26006: u64 [sp + 0x50] = a0\n 26009: u64 [sp + 0x28] = s0\n 26012: i32 a0 = s0 + 0\n 26014: a1 = 0x20\n 26017: u64 [sp + 0x10] = a0\n 26020: ra = 248, jump @0\n      : @325 [@dyn 124] (gas: 12)\n 26026: t0 = u64 [sp + 0x50]\n 26029: a1 = t0 | s1\n 26032: a2 = u64 [sp + 0x60]\n 26035: a3 = u64 [sp + 0x58]\n 26038: a2 = a2 | a3\n 26041: a1 = a1 | a2\n 26044: a1 = a1 >> 0x20\n 26047: u64 [sp + 0x48] = s1\n 26050: a2 = a2 | s1\n 26053: a2 = a2 << 0x20\n 26056: a1 = a1 | a2\n 26059: jump @336 if a1 != 0\n      : @326 (gas: 94)\n 26063: a1 = u8 [a0 + 0x19]\n 26066: a2 = u8 [a0 + 0x18]\n 26069: a3 = u8 [a0 + 0x1a]\n 26072: a4 = u8 [a0 + 0x1b]\n 26075: a1 = a1 << 0x8\n 26078: a1 = a1 | a2\n 26081: a3 = a3 << 0x10\n 26084: a4 = a4 << 0x18\n 26087: a3 = a3 | a4\n 26090: a1 = a1 | a3\n 26093: a2 = u8 [a0 + 0x1d]\n 26096: a3 = u8 [a0 + 0x1c]\n 26099: a4 = u8 [a0 + 0x1e]\n 26102: a5 = u8 [a0 + 0x1f]\n 26105: a2 = a2 << 0x8\n 26108: a2 = a2 | a3\n 26111: a4 = a4 << 0x10\n 26114: a5 = a5 << 0x18\n 26117: a4 = a4 | a5\n 26120: a2 = a2 | a4\n 26123: a2 = a2 << 0x20\n 26126: a1 = a1 | a2\n 26129: u64 [sp + 0x20] = a1\n 26132: a1 = u8 [a0 + 0x11]\n 26135: a2 = u8 [a0 + 0x10]\n 26138: a3 = u8 [a0 + 0x12]\n 26141: a4 = u8 [a0 + 0x13]\n 26144: a1 = a1 << 0x8\n 26147: a1 = a1 | a2\n 26150: a3 = a3 << 0x10\n 26153: a4 = a4 << 0x18\n 26156: a3 = a3 | a4\n 26159: a1 = a1 | a3\n 26162: a2 = u8 [a0 + 0x15]\n 26165: a3 = u8 [a0 + 0x14]\n 26168: a4 = u8 [a0 + 0x16]\n 26171: a5 = u8 [a0 + 0x17]\n 26174: a2 = a2 << 0x8\n 26177: a2 = a2 | a3\n 26180: a4 = a4 << 0x10\n 26183: a5 = a5 << 0x18\n 26186: a4 = a4 | a5\n 26189: a2 = a2 | a4\n 26192: a2 = a2 << 0x20\n 26195: a1 = a1 | a2\n 26198: u64 [sp + 0x18] = a1\n 26201: a1 = u8 [a0 + 0x9]\n 26204: a2 = u8 [a0 + 0x8]\n 26207: a3 = u8 [a0 + 0xa]\n 26210: a4 = u8 [a0 + 0xb]\n 26213: a1 = a1 << 0x8\n 26216: a1 = a1 | a2\n 26219: a3 = a3 << 0x10\n 26222: a4 = a4 << 0x18\n 26225: a3 = a3 | a4\n 26228: a1 = a1 | a3\n 26231: a2 = u8 [a0 + 0xd]\n 26234: a3 = u8 [a0 + 0xc]\n 26237: a4 = u8 [a0 + 0xe]\n 26240: a5 = u8 [a0 + 0xf]\n 26243: a2 = a2 << 0x8\n 26246: a2 = a2 | a3\n 26249: a4 = a4 << 0x10\n 26252: a5 = a5 << 0x18\n 26255: a4 = a4 | a5\n 26258: a2 = a2 | a4\n 26261: a2 = a2 << 0x20\n 26264: s0 = a2 | a1\n 26267: a1 = u8 [a0 + 0x1]\n 26270: a2 = u8 [a0]\n 26272: a3 = u8 [a0 + 0x2]\n 26275: a4 = u8 [a0 + 0x3]\n 26278: a1 = a1 << 0x8\n 26281: a1 = a1 | a2\n 26284: a3 = a3 << 0x10\n 26287: a4 = a4 << 0x18\n 26290: a3 = a3 | a4\n 26293: a1 = a1 | a3\n 26296: a2 = u8 [a0 + 0x5]\n 26299: a3 = u8 [a0 + 0x4]\n 26302: a4 = u8 [a0 + 0x6]\n 26305: a0 = u8 [a0 + 0x7]\n 26308: a2 = a2 << 0x8\n 26311: a2 = a2 | a3\n 26314: a4 = a4 << 0x10\n 26317: a0 = a0 << 0x18\n 26320: a0 = a0 | a4\n 26323: a0 = a0 | a2\n 26326: a0 = a0 << 0x20\n 26329: s1 = a0 | a1\n 26332: i32 a0 = t0 + 0\n 26334: a1 = 0x20\n 26337: u64 [sp] = a0\n 26339: ra = 250, jump @0\n      : @327 [@dyn 125] (gas: 72)\n 26345: a1 = s0 >> 0x38\n 26348: u8 [a0 + 0xf] = a1\n 26351: a1 = s0 >> 0x30\n 26354: u8 [a0 + 0xe] = a1\n 26357: a1 = s0 >> 0x28\n 26360: u8 [a0 + 0xd] = a1\n 26363: a1 = s0 >> 0x20\n 26366: u8 [a0 + 0xc] = a1\n 26369: a1 = s0 >> 0x18\n 26372: u8 [a0 + 0xb] = a1\n 26375: a1 = s0 >> 0x10\n 26378: u8 [a0 + 0xa] = a1\n 26381: a1 = s0 >> 0x8\n 26384: u8 [a0 + 0x9] = a1\n 26387: a1 = s1 >> 0x38\n 26390: u8 [a0 + 0x7] = a1\n 26393: a1 = s1 >> 0x30\n 26396: u8 [a0 + 0x6] = a1\n 26399: a1 = s1 >> 0x28\n 26402: u8 [a0 + 0x5] = a1\n 26405: a1 = s1 >> 0x20\n 26408: u8 [a0 + 0x4] = a1\n 26411: a1 = s1 >> 0x18\n 26414: u8 [a0 + 0x3] = a1\n 26417: a1 = s1 >> 0x10\n 26420: u8 [a0 + 0x2] = a1\n 26423: a1 = s1 >> 0x8\n 26426: u8 [a0 + 0x1] = a1\n 26429: t0 = u64 [sp + 0x18]\n 26432: a1 = t0 >> 0x38\n 26435: u8 [a0 + 0x17] = a1\n 26438: a1 = t0 >> 0x30\n 26441: u8 [a0 + 0x16] = a1\n 26444: a1 = t0 >> 0x28\n 26447: u8 [a0 + 0x15] = a1\n 26450: a1 = t0 >> 0x20\n 26453: u8 [a0 + 0x14] = a1\n 26456: a1 = t0 >> 0x18\n 26459: u8 [a0 + 0x13] = a1\n 26462: a1 = t0 >> 0x10\n 26465: u8 [a0 + 0x12] = a1\n 26468: a1 = t0 >> 0x8\n 26471: u8 [a0 + 0x11] = a1\n 26474: a5 = u64 [sp + 0x20]\n 26477: a1 = a5 >> 0x38\n 26480: u8 [a0 + 0x1f] = a1\n 26483: a1 = a5 >> 0x30\n 26486: u8 [a0 + 0x1e] = a1\n 26489: a1 = a5 >> 0x28\n 26492: u8 [a0 + 0x1d] = a1\n 26495: a1 = a5 >> 0x20\n 26498: u8 [a0 + 0x1c] = a1\n 26501: a1 = a5 >> 0x18\n 26504: u8 [a0 + 0x1b] = a1\n 26507: a1 = a5 >> 0x10\n 26510: u8 [a0 + 0x1a] = a1\n 26513: a1 = a5 >> 0x8\n 26516: u8 [a0 + 0x19] = a1\n 26519: a1 = u64 [sp + 0x48]\n 26522: a2 = u64 [sp + 0x60]\n 26525: a2 = a2 | a1\n 26528: a1 = 0xffffffe0\n 26538: a3 = u64 [sp + 0x50]\n 26541: a3 = a3 <u a1\n 26544: a4 = u64 [sp + 0x58]\n 26547: a3 = 0 if a4 != 0\n 26549: a3 = 0 if a2 != 0\n 26551: u8 [a0 + 0x10] = t0\n 26554: u8 [a0 + 0x8] = s0\n 26557: u8 [a0] = s1\n 26559: u8 [a0 + 0x18] = a5\n 26562: jump @336 if a3 == 0\n      : @328 (gas: 9)\n 26566: a0 = u64 [sp + 0x38]\n 26569: a3 = u64 [sp + 0x30]\n 26572: a0 = a0 | a3\n 26575: a3 = u64 [sp + 0x28]\n 26578: a1 = a3 <u a1\n 26581: a3 = u64 [sp + 0x40]\n 26584: a1 = 0 if a3 != 0\n 26586: a1 = 0 if a0 != 0\n 26588: jump @336 if a1 == 0\n      : @329 (gas: 15)\n 26592: a1 = reverse s1\n 26594: a3 = reverse s0\n 26596: a4 = reverse t0\n 26598: s1 = reverse a5\n 26600: a0 = s1 | a3\n 26603: u64 [sp + 0x40] = a1\n 26606: u64 [sp + 0x30] = a4\n 26609: a1 = a1 | a4\n 26612: a0 = a0 | a1\n 26615: a0 = a0 >> 0x20\n 26618: u64 [sp + 0x38] = a3\n 26621: a1 = a1 | a3\n 26624: a1 = a1 << 0x20\n 26627: a0 = a0 | a1\n 26630: jump @336 if a0 != 0\n      : @330 (gas: 8)\n 26634: a0 = u64 [sp]\n 26636: i32 a0 = a0 + 0x20\n 26639: a1 = u64 [sp + 0x10]\n 26642: i32 a1 = a1 + 0x20\n 26645: u64 [sp + 0x28] = a1\n 26648: i32 s0 = s1 + 0\n 26650: a1 = s0\n 26652: ra = 252, jump @0\n      : @331 [@dyn 126] (gas: 4)\n 26658: u64 [sp + 0x20] = a0\n 26661: a0 = u64 [sp + 0x28]\n 26664: a1 = s0\n 26666: ra = 254, jump @0\n      : @332 [@dyn 127] (gas: 4)\n 26672: a1 = a0\n 26674: a0 = u64 [sp + 0x20]\n 26677: a2 = s1\n 26679: ra = 256, jump @8\n      : @333 [@dyn 128] (gas: 28)\n 26685: a0 = u64 [sp + 0x50]\n 26688: a0 = a0 + s1\n 26691: u64 [sp + 0x28] = s1\n 26694: a1 = a0 <u s1\n 26697: a2 = u64 [sp + 0x58]\n 26700: a4 = u64 [sp + 0x30]\n 26703: a2 = a2 + a4\n 26706: a2 = a2 + a1\n 26709: a3 = a2 ^ a4\n 26712: a4 = a2 <u a4\n 26715: a4 = a1 if a3 == 0\n 26718: s1 = u64 [sp + 0x48]\n 26721: a5 = u64 [sp + 0x38]\n 26724: a1 = a5 + s1\n 26727: a4 = a4 + a1\n 26730: a3 = a4 <u a1\n 26733: a1 = a1 <u a5\n 26736: a5 = u64 [sp + 0x60]\n 26739: s0 = u64 [sp + 0x40]\n 26742: a5 = a5 + s0\n 26745: a1 = a1 + a5\n 26748: a1 = a1 + a3\n 26751: a1 = a1 | a4\n 26754: a3 = 0xffffffe0\n 26764: a3 = a0 <u a3\n 26767: a3 = 0 if a2 != 0\n 26769: a3 = 0 if a1 != 0\n 26771: jump @336 if a3 == 0\n      : @334 (gas: 3)\n 26775: i32 a0 = a0 + 0x20\n 26778: a1 = 0x20\n 26781: ra = 258, jump @0\n      : @335 [@dyn 129] (gas: 65)\n 26787: u8 [a0 + 31] = 0\n 26790: u8 [a0 + 30] = 0\n 26793: u8 [a0 + 29] = 0\n 26796: u8 [a0 + 28] = 0\n 26799: u8 [a0 + 27] = 0\n 26802: u8 [a0 + 26] = 0\n 26805: u8 [a0 + 25] = 0\n 26808: u8 [a0 + 24] = 0\n 26811: u8 [a0 + 23] = 0\n 26814: u8 [a0 + 22] = 0\n 26817: u8 [a0 + 21] = 0\n 26820: u8 [a0 + 20] = 0\n 26823: u8 [a0 + 19] = 0\n 26826: u8 [a0 + 18] = 0\n 26829: u8 [a0 + 17] = 0\n 26832: u8 [a0 + 16] = 0\n 26835: u8 [a0 + 15] = 0\n 26838: u8 [a0 + 14] = 0\n 26841: u8 [a0 + 13] = 0\n 26844: u8 [a0 + 12] = 0\n 26847: u8 [a0 + 11] = 0\n 26850: u8 [a0 + 10] = 0\n 26853: u8 [a0 + 9] = 0\n 26856: u8 [a0 + 8] = 0\n 26859: u8 [a0 + 7] = 0\n 26862: u8 [a0 + 6] = 0\n 26865: u8 [a0 + 5] = 0\n 26868: u8 [a0 + 4] = 0\n 26871: u8 [a0 + 3] = 0\n 26874: u8 [a0 + 2] = 0\n 26877: u8 [a0 + 1] = 0\n 26880: u8 [a0 + 0] = 0\n 26882: a0 = u64 [sp + 0x28]\n 26885: a0 = a0 + 0x1f\n 26888: s0 = 0x1ffffffe0\n 26898: a0 = a0 & s0\n 26901: a1 = u64 [sp + 0x50]\n 26904: a0 = a0 + a1\n 26907: a1 = a0 <u a1\n 26910: a3 = u64 [sp + 0x58]\n 26913: a2 = a3 + a1\n 26916: a3 = a2 <u a3\n 26919: a3 = a1 if a1 == 0\n 26922: a3 = a3 + s1\n 26925: a1 = a3 <u s1\n 26928: a4 = u64 [sp + 0x60]\n 26931: a1 = a1 + a4\n 26934: a4 = a0 + 0x20\n 26937: a0 = a4 <u a0\n 26940: a5 = a2 + a0\n 26943: a2 = a5 <u a2\n 26946: a2 = a0 if a0 == 0\n 26949: a2 = a2 + a3\n 26952: a0 = a2 <u a3\n 26955: a0 = a0 + a1\n 26958: a1 = u64 [sp + 0x8]\n 26961: u64 [a1] = a4\n 26963: u64 [a1 + 0x8] = a5\n 26966: u64 [a1 + 0x10] = a2\n 26969: u64 [a1 + 0x18] = a0\n 26972: ra = u64 [sp + 0x78]\n 26975: s0 = u64 [sp + 0x70]\n 26978: s1 = u64 [sp + 0x68]\n 26981: sp = sp + 0x80\n 26985: ret\n      : @336 (gas: 1)\n 26987: trap\n      : @337 (gas: 23)\n 26988: sp = sp + 0xfffffffffffffed0\n 26992: u64 [sp + 0x128] = ra\n 26996: u64 [sp + 0x120] = s0\n 27000: u64 [sp + 0x118] = s1\n 27004: s0 = sp + 0x130\n 27008: sp = sp & 0xfffffffffffffff0\n 27011: t1 = u64 [a1 + 0x10]\n 27014: t0 = u64 [a1 + 0x18]\n 27017: s1 = u64 [a1 + 0x8]\n 27020: a1 = u64 [a1]\n 27022: u64 [sp + 0xa8] = s1\n 27026: u64 [sp + 0x90] = t0\n 27030: t0 = s1 | t0\n 27033: u64 [sp + 0xa0] = a1\n 27037: s1 = a1 | t1\n 27040: s1 = s1 | t0\n 27043: s1 = s1 >> 0x20\n 27046: u64 [sp + 0x88] = t1\n 27050: a1 = t0 | t1\n 27053: a1 = a1 << 0x20\n 27056: a1 = a1 | s1\n 27059: u64 [sp + 0x40] = a0\n 27062: jump @347 if a1 != 0\n      : @338 (gas: 35)\n 27066: a0 = u64 [a5 + 0x10]\n 27069: u64 [sp + 0x8] = a0\n 27072: a0 = u64 [a5 + 0x8]\n 27075: u64 [sp + 0x10] = a0\n 27078: a0 = u64 [a5]\n 27080: u64 [sp + 0x18] = a0\n 27083: a0 = u64 [a4 + 0x18]\n 27086: u64 [sp + 0x20] = a0\n 27089: a0 = u64 [a4 + 0x10]\n 27092: u64 [sp + 0x28] = a0\n 27095: a0 = u64 [a4 + 0x8]\n 27098: u64 [sp + 0x30] = a0\n 27101: a0 = u64 [a4]\n 27103: u64 [sp + 0x38] = a0\n 27106: a0 = u64 [a3 + 0x18]\n 27109: u64 [sp + 0x48] = a0\n 27112: a0 = u64 [a3 + 0x10]\n 27115: u64 [sp + 0x50] = a0\n 27118: a0 = u64 [a3 + 0x8]\n 27121: u64 [sp + 0x58] = a0\n 27124: a0 = u64 [a3]\n 27126: u64 [sp + 0x60] = a0\n 27129: a0 = u64 [a2 + 0x18]\n 27132: u64 [sp + 0x68] = a0\n 27135: a0 = u64 [a2 + 0x10]\n 27138: u64 [sp + 0x70] = a0\n 27141: a0 = u64 [a2 + 0x8]\n 27144: u64 [sp + 0x78] = a0\n 27147: a0 = u64 [a2]\n 27149: u64 [sp + 0x80] = a0\n 27153: s1 = u64 [sp + 0xa0]\n 27157: i32 a0 = s1 + 0\n 27159: a1 = 0x20\n 27162: u64 [sp + 0x98] = a0\n 27166: ra = 260, jump @0\n      : @339 [@dyn 130] (gas: 59)\n 27172: u8 [a0 + 31] = 0x80\n 27177: u8 [a0 + 30] = 0\n 27180: u8 [a0 + 29] = 0\n 27183: u8 [a0 + 28] = 0\n 27186: u8 [a0 + 27] = 0\n 27189: u8 [a0 + 26] = 0\n 27192: u8 [a0 + 25] = 0\n 27195: u8 [a0 + 24] = 0\n 27198: u8 [a0 + 23] = 0\n 27201: u8 [a0 + 22] = 0\n 27204: u8 [a0 + 21] = 0\n 27207: u8 [a0 + 20] = 0\n 27210: u8 [a0 + 19] = 0\n 27213: u8 [a0 + 18] = 0\n 27216: u8 [a0 + 17] = 0\n 27219: u8 [a0 + 16] = 0\n 27222: u8 [a0 + 15] = 0\n 27225: u8 [a0 + 14] = 0\n 27228: u8 [a0 + 13] = 0\n 27231: u8 [a0 + 12] = 0\n 27234: u8 [a0 + 11] = 0\n 27237: u8 [a0 + 10] = 0\n 27240: u8 [a0 + 9] = 0\n 27243: u8 [a0 + 8] = 0\n 27246: u8 [a0 + 7] = 0\n 27249: u8 [a0 + 6] = 0\n 27252: u8 [a0 + 5] = 0\n 27255: u8 [a0 + 4] = 0\n 27258: u8 [a0 + 3] = 0\n 27261: u8 [a0 + 2] = 0\n 27264: u8 [a0 + 1] = 0\n 27267: u8 [a0 + 0] = 0\n 27269: a0 = s1 + 0x80\n 27273: a1 = a0 <u s1\n 27276: a3 = u64 [sp + 0xa8]\n 27280: a2 = a3 + a1\n 27283: a3 = a2 <u a3\n 27286: a3 = a1 if a1 == 0\n 27289: s1 = u64 [sp + 0x88]\n 27293: a3 = a3 + s1\n 27296: a1 = a3 <u s1\n 27299: a4 = u64 [sp + 0x90]\n 27303: a4 = a4 + a1\n 27306: u64 [sp + 0xb8] = a2\n 27310: u64 [sp + 0xb0] = a0\n 27314: a0 = u64 [sp + 0x68]\n 27317: u64 [sp + 0xe8] = a0\n 27321: a0 = u64 [sp + 0x70]\n 27324: u64 [sp + 0xe0] = a0\n 27328: a0 = u64 [sp + 0x78]\n 27331: u64 [sp + 0xd8] = a0\n 27335: a0 = u64 [sp + 0x80]\n 27339: u64 [sp + 0xd0] = a0\n 27343: u64 [sp + 0xc0] = a3\n 27347: a0 = sp + 0xf0\n 27351: a1 = sp + 0xd0\n 27355: a2 = sp + 0xb0\n 27359: u64 [sp + 0xc8] = a4\n 27363: ra = 262, jump @323\n      : @340 [@dyn 131] (gas: 11)\n 27369: a1 = u64 [sp + 0x90]\n 27373: a1 = a1 | s1\n 27376: s1 = 0x100000000\n 27386: a0 = 0xffffffe0\n 27396: a2 = u64 [sp + 0xa0]\n 27400: a0 = a2 <u a0\n 27403: a2 = u64 [sp + 0xa8]\n 27407: a0 = 0 if a2 != 0\n 27409: u64 [sp + 0x90] = a1\n 27413: a0 = 0 if a1 != 0\n 27415: jump @347 if a0 == 0\n      : @341 (gas: 12)\n 27419: a0 = u64 [sp + 0x108]\n 27423: u64 [sp + 0x80] = a0\n 27427: a0 = u64 [sp + 0x100]\n 27431: u64 [sp + 0x88] = a0\n 27435: a0 = u64 [sp + 0xf8]\n 27439: u64 [sp + 0x78] = a0\n 27442: a0 = u64 [sp + 0xf0]\n 27446: u64 [sp + 0x70] = a0\n 27449: a0 = u64 [sp + 0x98]\n 27453: i32 a0 = a0 + 0x20\n 27456: a1 = 0x20\n 27459: ra = 264, jump @0\n      : @342 [@dyn 132] (gas: 76)\n 27465: a1 = u64 [sp + 0x48]\n 27468: a1 = reverse a1\n 27470: a2 = u64 [sp + 0x50]\n 27473: a2 = reverse a2\n 27475: a3 = u64 [sp + 0x58]\n 27478: a3 = reverse a3\n 27480: a4 = u64 [sp + 0x60]\n 27483: a4 = reverse a4\n 27485: a5 = a4 >> 0x38\n 27488: u8 [a0 + 0x1f] = a5\n 27491: a5 = a4 >> 0x30\n 27494: u8 [a0 + 0x1e] = a5\n 27497: a5 = a4 >> 0x28\n 27500: u8 [a0 + 0x1d] = a5\n 27503: a5 = a4 >> 0x20\n 27506: u8 [a0 + 0x1c] = a5\n 27509: a5 = a4 >> 0x18\n 27512: u8 [a0 + 0x1b] = a5\n 27515: a5 = a4 >> 0x10\n 27518: u8 [a0 + 0x1a] = a5\n 27521: a5 = a4 >> 0x8\n 27524: u8 [a0 + 0x19] = a5\n 27527: u8 [a0 + 0x18] = a4\n 27530: u8 [a0 + 0x10] = a3\n 27533: a4 = a3 >> 0x38\n 27536: u8 [a0 + 0x17] = a4\n 27539: a4 = a3 >> 0x30\n 27542: u8 [a0 + 0x16] = a4\n 27545: a4 = a3 >> 0x28\n 27548: u8 [a0 + 0x15] = a4\n 27551: a4 = a3 >> 0x20\n 27554: u8 [a0 + 0x14] = a4\n 27557: a4 = a3 >> 0x18\n 27560: u8 [a0 + 0x13] = a4\n 27563: a4 = a3 >> 0x10\n 27566: u8 [a0 + 0x12] = a4\n 27569: a3 = a3 >> 0x8\n 27572: u8 [a0 + 0x11] = a3\n 27575: u8 [a0 + 0x8] = a2\n 27578: a3 = a2 >> 0x38\n 27581: u8 [a0 + 0xf] = a3\n 27584: a3 = a2 >> 0x30\n 27587: u8 [a0 + 0xe] = a3\n 27590: a3 = a2 >> 0x28\n 27593: u8 [a0 + 0xd] = a3\n 27596: a3 = a2 >> 0x20\n 27599: u8 [a0 + 0xc] = a3\n 27602: a3 = a2 >> 0x18\n 27605: u8 [a0 + 0xb] = a3\n 27608: a3 = a2 >> 0x10\n 27611: u8 [a0 + 0xa] = a3\n 27614: a2 = a2 >> 0x8\n 27617: u8 [a0 + 0x9] = a2\n 27620: u8 [a0] = a1\n 27622: a2 = a1 >> 0x38\n 27625: u8 [a0 + 0x7] = a2\n 27628: a2 = a1 >> 0x30\n 27631: u8 [a0 + 0x6] = a2\n 27634: a2 = a1 >> 0x28\n 27637: u8 [a0 + 0x5] = a2\n 27640: a2 = a1 >> 0x20\n 27643: u8 [a0 + 0x4] = a2\n 27646: a2 = a1 >> 0x18\n 27649: u8 [a0 + 0x3] = a2\n 27652: a2 = a1 >> 0x10\n 27655: u8 [a0 + 0x2] = a2\n 27658: a1 = a1 >> 0x8\n 27661: a2 = s1 + 0xffffffffffffffc0\n 27664: a3 = u64 [sp + 0xa0]\n 27668: a2 = a3 <u a2\n 27671: a3 = u64 [sp + 0xa8]\n 27675: a2 = 0 if a3 != 0\n 27677: s1 = u64 [sp + 0x90]\n 27681: a2 = 0 if s1 != 0\n 27683: u8 [a0 + 0x1] = a1\n 27686: jump @347 if a2 == 0\n      : @343 (gas: 4)\n 27690: a0 = u64 [sp + 0x98]\n 27694: i32 a0 = a0 + 0x40\n 27697: a1 = 0x20\n 27700: ra = 266, jump @0\n      : @344 [@dyn 133] (gas: 75)\n 27706: a1 = u64 [sp + 0x20]\n 27709: a1 = reverse a1\n 27711: a2 = u64 [sp + 0x28]\n 27714: a2 = reverse a2\n 27716: a3 = u64 [sp + 0x30]\n 27719: a3 = reverse a3\n 27721: a4 = u64 [sp + 0x38]\n 27724: a4 = reverse a4\n 27726: a5 = a4 >> 0x38\n 27729: u8 [a0 + 0x1f] = a5\n 27732: a5 = a4 >> 0x30\n 27735: u8 [a0 + 0x1e] = a5\n 27738: a5 = a4 >> 0x28\n 27741: u8 [a0 + 0x1d] = a5\n 27744: a5 = a4 >> 0x20\n 27747: u8 [a0 + 0x1c] = a5\n 27750: a5 = a4 >> 0x18\n 27753: u8 [a0 + 0x1b] = a5\n 27756: a5 = a4 >> 0x10\n 27759: u8 [a0 + 0x1a] = a5\n 27762: a5 = a4 >> 0x8\n 27765: u8 [a0 + 0x19] = a5\n 27768: u8 [a0 + 0x18] = a4\n 27771: u8 [a0 + 0x10] = a3\n 27774: a4 = a3 >> 0x38\n 27777: u8 [a0 + 0x17] = a4\n 27780: a4 = a3 >> 0x30\n 27783: u8 [a0 + 0x16] = a4\n 27786: a4 = a3 >> 0x28\n 27789: u8 [a0 + 0x15] = a4\n 27792: a4 = a3 >> 0x20\n 27795: u8 [a0 + 0x14] = a4\n 27798: a4 = a3 >> 0x18\n 27801: u8 [a0 + 0x13] = a4\n 27804: a4 = a3 >> 0x10\n 27807: u8 [a0 + 0x12] = a4\n 27810: a3 = a3 >> 0x8\n 27813: u8 [a0 + 0x11] = a3\n 27816: u8 [a0 + 0x8] = a2\n 27819: a3 = a2 >> 0x38\n 27822: u8 [a0 + 0xf] = a3\n 27825: a3 = a2 >> 0x30\n 27828: u8 [a0 + 0xe] = a3\n 27831: a3 = a2 >> 0x28\n 27834: u8 [a0 + 0xd] = a3\n 27837: a3 = a2 >> 0x20\n 27840: u8 [a0 + 0xc] = a3\n 27843: a3 = a2 >> 0x18\n 27846: u8 [a0 + 0xb] = a3\n 27849: a3 = a2 >> 0x10\n 27852: u8 [a0 + 0xa] = a3\n 27855: a2 = a2 >> 0x8\n 27858: u8 [a0 + 0x9] = a2\n 27861: u8 [a0] = a1\n 27863: a2 = a1 >> 0x38\n 27866: u8 [a0 + 0x7] = a2\n 27869: a2 = a1 >> 0x30\n 27872: u8 [a0 + 0x6] = a2\n 27875: a2 = a1 >> 0x28\n 27878: u8 [a0 + 0x5] = a2\n 27881: a2 = a1 >> 0x20\n 27884: u8 [a0 + 0x4] = a2\n 27887: a2 = a1 >> 0x18\n 27890: u8 [a0 + 0x3] = a2\n 27893: a2 = a1 >> 0x10\n 27896: u8 [a0 + 0x2] = a2\n 27899: a1 = a1 >> 0x8\n 27902: a2 = 0xffffffa0\n 27912: a3 = u64 [sp + 0xa0]\n 27916: a2 = a3 <u a2\n 27919: a3 = u64 [sp + 0xa8]\n 27923: a2 = 0 if a3 != 0\n 27925: a2 = 0 if s1 != 0\n 27927: u8 [a0 + 0x1] = a1\n 27930: jump @347 if a2 == 0\n      : @345 (gas: 7)\n 27934: a0 = u64 [sp + 0x8]\n 27937: a0 = a0 << 0x20\n 27940: s1 = a0 >> 0x20\n 27943: a0 = u64 [sp + 0x98]\n 27947: i32 a0 = a0 + 0x60\n 27950: a1 = 0x20\n 27953: ra = 268, jump @0\n      : @346 [@dyn 134] (gas: 70)\n 27959: a1 = reverse s1\n 27961: a2 = u64 [sp + 0x10]\n 27964: a2 = reverse a2\n 27966: a3 = u64 [sp + 0x18]\n 27969: a3 = reverse a3\n 27971: a4 = a3 >> 0x38\n 27974: u8 [a0 + 0x1f] = a4\n 27977: a4 = a3 >> 0x30\n 27980: u8 [a0 + 0x1e] = a4\n 27983: a4 = a3 >> 0x28\n 27986: u8 [a0 + 0x1d] = a4\n 27989: a4 = a3 >> 0x20\n 27992: u8 [a0 + 0x1c] = a4\n 27995: a4 = a3 >> 0x18\n 27998: u8 [a0 + 0x1b] = a4\n 28001: a4 = a3 >> 0x10\n 28004: u8 [a0 + 0x1a] = a4\n 28007: a4 = a3 >> 0x8\n 28010: u8 [a0 + 0x19] = a4\n 28013: u8 [a0 + 0x18] = a3\n 28016: u8 [a0 + 0x10] = a2\n 28019: u8 [a0 + 11] = 0\n 28022: u8 [a0 + 10] = 0\n 28025: u8 [a0 + 9] = 0\n 28028: u8 [a0 + 7] = 0\n 28031: u8 [a0 + 6] = 0\n 28034: u8 [a0 + 5] = 0\n 28037: u8 [a0 + 4] = 0\n 28040: u8 [a0 + 3] = 0\n 28043: u8 [a0 + 2] = 0\n 28046: u8 [a0 + 1] = 0\n 28049: u8 [a0 + 0] = 0\n 28051: a3 = a2 >> 0x38\n 28054: u8 [a0 + 0x17] = a3\n 28057: a3 = a2 >> 0x30\n 28060: u8 [a0 + 0x16] = a3\n 28063: a3 = a2 >> 0x28\n 28066: u8 [a0 + 0x15] = a3\n 28069: a3 = a2 >> 0x20\n 28072: u8 [a0 + 0x14] = a3\n 28075: a3 = a2 >> 0x18\n 28078: u8 [a0 + 0x13] = a3\n 28081: a3 = a2 >> 0x10\n 28084: u8 [a0 + 0x12] = a3\n 28087: a2 = a2 >> 0x8\n 28090: u8 [a0 + 0x11] = a2\n 28093: u8 [a0 + 0x8] = a1\n 28096: a2 = a1 >> 0x38\n 28099: u8 [a0 + 0xf] = a2\n 28102: a2 = a1 >> 0x30\n 28105: u8 [a0 + 0xe] = a2\n 28108: a2 = a1 >> 0x28\n 28111: u8 [a0 + 0xd] = a2\n 28114: a1 = a1 >> 0x20\n 28117: u8 [a0 + 0xc] = a1\n 28120: a0 = u64 [sp + 0x40]\n 28123: a1 = u64 [sp + 0x70]\n 28126: u64 [a0] = a1\n 28128: a1 = u64 [sp + 0x80]\n 28132: u64 [a0 + 0x18] = a1\n 28135: a1 = u64 [sp + 0x78]\n 28138: u64 [a0 + 0x8] = a1\n 28141: a1 = u64 [sp + 0x88]\n 28145: u64 [a0 + 0x10] = a1\n 28148: sp = s0 + 0xfffffffffffffed0\n 28152: ra = u64 [sp + 0x128]\n 28156: s0 = u64 [sp + 0x120]\n 28160: s1 = u64 [sp + 0x118]\n 28164: sp = sp + 0x130\n 28168: ret\n      : @347 (gas: 1)\n 28170: trap\n      : @348 (gas: 33)\n 28171: sp = sp + 0xffffffffffffffa0\n 28174: u64 [sp + 0x58] = ra\n 28177: u64 [sp + 0x50] = s0\n 28180: u64 [sp + 0x48] = s1\n 28183: s0 = sp + 0x60\n 28186: sp = sp & 0xfffffffffffffff0\n 28189: a2 = u64 [a1 + 0x10]\n 28192: a5 = u64 [a1 + 0x8]\n 28195: a4 = u64 [a1]\n 28197: a1 = u64 [a1 + 0x18]\n 28200: t0 = a2 << 0x3f\n 28203: a3 = a5 >> 0x1\n 28206: t0 = a3 | t0\n 28209: a3 = a1 << 0x3f\n 28212: a2 = a2 >> 0x1\n 28215: a3 = a3 | a2\n 28218: a5 = a5 << 0x3f\n 28221: a2 = a4 >> 0x1\n 28224: a5 = a5 | a2\n 28227: t1 = a1 >> 0x1\n 28230: a4 = a4 & 0x1\n 28233: a1 = -a4\n 28235: s1 = a4 <u 0x1\n 28238: a2 = a5 & 0x7f\n 28241: t2 = a1 & a3\n 28244: a3 = a1 & t0\n 28247: a2 = a5 if a4 != 0\n 28250: a4 = a1 & t1\n 28253: a1 = a2 <u 0x20\n 28256: a1 = 0 if a3 != 0\n 28258: a5 = t2 | a4\n 28261: a1 = 0 if a5 != 0\n 28263: jump @350 if s1 != a1\n      : @349 (gas: 10)\n 28266: u64 [a0] = a2\n 28268: u64 [a0 + 0x8] = a3\n 28271: u64 [a0 + 0x10] = t2\n 28274: u64 [a0 + 0x18] = a4\n 28277: sp = s0 + 0xffffffffffffffa0\n 28280: ra = u64 [sp + 0x58]\n 28283: s0 = u64 [sp + 0x50]\n 28286: s1 = u64 [sp + 0x48]\n 28289: sp = sp + 0x60\n 28292: ret\n      : @350 (gas: 8)\n 28294: u64 [sp + 48] = 0\n 28297: u64 [sp + 40] = 0\n 28300: u64 [sp + 32] = 0\n 28303: a0 = 0x4e487b7100000000\n 28313: a1 = sp + 0x20\n 28316: u64 [sp + 0x38] = a0\n 28319: a0 = 0\n 28321: ra = 270, jump @23\n      : @351 [@dyn 135] (gas: 7)\n 28327: u64 [sp + 24] = 0\n 28330: u64 [sp + 16] = 0\n 28333: u64 [sp + 0] = 0x22\n 28336: a0 = 0x4\n 28339: a1 = sp\n 28341: u64 [sp + 8] = 0\n 28344: ra = 272, jump @23\n      : @352 [@dyn 136] (gas: 3)\n 28350: a1 = 0x24\n 28353: a0 = 0\n 28355: ra = 274, jump @0\n      : @353 [@dyn 137] (gas: 6)\n 28361: i32 a1 = a0 + 0\n 28363: a0 = 0x1\n 28366: a2 = 0x24\n 28369: ra = 0x114\n 28373: ecalli 7 // 'seal_return'\n 28375: fallthrough\n      : @354 [@dyn 138] (gas: 19)\n 28376: sp = sp + 0xfffffffffffffda0\n 28380: u64 [sp + 0x258] = ra\n 28384: u64 [sp + 0x250] = s0\n 28388: u64 [sp + 0x248] = s1\n 28392: s0 = sp + 0x260\n 28396: sp = sp & 0xffffffffffffffe0\n 28399: s1 = sp\n 28401: a2 = u64 [a1]\n 28403: u64 [s1 + 0x178] = a2\n 28407: a2 = u64 [a1 + 0x8]\n 28410: u64 [s1 + 0x170] = a2\n 28414: a2 = u64 [a1 + 0x10]\n 28417: u64 [s1 + 0x168] = a2\n 28421: a1 = u64 [a1 + 0x18]\n 28424: u64 [s1 + 0x160] = a1\n 28428: u64 [s1 + 0x10] = a0\n 28431: a0 = 0x40\n 28434: a1 = 0x20\n 28437: ra = 278, jump @0\n      : @355 [@dyn 139] (gas: 84)\n 28443: a1 = u8 [a0 + 0x18]\n 28446: u64 [s1 + 0x60] = a1\n 28449: a1 = u8 [a0 + 0x19]\n 28452: u64 [s1 + 0x40] = a1\n 28455: a1 = u8 [a0 + 0x1a]\n 28458: u64 [s1 + 0x50] = a1\n 28461: a1 = u8 [a0 + 0x1b]\n 28464: u64 [s1 + 0x48] = a1\n 28467: a1 = u8 [a0 + 0x1c]\n 28470: u64 [s1 + 0x78] = a1\n 28473: a1 = u8 [a0 + 0x1d]\n 28476: u64 [s1 + 0x58] = a1\n 28479: a1 = u8 [a0 + 0x1e]\n 28482: u64 [s1 + 0x70] = a1\n 28485: a1 = u8 [a0 + 0x1f]\n 28488: u64 [s1 + 0x68] = a1\n 28491: a1 = u8 [a0 + 0x10]\n 28494: u64 [s1 + 0xa0] = a1\n 28498: a1 = u8 [a0 + 0x11]\n 28501: u64 [s1 + 0x80] = a1\n 28505: a1 = u8 [a0 + 0x12]\n 28508: u64 [s1 + 0x90] = a1\n 28512: a1 = u8 [a0 + 0x13]\n 28515: u64 [s1 + 0x88] = a1\n 28519: a1 = u8 [a0 + 0x14]\n 28522: u64 [s1 + 0xb8] = a1\n 28526: a1 = u8 [a0 + 0x15]\n 28529: u64 [s1 + 0x98] = a1\n 28533: a1 = u8 [a0 + 0x16]\n 28536: u64 [s1 + 0xb0] = a1\n 28540: a1 = u8 [a0 + 0x17]\n 28543: u64 [s1 + 0xa8] = a1\n 28547: a1 = u8 [a0 + 0x8]\n 28550: u64 [s1 + 0xe0] = a1\n 28554: a1 = u8 [a0 + 0x9]\n 28557: u64 [s1 + 0xc0] = a1\n 28561: a1 = u8 [a0 + 0xa]\n 28564: u64 [s1 + 0xd0] = a1\n 28568: a1 = u8 [a0 + 0xb]\n 28571: u64 [s1 + 0xc8] = a1\n 28575: a1 = u8 [a0 + 0xc]\n 28578: u64 [s1 + 0xf8] = a1\n 28582: a1 = u8 [a0 + 0xd]\n 28585: u64 [s1 + 0xd8] = a1\n 28589: a1 = u8 [a0 + 0xe]\n 28592: u64 [s1 + 0xf0] = a1\n 28596: a1 = u8 [a0 + 0xf]\n 28599: u64 [s1 + 0xe8] = a1\n 28603: a1 = u8 [a0]\n 28605: u64 [s1 + 0x140] = a1\n 28609: a1 = u8 [a0 + 0x1]\n 28612: u64 [s1 + 0x120] = a1\n 28616: a1 = u8 [a0 + 0x2]\n 28619: u64 [s1 + 0x130] = a1\n 28623: a1 = u8 [a0 + 0x3]\n 28626: u64 [s1 + 0x128] = a1\n 28630: a1 = u8 [a0 + 0x4]\n 28633: u64 [s1 + 0x158] = a1\n 28637: a1 = u8 [a0 + 0x5]\n 28640: u64 [s1 + 0x138] = a1\n 28644: a1 = u8 [a0 + 0x6]\n 28647: u64 [s1 + 0x150] = a1\n 28651: a0 = u8 [a0 + 0x7]\n 28654: u64 [s1 + 0x148] = a0\n 28658: u32 [s1 + 576] = 0x20\n 28663: a0 = u64 [s1 + 0x160]\n 28667: u64 [s1 + 0x218] = a0\n 28671: a0 = u64 [s1 + 0x168]\n 28675: u64 [s1 + 0x210] = a0\n 28679: a0 = u64 [s1 + 0x170]\n 28683: u64 [s1 + 0x208] = a0\n 28687: a0 = u64 [s1 + 0x178]\n 28691: u64 [s1 + 0x200] = a0\n 28695: u64 [s1 + 568] = 0\n 28699: u64 [s1 + 560] = 0\n 28703: u64 [s1 + 552] = 0\n 28707: u64 [s1 + 544] = 0\n 28711: i32 a1 = s1 + 0x200\n 28715: i32 a3 = s1 + 0x220\n 28719: i32 a4 = s1 + 0x240\n 28723: a2 = 0xffffffffffffffff\n 28726: a0 = 0\n 28728: ecalli 5 // 'get_storage'\n 28730: fallthrough\n      : @356 (gas: 32)\n 28731: t1 = u64 [s1 + 0x230]\n 28735: t2 = u64 [s1 + 0x228]\n 28739: t0 = u64 [s1 + 0x238]\n 28743: a5 = u64 [s1 + 0x220]\n 28747: a0 = t1 << 0x3f\n 28750: a1 = t2 >> 0x1\n 28753: a0 = a0 | a1\n 28756: a1 = t0 << 0x3f\n 28759: a2 = t1 >> 0x1\n 28762: a1 = a1 | a2\n 28765: a2 = t2 << 0x3f\n 28768: a3 = a5 >> 0x1\n 28771: a4 = a3 | a2\n 28774: a2 = t0 >> 0x1\n 28777: u64 [s1 + 0x18] = a5\n 28780: a5 = a5 & 0x1\n 28783: a3 = -a5\n 28785: ra = a3 & a1\n 28788: a1 = a3 & a0\n 28791: a2 = a2 & a3\n 28794: a3 = a4 & 0x7f\n 28797: a4 = a3 if a5 == 0\n 28800: u64 [s1 + 0x118] = a4\n 28804: a0 = a4 <u 0x20\n 28807: u64 [s1 + 0x108] = a1\n 28811: a0 = 0 if a1 != 0\n 28813: u64 [s1 + 0x110] = ra\n 28817: u64 [s1 + 0x100] = a2\n 28821: a1 = ra | a2\n 28824: a0 = 0 if a1 != 0\n 28826: a1 = a5 <u 0x1\n 28829: jump @380 if a1 != a0\n      : @357 (gas: 108)\n 28833: u64 [s1 + 0x38] = a5\n 28836: u64 [s1 + 0x8] = a3\n 28839: u64 [s1 + 0x20] = t2\n 28842: u64 [s1 + 0x28] = t1\n 28845: u64 [s1 + 0x30] = t0\n 28848: a0 = u64 [s1 + 0x40]\n 28851: a0 = a0 << 0x8\n 28854: a1 = u64 [s1 + 0x60]\n 28857: a0 = a0 | a1\n 28860: a1 = u64 [s1 + 0x50]\n 28863: a1 = a1 << 0x10\n 28866: a2 = u64 [s1 + 0x48]\n 28869: a2 = a2 << 0x18\n 28872: a1 = a1 | a2\n 28875: a0 = a0 | a1\n 28878: a1 = u64 [s1 + 0x58]\n 28881: a1 = a1 << 0x8\n 28884: a2 = u64 [s1 + 0x78]\n 28887: a1 = a1 | a2\n 28890: a2 = u64 [s1 + 0x70]\n 28893: a2 = a2 << 0x10\n 28896: a3 = u64 [s1 + 0x68]\n 28899: a3 = a3 << 0x18\n 28902: a2 = a2 | a3\n 28905: a1 = a1 | a2\n 28908: a1 = a1 << 0x20\n 28911: t0 = a1 | a0\n 28914: a1 = u64 [s1 + 0x80]\n 28918: a1 = a1 << 0x8\n 28921: a0 = u64 [s1 + 0xa0]\n 28925: a1 = a1 | a0\n 28928: a2 = u64 [s1 + 0x90]\n 28932: a2 = a2 << 0x10\n 28935: a3 = u64 [s1 + 0x88]\n 28939: a3 = a3 << 0x18\n 28942: a2 = a2 | a3\n 28945: a1 = a1 | a2\n 28948: a2 = u64 [s1 + 0x98]\n 28952: a2 = a2 << 0x8\n 28955: a0 = u64 [s1 + 0xb8]\n 28959: a2 = a2 | a0\n 28962: a3 = u64 [s1 + 0xb0]\n 28966: a3 = a3 << 0x10\n 28969: a4 = u64 [s1 + 0xa8]\n 28973: a4 = a4 << 0x18\n 28976: a3 = a3 | a4\n 28979: a2 = a2 | a3\n 28982: a2 = a2 << 0x20\n 28985: a1 = a1 | a2\n 28988: a2 = u64 [s1 + 0xc0]\n 28992: a2 = a2 << 0x8\n 28995: a0 = u64 [s1 + 0xe0]\n 28999: a2 = a2 | a0\n 29002: a3 = u64 [s1 + 0xd0]\n 29006: a3 = a3 << 0x10\n 29009: a4 = u64 [s1 + 0xc8]\n 29013: a4 = a4 << 0x18\n 29016: a3 = a3 | a4\n 29019: a2 = a2 | a3\n 29022: a3 = u64 [s1 + 0xd8]\n 29026: a3 = a3 << 0x8\n 29029: a0 = u64 [s1 + 0xf8]\n 29033: a3 = a3 | a0\n 29036: a4 = u64 [s1 + 0xf0]\n 29040: a4 = a4 << 0x10\n 29043: a5 = u64 [s1 + 0xe8]\n 29047: a5 = a5 << 0x18\n 29050: a4 = a4 | a5\n 29053: a3 = a3 | a4\n 29056: a3 = a3 << 0x20\n 29059: a2 = a2 | a3\n 29062: a3 = u64 [s1 + 0x120]\n 29066: a3 = a3 << 0x8\n 29069: a0 = u64 [s1 + 0x140]\n 29073: a3 = a3 | a0\n 29076: a4 = u64 [s1 + 0x130]\n 29080: a4 = a4 << 0x10\n 29083: a5 = u64 [s1 + 0x128]\n 29087: a5 = a5 << 0x18\n 29090: a4 = a4 | a5\n 29093: a3 = a3 | a4\n 29096: a4 = u64 [s1 + 0x138]\n 29100: a4 = a4 << 0x8\n 29103: a0 = u64 [s1 + 0x158]\n 29107: a4 = a4 | a0\n 29110: a5 = u64 [s1 + 0x150]\n 29114: a5 = a5 << 0x10\n 29117: a0 = u64 [s1 + 0x148]\n 29121: a0 = a0 << 0x18\n 29124: a0 = a0 | a5\n 29127: a0 = a0 | a4\n 29130: a0 = a0 << 0x20\n 29133: a0 = a0 | a3\n 29136: a3 = reverse a0\n 29138: a2 = reverse a2\n 29140: a1 = reverse a1\n 29142: a4 = reverse t0\n 29144: a0 = a4 | a2\n 29147: u64 [s1 + 0xd0] = a3\n 29151: u64 [s1 + 0xc8] = a1\n 29155: a1 = a1 | a3\n 29158: a0 = a0 | a1\n 29161: a0 = a0 >> 0x20\n 29164: u64 [s1 + 0xd8] = a2\n 29168: a1 = a1 | a2\n 29171: a1 = a1 << 0x20\n 29174: a0 = a0 | a1\n 29177: jump @377 if a0 != 0\n      : @358 (gas: 5)\n 29181: i32 a0 = a4 + 0\n 29183: a1 = 0x20\n 29186: u64 [s1 + 0x158] = a0\n 29190: u64 [s1 + 0xc0] = a4\n 29194: ra = 280, jump @0\n      : @359 [@dyn 140] (gas: 70)\n 29200: a1 = u64 [s1 + 0x118]\n 29204: a1 = reverse a1\n 29206: a2 = a1 >> 0x38\n 29209: u8 [a0 + 0x1f] = a2\n 29212: a2 = a1 >> 0x30\n 29215: u8 [a0 + 0x1e] = a2\n 29218: a2 = a1 >> 0x28\n 29221: u8 [a0 + 0x1d] = a2\n 29224: a2 = a1 >> 0x20\n 29227: u8 [a0 + 0x1c] = a2\n 29230: a2 = a1 >> 0x18\n 29233: u8 [a0 + 0x1b] = a2\n 29236: a2 = a1 >> 0x10\n 29239: u8 [a0 + 0x1a] = a2\n 29242: a2 = a1 >> 0x8\n 29245: u8 [a0 + 0x19] = a2\n 29248: a2 = u64 [s1 + 0x108]\n 29252: a2 = reverse a2\n 29254: u8 [a0 + 0x18] = a1\n 29257: a1 = a2 >> 0x38\n 29260: u8 [a0 + 0x17] = a1\n 29263: a1 = a2 >> 0x30\n 29266: u8 [a0 + 0x16] = a1\n 29269: a1 = a2 >> 0x28\n 29272: u8 [a0 + 0x15] = a1\n 29275: a1 = a2 >> 0x20\n 29278: u8 [a0 + 0x14] = a1\n 29281: a1 = a2 >> 0x18\n 29284: u8 [a0 + 0x13] = a1\n 29287: a1 = a2 >> 0x10\n 29290: u8 [a0 + 0x12] = a1\n 29293: a1 = u64 [s1 + 0x110]\n 29297: a1 = reverse a1\n 29299: u8 [a0 + 0x10] = a2\n 29302: a2 = a2 >> 0x8\n 29305: u8 [a0 + 0x11] = a2\n 29308: a2 = a1 >> 0x38\n 29311: u8 [a0 + 0xf] = a2\n 29314: a2 = a1 >> 0x30\n 29317: u8 [a0 + 0xe] = a2\n 29320: a2 = a1 >> 0x28\n 29323: u8 [a0 + 0xd] = a2\n 29326: a2 = a1 >> 0x20\n 29329: u8 [a0 + 0xc] = a2\n 29332: a2 = a1 >> 0x18\n 29335: u8 [a0 + 0xb] = a2\n 29338: a2 = a1 >> 0x10\n 29341: u8 [a0 + 0xa] = a2\n 29344: a2 = u64 [s1 + 0x100]\n 29348: a2 = reverse a2\n 29350: u8 [a0 + 0x8] = a1\n 29353: a1 = a1 >> 0x8\n 29356: u8 [a0 + 0x9] = a1\n 29359: a1 = a2 >> 0x38\n 29362: u8 [a0 + 0x7] = a1\n 29365: a1 = a2 >> 0x30\n 29368: u8 [a0 + 0x6] = a1\n 29371: a1 = a2 >> 0x28\n 29374: u8 [a0 + 0x5] = a1\n 29377: a1 = a2 >> 0x20\n 29380: u8 [a0 + 0x4] = a1\n 29383: a1 = a2 >> 0x18\n 29386: u8 [a0 + 0x3] = a1\n 29389: a1 = a2 >> 0x10\n 29392: u8 [a0 + 0x2] = a1\n 29395: u8 [a0] = a2\n 29397: a2 = a2 >> 0x8\n 29400: u8 [a0 + 0x1] = a2\n 29403: a0 = u64 [s1 + 0x38]\n 29406: jump @363 if a0 != 0\n      : @360 (gas: 10)\n 29410: a0 = u64 [s1 + 0xd8]\n 29414: a1 = u64 [s1 + 0xd0]\n 29418: a0 = a0 | a1\n 29421: a1 = 0xffffffe0\n 29431: a2 = u64 [s1 + 0xc0]\n 29435: a1 = a2 <u a1\n 29438: a2 = u64 [s1 + 0xc8]\n 29442: a1 = 0 if a2 != 0\n 29444: a1 = 0 if a0 != 0\n 29446: jump @377 if a1 == 0\n      : @361 (gas: 7)\n 29450: a0 = u64 [s1 + 0x18]\n 29453: a0 = a0 & 0xffffffffffffff00\n 29457: u64 [s1 + 0x170] = a0\n 29461: a0 = u64 [s1 + 0x158]\n 29465: i32 a0 = a0 + 0x20\n 29468: a1 = 0x20\n 29471: ra = 282, jump @0\n      : @362 [@dyn 141] (gas: 74)\n 29477: t0 = 0\n 29479: t1 = 0\n 29481: u64 [s1 + 376] = 0\n 29485: a1 = u64 [s1 + 0x170]\n 29489: a3 = reverse a1\n 29491: a4 = a3 >> 0x30\n 29494: u8 [a0 + 0x1e] = a4\n 29497: a4 = a3 >> 0x28\n 29500: u8 [a0 + 0x1d] = a4\n 29503: a4 = a3 >> 0x20\n 29506: u8 [a0 + 0x1c] = a4\n 29509: a4 = a3 >> 0x18\n 29512: u8 [a0 + 0x1b] = a4\n 29515: a4 = a3 >> 0x10\n 29518: u8 [a0 + 0x1a] = a4\n 29521: a1 = u64 [s1 + 0x20]\n 29524: a4 = reverse a1\n 29526: u8 [a0 + 0x18] = a3\n 29529: a3 = a3 >> 0x8\n 29532: u8 [a0 + 0x19] = a3\n 29535: a3 = a4 >> 0x38\n 29538: u8 [a0 + 0x17] = a3\n 29541: a3 = a4 >> 0x30\n 29544: u8 [a0 + 0x16] = a3\n 29547: a3 = a4 >> 0x28\n 29550: u8 [a0 + 0x15] = a3\n 29553: a3 = a4 >> 0x20\n 29556: u8 [a0 + 0x14] = a3\n 29559: a3 = a4 >> 0x18\n 29562: u8 [a0 + 0x13] = a3\n 29565: a3 = a4 >> 0x10\n 29568: u8 [a0 + 0x12] = a3\n 29571: a1 = u64 [s1 + 0x28]\n 29574: a3 = reverse a1\n 29576: u8 [a0 + 0x10] = a4\n 29579: a4 = a4 >> 0x8\n 29582: u8 [a0 + 0x11] = a4\n 29585: a4 = a3 >> 0x38\n 29588: u8 [a0 + 0xf] = a4\n 29591: a4 = a3 >> 0x30\n 29594: u8 [a0 + 0xe] = a4\n 29597: a4 = a3 >> 0x28\n 29600: u8 [a0 + 0xd] = a4\n 29603: a4 = a3 >> 0x20\n 29606: u8 [a0 + 0xc] = a4\n 29609: a4 = a3 >> 0x18\n 29612: u8 [a0 + 0xb] = a4\n 29615: a4 = a3 >> 0x10\n 29618: u8 [a0 + 0xa] = a4\n 29621: a1 = u64 [s1 + 0x30]\n 29624: a4 = reverse a1\n 29626: u8 [a0 + 31] = 0\n 29629: u8 [a0 + 0x8] = a3\n 29632: a3 = a3 >> 0x8\n 29635: u8 [a0 + 0x9] = a3\n 29638: u8 [a0] = a4\n 29640: a3 = a4 >> 0x38\n 29643: u8 [a0 + 0x7] = a3\n 29646: a3 = a4 >> 0x30\n 29649: u8 [a0 + 0x6] = a3\n 29652: a3 = a4 >> 0x28\n 29655: u8 [a0 + 0x5] = a3\n 29658: a3 = a4 >> 0x20\n 29661: u8 [a0 + 0x4] = a3\n 29664: a3 = a4 >> 0x18\n 29667: u8 [a0 + 0x3] = a3\n 29670: a3 = a4 >> 0x10\n 29673: u8 [a0 + 0x2] = a3\n 29676: a4 = a4 >> 0x8\n 29679: u8 [a0 + 0x1] = a4\n 29682: a0 = u64 [s1 + 0x8]\n 29685: a0 = a0 >u 0\n 29687: ra = a0 << 0x5\n 29690: jump @373\n      : @363 (gas: 3)\n 29693: a1 = 0x20\n 29696: a0 = 0\n 29698: ra = 284, jump @0\n      : @364 [@dyn 142] (gas: 71)\n 29704: a1 = u64 [s1 + 0x160]\n 29708: a1 = reverse a1\n 29710: a2 = u64 [s1 + 0x168]\n 29714: a2 = reverse a2\n 29716: a3 = u64 [s1 + 0x170]\n 29720: a3 = reverse a3\n 29722: a4 = u64 [s1 + 0x178]\n 29726: a4 = reverse a4\n 29728: u8 [a0 + 0x18] = a4\n 29731: a5 = a4 >> 0x38\n 29734: u8 [a0 + 0x1f] = a5\n 29737: a5 = a4 >> 0x30\n 29740: u8 [a0 + 0x1e] = a5\n 29743: a5 = a4 >> 0x28\n 29746: u8 [a0 + 0x1d] = a5\n 29749: a5 = a4 >> 0x20\n 29752: u8 [a0 + 0x1c] = a5\n 29755: a5 = a4 >> 0x18\n 29758: u8 [a0 + 0x1b] = a5\n 29761: a5 = a4 >> 0x10\n 29764: u8 [a0 + 0x1a] = a5\n 29767: a4 = a4 >> 0x8\n 29770: u8 [a0 + 0x19] = a4\n 29773: u8 [a0 + 0x10] = a3\n 29776: a4 = a3 >> 0x38\n 29779: u8 [a0 + 0x17] = a4\n 29782: a4 = a3 >> 0x30\n 29785: u8 [a0 + 0x16] = a4\n 29788: a4 = a3 >> 0x28\n 29791: u8 [a0 + 0x15] = a4\n 29794: a4 = a3 >> 0x20\n 29797: u8 [a0 + 0x14] = a4\n 29800: a4 = a3 >> 0x18\n 29803: u8 [a0 + 0x13] = a4\n 29806: a4 = a3 >> 0x10\n 29809: u8 [a0 + 0x12] = a4\n 29812: a3 = a3 >> 0x8\n 29815: u8 [a0 + 0x11] = a3\n 29818: u8 [a0 + 0x8] = a2\n 29821: a3 = a2 >> 0x38\n 29824: u8 [a0 + 0xf] = a3\n 29827: a3 = a2 >> 0x30\n 29830: u8 [a0 + 0xe] = a3\n 29833: a3 = a2 >> 0x28\n 29836: u8 [a0 + 0xd] = a3\n 29839: a3 = a2 >> 0x20\n 29842: u8 [a0 + 0xc] = a3\n 29845: a3 = a2 >> 0x18\n 29848: u8 [a0 + 0xb] = a3\n 29851: a3 = a2 >> 0x10\n 29854: u8 [a0 + 0xa] = a3\n 29857: a2 = a2 >> 0x8\n 29860: u8 [a0 + 0x9] = a2\n 29863: u8 [a0] = a1\n 29865: a2 = a1 >> 0x38\n 29868: u8 [a0 + 0x7] = a2\n 29871: a2 = a1 >> 0x30\n 29874: u8 [a0 + 0x6] = a2\n 29877: a2 = a1 >> 0x28\n 29880: u8 [a0 + 0x5] = a2\n 29883: a2 = a1 >> 0x20\n 29886: u8 [a0 + 0x4] = a2\n 29889: a2 = a1 >> 0x18\n 29892: u8 [a0 + 0x3] = a2\n 29895: a2 = a1 >> 0x10\n 29898: u8 [a0 + 0x2] = a2\n 29901: a1 = a1 >> 0x8\n 29904: u8 [a0 + 0x1] = a1\n 29907: a1 = 0x20\n 29910: a0 = 0\n 29912: ra = 286, jump @0\n      : @365 [@dyn 143] (gas: 9)\n 29918: a1 = sp + 0xffffffffffffffe0\n 29921: a1 = a1 & 0xffffffffffffffe0\n 29924: sp = a1\n 29926: i32 a0 = a0 + 0\n 29928: u64 [s1 + 0x158] = a1\n 29932: i32 a2 = a1 + 0\n 29934: a1 = 0x20\n 29937: ecalli 6 // 'hash_keccak_256'\n 29939: fallthrough\n      : @366 (gas: 9)\n 29940: a0 = u64 [s1 + 0x18]\n 29943: a0 = a0 <u 0x2\n 29946: a1 = u64 [s1 + 0x20]\n 29949: a0 = 0 if a1 != 0\n 29951: a1 = u64 [s1 + 0x30]\n 29954: a2 = u64 [s1 + 0x28]\n 29957: a1 = a1 | a2\n 29960: a0 = 0 if a1 != 0\n 29962: jump @368 if a0 == 0\n      : @367 (gas: 5)\n 29965: ra = 0\n 29967: t0 = 0\n 29969: t1 = 0\n 29971: u64 [s1 + 376] = 0\n 29975: jump @373\n      : @368 (gas: 30)\n 29978: u64 [s1 + 360] = 0\n 29982: u64 [s1 + 352] = 0\n 29986: u64 [s1 + 368] = 0\n 29990: u64 [s1 + 376] = 0\n 29994: a0 = u64 [s1 + 0x158]\n 29998: a4 = u64 [a0]\n 30000: a1 = u64 [s1 + 0xc0]\n 30004: a2 = a1 + 0x20\n 30007: u64 [s1 + 0xf8] = a2\n 30011: a1 = a2 <u a1\n 30014: a2 = u64 [s1 + 0xc8]\n 30018: a3 = a2 + a1\n 30021: u64 [s1 + 0xf0] = a3\n 30025: a3 = a3 <u a2\n 30028: a3 = a1 if a1 == 0\n 30031: a1 = u64 [a0 + 0x8]\n 30034: a2 = u64 [a0 + 0x10]\n 30037: a0 = u64 [a0 + 0x18]\n 30040: a5 = reverse a4\n 30042: a4 = reverse a1\n 30044: a2 = reverse a2\n 30046: t2 = reverse a0\n 30048: a0 = u64 [s1 + 0xd8]\n 30052: a3 = a3 + a0\n 30055: u64 [s1 + 0xe8] = a3\n 30059: a0 = a3 <u a0\n 30062: a1 = u64 [s1 + 0xd0]\n 30066: a0 = a0 + a1\n 30069: u64 [s1 + 0xe0] = a0\n 30073: fallthrough\n      : @369 (gas: 20)\n 30074: u64 [s1 + 0x140] = a4\n 30078: u64 [s1 + 0x210] = a4\n 30082: u64 [s1 + 0x150] = a2\n 30086: u64 [s1 + 0x208] = a2\n 30090: u64 [s1 + 0x148] = t2\n 30094: u64 [s1 + 0x200] = t2\n 30098: u64 [s1 + 0x158] = a5\n 30102: u64 [s1 + 0x218] = a5\n 30106: u64 [s1 + 568] = 0\n 30110: u64 [s1 + 560] = 0\n 30114: u64 [s1 + 552] = 0\n 30118: u64 [s1 + 544] = 0\n 30122: u32 [s1 + 576] = 0x20\n 30127: i32 a1 = s1 + 0x200\n 30131: i32 a3 = s1 + 0x220\n 30135: i32 a4 = s1 + 0x240\n 30139: a2 = 0xffffffffffffffff\n 30142: a0 = 0\n 30144: ecalli 5 // 'get_storage'\n 30146: fallthrough\n      : @370 (gas: 30)\n 30147: a1 = u64 [s1 + 0xf8]\n 30151: a0 = u64 [s1 + 0x168]\n 30155: a0 = a0 + a1\n 30158: a1 = a0 <u a1\n 30161: a4 = u64 [s1 + 0xf0]\n 30165: a2 = u64 [s1 + 0x160]\n 30169: a2 = a2 + a4\n 30172: a2 = a2 + a1\n 30175: a3 = a2 ^ a4\n 30178: a4 = a2 <u a4\n 30181: a4 = a1 if a3 == 0\n 30184: a3 = u64 [s1 + 0xe8]\n 30188: a1 = u64 [s1 + 0x170]\n 30192: a1 = a1 + a3\n 30195: t0 = a1 <u a3\n 30198: a5 = u64 [s1 + 0x178]\n 30202: a3 = u64 [s1 + 0xe0]\n 30206: a5 = a5 + a3\n 30209: a3 = a5 + t0\n 30212: a4 = a4 + a1\n 30215: a1 = a4 <u a1\n 30218: a1 = a1 + a3\n 30221: a1 = a1 | a2\n 30224: a2 = a0 | a4\n 30227: a2 = a2 | a1\n 30230: a1 = a1 | a4\n 30233: a2 = a2 >> 0x20\n 30236: a1 = a1 << 0x20\n 30239: a1 = a1 | a2\n 30242: jump @377 if a1 != 0\n      : @371 (gas: 11)\n 30246: a1 = u64 [s1 + 0x238]\n 30250: u64 [s1 + 0x130] = a1\n 30254: a1 = u64 [s1 + 0x230]\n 30258: u64 [s1 + 0x138] = a1\n 30262: a1 = u64 [s1 + 0x228]\n 30266: u64 [s1 + 0x128] = a1\n 30270: a1 = u64 [s1 + 0x220]\n 30274: u64 [s1 + 0x120] = a1\n 30278: i32 a0 = a0 + 0\n 30280: a1 = 0x20\n 30283: ra = 288, jump @0\n      : @372 [@dyn 144] (gas: 114)\n 30289: a1 = u64 [s1 + 0x120]\n 30293: a1 = reverse a1\n 30295: a2 = a1 >> 0x38\n 30298: u8 [a0 + 0x1f] = a2\n 30301: a2 = a1 >> 0x30\n 30304: u8 [a0 + 0x1e] = a2\n 30307: a2 = a1 >> 0x28\n 30310: u8 [a0 + 0x1d] = a2\n 30313: a2 = a1 >> 0x20\n 30316: u8 [a0 + 0x1c] = a2\n 30319: a2 = a1 >> 0x18\n 30322: u8 [a0 + 0x1b] = a2\n 30325: a2 = a1 >> 0x10\n 30328: u8 [a0 + 0x1a] = a2\n 30331: a2 = a1 >> 0x8\n 30334: u8 [a0 + 0x19] = a2\n 30337: a2 = u64 [s1 + 0x128]\n 30341: a2 = reverse a2\n 30343: u8 [a0 + 0x18] = a1\n 30346: a1 = a2 >> 0x38\n 30349: u8 [a0 + 0x17] = a1\n 30352: a1 = a2 >> 0x30\n 30355: u8 [a0 + 0x16] = a1\n 30358: a1 = a2 >> 0x28\n 30361: u8 [a0 + 0x15] = a1\n 30364: a1 = a2 >> 0x20\n 30367: u8 [a0 + 0x14] = a1\n 30370: a1 = a2 >> 0x18\n 30373: u8 [a0 + 0x13] = a1\n 30376: a1 = a2 >> 0x10\n 30379: u8 [a0 + 0x12] = a1\n 30382: a1 = u64 [s1 + 0x130]\n 30386: a1 = reverse a1\n 30388: a3 = u64 [s1 + 0x138]\n 30392: a3 = reverse a3\n 30394: u8 [a0 + 0x10] = a2\n 30397: a2 = a2 >> 0x8\n 30400: u8 [a0 + 0x11] = a2\n 30403: u8 [a0 + 0x8] = a3\n 30406: a2 = a3 >> 0x38\n 30409: u8 [a0 + 0xf] = a2\n 30412: a2 = a3 >> 0x30\n 30415: u8 [a0 + 0xe] = a2\n 30418: a2 = a3 >> 0x28\n 30421: u8 [a0 + 0xd] = a2\n 30424: a2 = a3 >> 0x20\n 30427: u8 [a0 + 0xc] = a2\n 30430: a2 = a3 >> 0x18\n 30433: u8 [a0 + 0xb] = a2\n 30436: a2 = a3 >> 0x10\n 30439: u8 [a0 + 0xa] = a2\n 30442: a3 = a3 >> 0x8\n 30445: u8 [a0 + 0x9] = a3\n 30448: u8 [a0] = a1\n 30450: a2 = a1 >> 0x38\n 30453: u8 [a0 + 0x7] = a2\n 30456: a2 = a1 >> 0x30\n 30459: u8 [a0 + 0x6] = a2\n 30462: a2 = a1 >> 0x28\n 30465: u8 [a0 + 0x5] = a2\n 30468: a2 = a1 >> 0x20\n 30471: u8 [a0 + 0x4] = a2\n 30474: a2 = a1 >> 0x18\n 30477: u8 [a0 + 0x3] = a2\n 30480: a2 = a1 >> 0x10\n 30483: u8 [a0 + 0x2] = a2\n 30486: a1 = a1 >> 0x8\n 30489: u8 [a0 + 0x1] = a1\n 30492: t2 = u64 [s1 + 0x148]\n 30496: t2 = t2 + 0x1\n 30499: a0 = t2 <u 0x1\n 30502: a2 = u64 [s1 + 0x150]\n 30506: a2 = a2 + a0\n 30509: a0 = u64 [s1 + 0x168]\n 30513: ra = a0 + 0x20\n 30516: a1 = ra <u a0\n 30519: a0 = u64 [s1 + 0x160]\n 30523: t0 = a0 + a1\n 30526: a3 = t0 <u a0\n 30529: a3 = a1 if a1 == 0\n 30532: a0 = u64 [s1 + 0x170]\n 30536: t1 = a0 + a3\n 30539: a3 = t1 <u a0\n 30542: a4 = u64 [s1 + 0x178]\n 30546: a4 = a4 + a3\n 30549: a0 = u64 [s1 + 0x110]\n 30553: a1 = t1 <u a0\n 30556: u64 [s1 + 0x170] = a1\n 30560: a1 = u64 [s1 + 0x118]\n 30564: a5 = ra <u a1\n 30567: a3 = u64 [s1 + 0x108]\n 30571: a1 = t0 ^ a3\n 30574: a3 = t0 <u a3\n 30577: a3 = a5 if a1 == 0\n 30580: a5 = u64 [s1 + 0x100]\n 30584: a1 = a4 ^ a5\n 30587: u64 [s1 + 0x178] = a4\n 30591: a5 = a4 <u a5\n 30594: a4 = u64 [s1 + 0x170]\n 30598: a5 = a4 if a1 == 0\n 30601: a4 = t1 ^ a0\n 30604: a1 = a1 | a4\n 30607: a4 = t2 | a2\n 30610: a4 = a4 <u 0x1\n 30613: a0 = u64 [s1 + 0x140]\n 30617: a4 = a4 + a0\n 30620: a0 = a4 <u a0\n 30623: a3 = a5 if a1 != 0\n 30626: a5 = u64 [s1 + 0x158]\n 30630: a5 = a5 + a0\n 30633: u64 [s1 + 0x168] = ra\n 30637: u64 [s1 + 0x160] = t0\n 30641: u64 [s1 + 0x170] = t1\n 30645: jump @369 if a3 != 0\n      : @373 (gas: 37)\n 30649: a3 = ra + 0x3f\n 30652: a0 = a3 <u ra\n 30655: a4 = t0 + a0\n 30658: a1 = a4 <u t0\n 30661: a1 = a0 if a0 == 0\n 30664: a1 = a1 + t1\n 30667: a0 = a1 <u t1\n 30670: a2 = u64 [s1 + 0x178]\n 30674: a0 = a0 + a2\n 30677: a3 = a3 & 0xffffffffffffffe0\n 30680: t1 = u64 [s1 + 0xc0]\n 30684: a2 = a3 + t1\n 30687: u64 [s1 + 0x170] = a2\n 30691: a2 = a2 <u a3\n 30694: t0 = u64 [s1 + 0xc8]\n 30698: a3 = a4 + t0\n 30701: a3 = a3 + a2\n 30704: a5 = a3 ^ a4\n 30707: a4 = a3 <u a4\n 30710: a4 = a2 if a5 == 0\n 30713: t2 = u64 [s1 + 0xd8]\n 30717: a2 = a1 + t2\n 30720: a4 = a4 + a2\n 30723: a5 = a4 <u a2\n 30726: a1 = a2 <u a1\n 30729: ra = u64 [s1 + 0xd0]\n 30733: a0 = a0 + ra\n 30736: a0 = a0 + a1\n 30739: a5 = a5 + a0\n 30742: a0 = a5 >u 0\n 30744: a1 = a4 >u 0\n 30746: a1 = a0 if a5 != 0\n 30749: a0 = a4 | a5\n 30752: u64 [s1 + 0x178] = a3\n 30756: a2 = a3 >u 0\n 30758: a2 = a1 if a0 != 0\n 30761: jump @378 if a2 != 0\n      : @374 (gas: 14)\n 30765: a0 = u64 [s1 + 0x170]\n 30769: a0 = a0 <u t1\n 30772: a2 = u64 [s1 + 0x178]\n 30776: a1 = a2 ^ t0\n 30779: a2 = a2 <u t0\n 30782: a2 = a0 if a1 == 0\n 30785: a0 = a4 <u t2\n 30788: a1 = a5 ^ ra\n 30791: a3 = a5 <u ra\n 30794: a3 = a0 if a1 == 0\n 30797: a0 = a4 ^ t2\n 30800: a0 = a0 | a1\n 30803: a3 = a2 if a0 == 0\n 30806: jump @378 if a3 != 0\n      : @375 (gas: 5)\n 30810: a0 = 0x40\n 30813: a1 = 0x20\n 30816: u64 [s1 + 0x168] = a5\n 30820: u64 [s1 + 0x160] = a4\n 30824: ra = 290, jump @0\n      : @376 [@dyn 145] (gas: 83)\n 30830: a1 = u64 [s1 + 0x170]\n 30834: a1 = reverse a1\n 30836: a2 = a1 >> 0x38\n 30839: u8 [a0 + 0x1f] = a2\n 30842: a2 = a1 >> 0x30\n 30845: u8 [a0 + 0x1e] = a2\n 30848: a2 = a1 >> 0x28\n 30851: u8 [a0 + 0x1d] = a2\n 30854: a2 = a1 >> 0x20\n 30857: u8 [a0 + 0x1c] = a2\n 30860: a2 = a1 >> 0x18\n 30863: u8 [a0 + 0x1b] = a2\n 30866: a2 = a1 >> 0x10\n 30869: u8 [a0 + 0x1a] = a2\n 30872: a2 = u64 [s1 + 0x178]\n 30876: a2 = reverse a2\n 30878: u8 [a0 + 0x18] = a1\n 30881: a1 = a1 >> 0x8\n 30884: u8 [a0 + 0x19] = a1\n 30887: a1 = a2 >> 0x38\n 30890: u8 [a0 + 0x17] = a1\n 30893: a1 = a2 >> 0x30\n 30896: u8 [a0 + 0x16] = a1\n 30899: a1 = a2 >> 0x28\n 30902: u8 [a0 + 0x15] = a1\n 30905: a1 = a2 >> 0x20\n 30908: u8 [a0 + 0x14] = a1\n 30911: a1 = a2 >> 0x18\n 30914: u8 [a0 + 0x13] = a1\n 30917: a1 = a2 >> 0x10\n 30920: u8 [a0 + 0x12] = a1\n 30923: a1 = u64 [s1 + 0x160]\n 30927: a1 = reverse a1\n 30929: u8 [a0 + 0x10] = a2\n 30932: a2 = a2 >> 0x8\n 30935: u8 [a0 + 0x11] = a2\n 30938: a2 = a1 >> 0x38\n 30941: u8 [a0 + 0xf] = a2\n 30944: a2 = a1 >> 0x30\n 30947: u8 [a0 + 0xe] = a2\n 30950: a2 = a1 >> 0x28\n 30953: u8 [a0 + 0xd] = a2\n 30956: a2 = a1 >> 0x20\n 30959: u8 [a0 + 0xc] = a2\n 30962: a2 = a1 >> 0x18\n 30965: u8 [a0 + 0xb] = a2\n 30968: a2 = a1 >> 0x10\n 30971: u8 [a0 + 0xa] = a2\n 30974: a2 = u64 [s1 + 0x168]\n 30978: a2 = reverse a2\n 30980: u8 [a0 + 0x8] = a1\n 30983: a1 = a1 >> 0x8\n 30986: u8 [a0 + 0x9] = a1\n 30989: a1 = a2 >> 0x38\n 30992: u8 [a0 + 0x7] = a1\n 30995: a1 = a2 >> 0x30\n 30998: u8 [a0 + 0x6] = a1\n 31001: a1 = a2 >> 0x28\n 31004: u8 [a0 + 0x5] = a1\n 31007: a1 = a2 >> 0x20\n 31010: u8 [a0 + 0x4] = a1\n 31013: a1 = a2 >> 0x18\n 31016: u8 [a0 + 0x3] = a1\n 31019: a1 = a2 >> 0x10\n 31022: u8 [a0 + 0x2] = a1\n 31025: u8 [a0] = a2\n 31027: a2 = a2 >> 0x8\n 31030: u8 [a0 + 0x1] = a2\n 31033: a0 = u64 [s1 + 0x10]\n 31036: a1 = u64 [s1 + 0xc0]\n 31040: u64 [a0] = a1\n 31042: a1 = u64 [s1 + 0xd0]\n 31046: u64 [a0 + 0x18] = a1\n 31049: a1 = u64 [s1 + 0xc8]\n 31053: u64 [a0 + 0x8] = a1\n 31056: a1 = u64 [s1 + 0xd8]\n 31060: u64 [a0 + 0x10] = a1\n 31063: sp = s0 + 0xfffffffffffffda0\n 31067: ra = u64 [sp + 0x258]\n 31071: s0 = u64 [sp + 0x250]\n 31075: s1 = u64 [sp + 0x248]\n 31079: sp = sp + 0x260\n 31083: ret\n      : @377 (gas: 1)\n 31085: trap\n      : @378 (gas: 8)\n 31086: u64 [s1 + 496] = 0\n 31090: u64 [s1 + 488] = 0\n 31094: u64 [s1 + 480] = 0\n 31098: a0 = 0x4e487b7100000000\n 31108: a1 = s1 + 0x1e0\n 31112: u64 [s1 + 0x1f8] = a0\n 31116: a0 = 0\n 31118: ra = 292, jump @23\n      : @379 [@dyn 146] (gas: 8)\n 31124: u64 [s1 + 472] = 0\n 31128: u64 [s1 + 464] = 0\n 31132: u64 [s1 + 448] = 0x41\n 31137: a0 = 0x4\n 31140: a1 = s1 + 0x1c0\n 31144: u64 [s1 + 456] = 0\n 31148: ra = 0x128\n 31152: jump @23\n      : @380 (gas: 8)\n 31155: u64 [s1 + 432] = 0\n 31159: u64 [s1 + 424] = 0\n 31163: u64 [s1 + 416] = 0\n 31167: a0 = 0x4e487b7100000000\n 31177: a1 = s1 + 0x1a0\n 31181: u64 [s1 + 0x1b8] = a0\n 31185: a0 = 0\n 31187: ra = 294, jump @23\n      : @381 [@dyn 147] (gas: 7)\n 31193: u64 [s1 + 408] = 0\n 31197: u64 [s1 + 400] = 0\n 31201: u64 [s1 + 384] = 0x22\n 31206: a0 = 0x4\n 31209: a1 = s1 + 0x180\n 31213: u64 [s1 + 392] = 0\n 31217: ra = 296, jump @23\n      : @382 [@dyn 148] (gas: 3)\n 31223: a1 = 0x24\n 31226: a0 = 0\n 31228: ra = 298, jump @0\n      : @383 [@dyn 149] (gas: 7)\n 31234: i32 a1 = a0 + 0\n 31236: a0 = 0x1\n 31239: a2 = 0x24\n 31242: ecalli 7 // 'seal_return'\n 31244: a0 = 0\n 31246: ra = 0x12c\n 31250: jump @27\n      : @384 [export #0: 'call'] (gas: 2)\n 31253: a0 = 0\n 31255: ra = 300, jump @27\n      : @385 [@dyn 150] [export #1: 'deploy'] (gas: 2)\n 31261: a0 = 0x1\n 31264: ra = 302, jump @27\n      : @386 [@dyn 151] (gas: 1)\n 31270: trap\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"getPriceByIndex(uint256)": "112aae8c",
							"priceCount()": "be38093d",
							"priceExists(bytes32)": "404a6f10",
							"prices(uint256)": "bc31c1c1",
							"submitPrice(string,uint256,uint256)": "01c5bf89"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/test.sol\"\nobject \"CafeIndex_128\" {\n    code {\n        {\n            /// @src 0:57:1606  \"contract CafeIndex {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"CafeIndex_128_deployed\")\n            codecopy(_1, dataoffset(\"CafeIndex_128_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/test.sol\"\n    object \"CafeIndex_128_deployed\" {\n        code {\n            {\n                /// @src 0:57:1606  \"contract CafeIndex {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01c5bf89 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        finalize_allocation(_1, add(and(add(length, 0x1f), not(31)), 0x20))\n                        mstore(_1, length)\n                        let dst := add(_1, 0x20)\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(dst, add(offset, 36), length)\n                        mstore(add(add(_1, length), 0x20), 0)\n                        let value := calldataload(36)\n                        let value_1 := calldataload(68)\n                        /// @src 0:814:834  \"abi.encodePacked(id)\"\n                        let expr_mpos := /** @src 0:57:1606  \"contract CafeIndex {...\" */ mload(64)\n                        /// @src 0:814:834  \"abi.encodePacked(id)\"\n                        let _2 := add(expr_mpos, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 0x20)\n                        let length_1 := mload(_1)\n                        mcopy(_2, dst, length_1)\n                        let _3 := add(/** @src 0:814:834  \"abi.encodePacked(id)\" */ expr_mpos, /** @src 0:57:1606  \"contract CafeIndex {...\" */ length_1)\n                        mstore(add(_3, 0x20), 0)\n                        /// @src 0:814:834  \"abi.encodePacked(id)\"\n                        let _4 := add(sub(/** @src 0:57:1606  \"contract CafeIndex {...\" */ _3, /** @src 0:814:834  \"abi.encodePacked(id)\" */ expr_mpos), /** @src 0:57:1606  \"contract CafeIndex {...\" */ 0x20)\n                        /// @src 0:814:834  \"abi.encodePacked(id)\"\n                        mstore(expr_mpos, add(_4, /** @src 0:57:1606  \"contract CafeIndex {...\" */ not(31)))\n                        /// @src 0:814:834  \"abi.encodePacked(id)\"\n                        finalize_allocation(expr_mpos, _4)\n                        /// @src 0:804:835  \"keccak256(abi.encodePacked(id))\"\n                        let expr := keccak256(/** @src 0:57:1606  \"contract CafeIndex {...\" */ _2, mload(/** @src 0:804:835  \"keccak256(abi.encodePacked(id))\" */ expr_mpos))\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        mstore(0, expr)\n                        mstore(0x20, 1)\n                        if iszero(/** @src 0:853:873  \"!priceExists[idHash]\" */ iszero(/** @src 0:57:1606  \"contract CafeIndex {...\" */ and(sload(keccak256(0, 64)), 0xff)))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 0x20)\n                            mstore(add(memPtr, 36), 12)\n                            mstore(add(memPtr, 68), \"ID ya existe\")\n                            revert(memPtr, 100)\n                        }\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_5363(memPtr_1)\n                        mstore(memPtr_1, _1)\n                        /// @src 0:922:1058  \"PriceData({...\"\n                        let _5 := add(memPtr_1, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 0x20)\n                        mstore(_5, value)\n                        /// @src 0:922:1058  \"PriceData({...\"\n                        let _6 := add(memPtr_1, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 64)\n                        mstore(_6, value_1)\n                        /// @src 0:922:1058  \"PriceData({...\"\n                        let _7 := add(memPtr_1, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 96)\n                        mstore(_7, /** @src 0:1037:1047  \"msg.sender\" */ caller())\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        mstore(0, sload(/** @src 0:908:918  \"priceCount\" */ 0x02))\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        mstore(0x20, 0)\n                        let dataSlot := keccak256(0, 64)\n                        let _8 := mload(memPtr_1)\n                        let newLen := mload(_8)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _9 := extract_byte_array_length(sload(dataSlot))\n                        if gt(_9, 0x1f)\n                        {\n                            mstore(0, dataSlot)\n                            let data := keccak256(0, 0x20)\n                            let deleteStart := add(data, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, 0x20) { deleteStart := data }\n                            let _10 := add(data, shr(5, add(_9, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _10) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 0x20\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, dataSlot)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                            {\n                                sstore(dstPtr, mload(add(_8, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 0x20)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_8, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(dataSlot, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_2 := 0\n                            if newLen\n                            {\n                                value_2 := mload(add(_8, srcOffset))\n                            }\n                            sstore(dataSlot, or(and(value_2, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        sstore(add(dataSlot, 1), mload(_5))\n                        sstore(add(dataSlot, /** @src 0:908:918  \"priceCount\" */ 0x02), /** @src 0:57:1606  \"contract CafeIndex {...\" */ mload(_6))\n                        let memberSlot := add(dataSlot, 3)\n                        sstore(memberSlot, or(and(sload(memberSlot), shl(160, 0xffffffffffffffffffffffff)), and(mload(_7), sub(shl(160, 1), 1))))\n                        mstore(0, expr)\n                        mstore(0x20, 1)\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(dataSlot_1, or(and(sload(dataSlot_1), not(255)), 1))\n                        /// @src 0:1110:1158  \"PriceSubmitted(id, timestamp, price, msg.sender)\"\n                        let _11 := /** @src 0:57:1606  \"contract CafeIndex {...\" */ mload(64)\n                        mstore(_11, 96)\n                        let tail := abi_encode_string(_1, add(_11, 96))\n                        mstore(add(_11, 0x20), value)\n                        mstore(add(_11, 64), value_1)\n                        /// @src 0:1110:1158  \"PriceSubmitted(id, timestamp, price, msg.sender)\"\n                        log2(_11, sub(tail, _11), 0x09441c66d134d6c668aabde24b6439c26aceef14142ef9b18bc603cac7d105b3, /** @src 0:1037:1047  \"msg.sender\" */ caller())\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        let _12 := sload(/** @src 0:908:918  \"priceCount\" */ 0x02)\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        if eq(_12, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 0:908:918  \"priceCount\" */ 0x02, /** @src 0:57:1606  \"contract CafeIndex {...\" */ add(_12, 1))\n                        return(0, 0)\n                    }\n                    case 0x112aae8c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        if iszero(/** @src 0:1439:1457  \"index < priceCount\" */ lt(value_3, /** @src 0:57:1606  \"contract CafeIndex {...\" */ sload(/** @src 0:1447:1457  \"priceCount\" */ 0x02)))\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 18)\n                            mstore(add(memPtr_2, 68), \"Index out of range\")\n                            revert(memPtr_2, 100)\n                        }\n                        mstore(0, value_3)\n                        mstore(32, 0)\n                        let dataSlot_2 := keccak256(0, 64)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_5363(memPtr_3)\n                        let _13 := copy_array_from_storage_to_memory_string(dataSlot_2)\n                        mstore(memPtr_3, _13)\n                        let _14 := sload(add(dataSlot_2, 1))\n                        mstore(add(memPtr_3, 32), _14)\n                        let _15 := sload(add(dataSlot_2, /** @src 0:1447:1457  \"priceCount\" */ 0x02))\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        mstore(add(memPtr_3, 64), _15)\n                        let cleaned := and(sload(add(dataSlot_2, 3)), sub(shl(160, 1), 1))\n                        mstore(add(memPtr_3, 96), cleaned)\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string_uint256_uint256_address(memPos, _13, _14, _15, cleaned), memPos))\n                    }\n                    case 0x404a6f10 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 1)\n                        let value_4 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(value_4)))\n                        return(memPos_1, 32)\n                    }\n                    case 0xbc31c1c1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 0:283:326  \"mapping(uint256 => PriceData) public prices\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(dataSlot_3)\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        let _16 := sload(/** @src 0:283:326  \"mapping(uint256 => PriceData) public prices\" */ add(dataSlot_3, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 1))\n                        let _17 := sload(/** @src 0:283:326  \"mapping(uint256 => PriceData) public prices\" */ add(dataSlot_3, 2))\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        let cleaned_1 := and(sload(/** @src 0:283:326  \"mapping(uint256 => PriceData) public prices\" */ add(dataSlot_3, 3)), /** @src 0:57:1606  \"contract CafeIndex {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_string_uint256_uint256_address(memPos_2, ret_mpos, _16, _17, cleaned_1), memPos_2))\n                    }\n                    case 0xbe38093d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _18 := sload(/** @src 0:381:406  \"uint256 public priceCount\" */ 2)\n                        /// @src 0:57:1606  \"contract CafeIndex {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _18)\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_5363(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:1606  \"contract CafeIndex {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:1606  \"contract CafeIndex {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:57:1606  \"contract CafeIndex {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string_uint256_uint256_address(headStart, value0, value1, value2, value3) -> tail\n            {\n                mstore(headStart, 128)\n                tail := abi_encode_string(value0, add(headStart, 128))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:57:1606  \"contract CafeIndex {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:1606  \"contract CafeIndex {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:1606  \"contract CafeIndex {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:57:1606  \"contract CafeIndex {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209536745fff4f56953941946928e9aa880ea4bcd852ee25ed2470f3374fa4dad864736f6c634300081c0033\"\n    }\n}\n",
					"hash": "69ced657a38b7c291fe847e62a347b419e79f8650eceef571b539a34ac36dcdb",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/test.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/test.sol",
					"exportedSymbols": {
						"CafeIndex": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CafeIndex",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "CafeIndex",
							"nameLocation": "66:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CafeIndex.PriceData",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "116:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "109:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "109:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "136:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "128:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "128:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "163:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "155:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "155:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "submitter",
											"nameLocation": "202:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "194:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "194:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceData",
									"nameLocation": "89:9:0",
									"nodeType": "StructDefinition",
									"scope": 128,
									"src": "82:136:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bc31c1c1",
									"id": 15,
									"mutability": "mutable",
									"name": "prices",
									"nameLocation": "320:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "283:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceData_$10_storage_$",
										"typeString": "mapping(uint256 => struct CafeIndex.PriceData)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 11,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "291:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "283:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceData_$10_storage_$",
											"typeString": "mapping(uint256 => struct CafeIndex.PriceData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "PriceData",
												"nameLocations": [
													"302:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "302:9:0"
											},
											"referencedDeclaration": 10,
											"src": "302:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PriceData_$10_storage_ptr",
												"typeString": "struct CafeIndex.PriceData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "404a6f10",
									"id": 19,
									"mutability": "mutable",
									"name": "priceExists",
									"nameLocation": "364:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "332:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 18,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "340:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "332:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 17,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "351:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be38093d",
									"id": 21,
									"mutability": "mutable",
									"name": "priceCount",
									"nameLocation": "396:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "381:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "09441c66d134d6c668aabde24b6439c26aceef14142ef9b18bc603cac7d105b3",
									"id": 31,
									"name": "PriceSubmitted",
									"nameLocation": "419:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "434:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "453:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "445:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "472:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "464:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "submitter",
												"nameLocation": "495:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "479:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:72:0"
									},
									"src": "413:93:0"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "777:410:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "idHash",
														"nameLocation": "795:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "787:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 41,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 46,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "831:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 44,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "818:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "814:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "814:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 43,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "804:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "804:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "787:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "853:20:0",
															"subExpression": {
																"baseExpression": {
																	"id": 51,
																	"name": "priceExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "854:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 53,
																"indexExpression": {
																	"id": 52,
																	"name": "idHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "866:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "854:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494420796120657869737465",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "875:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1c25b7b27e90391ab39ef208b0945bfeab11b57c45699160f0b9f140c2ddce5",
																"typeString": "literal_string \"ID ya existe\""
															},
															"value": "ID ya existe"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1c25b7b27e90391ab39ef208b0945bfeab11b57c45699160f0b9f140c2ddce5",
																"typeString": "literal_string \"ID ya existe\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "845:45:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 58,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceData_$10_storage_$",
																"typeString": "mapping(uint256 => struct CafeIndex.PriceData storage ref)"
															}
														},
														"id": 60,
														"indexExpression": {
															"id": 59,
															"name": "priceCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "908:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "901:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$10_storage",
															"typeString": "struct CafeIndex.PriceData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 62,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "950:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 63,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "977:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 64,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1007:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 65,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1037:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1041:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1037:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 61,
															"name": "PriceData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "922:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PriceData_$10_storage_ptr_$",
																"typeString": "type(struct CafeIndex.PriceData storage pointer)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"946:2:0",
															"966:9:0",
															"1000:5:0",
															"1026:9:0"
														],
														"names": [
															"id",
															"timestamp",
															"price",
															"submitter"
														],
														"nodeType": "FunctionCall",
														"src": "922:136:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$10_memory_ptr",
															"typeString": "struct CafeIndex.PriceData memory"
														}
													},
													"src": "901:157:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceData_$10_storage",
														"typeString": "struct CafeIndex.PriceData storage ref"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "901:157:0"
											},
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 70,
															"name": "priceExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1069:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 72,
														"indexExpression": {
															"id": 71,
															"name": "idHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1069:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1091:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1069:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1069:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 77,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1125:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 78,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1129:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 79,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "1140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 80,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1147:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1151:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1147:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "PriceSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1110:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (string memory,uint256,uint256,address)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "EmitStatement",
												"src": "1105:53:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1168:12:0",
													"subExpression": {
														"id": 84,
														"name": "priceCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1168:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1168:12:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "512:180:0",
										"text": " @dev Envía un nuevo precio de café\n @param id Identificador único\n @param timestamp Marca de tiempo (epoch)\n @param price Precio en centavos"
									},
									"functionSelector": "01c5bf89",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submitPrice",
									"nameLocation": "706:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "732:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "718:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "718:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "744:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "736:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "763:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "755:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:52:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "777:0:0"
									},
									"scope": 128,
									"src": "697:490:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1421:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1439:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 104,
																"name": "priceCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1447:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1439:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f662072616e6765",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1459:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
																"typeString": "literal_string \"Index out of range\""
															},
															"value": "Index out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
																"typeString": "literal_string \"Index out of range\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1431:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1431:49:0"
											},
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1507:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "1490:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$10_memory_ptr",
															"typeString": "struct CafeIndex.PriceData"
														},
														"typeName": {
															"id": 110,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 109,
																"name": "PriceData",
																"nameLocations": [
																	"1490:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "1490:9:0"
															},
															"referencedDeclaration": 10,
															"src": "1490:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceData_$10_storage_ptr",
																"typeString": "struct CafeIndex.PriceData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"baseExpression": {
														"id": 112,
														"name": "prices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1514:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceData_$10_storage_$",
															"typeString": "mapping(uint256 => struct CafeIndex.PriceData storage ref)"
														}
													},
													"id": 114,
													"indexExpression": {
														"id": 113,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1521:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1514:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceData_$10_storage",
														"typeString": "struct CafeIndex.PriceData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1490:37:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 116,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1545:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceData_$10_memory_ptr",
																	"typeString": "struct CafeIndex.PriceData memory"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1550:2:0",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "1545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 118,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1554:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceData_$10_memory_ptr",
																	"typeString": "struct CafeIndex.PriceData memory"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1559:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "1554:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 120,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1570:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceData_$10_memory_ptr",
																	"typeString": "struct CafeIndex.PriceData memory"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1575:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "1570:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 122,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1582:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceData_$10_memory_ptr",
																	"typeString": "struct CafeIndex.PriceData memory"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1587:9:0",
															"memberName": "submitter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "1582:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 124,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1544:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$",
														"typeString": "tuple(string memory,uint256,uint256,address)"
													}
												},
												"functionReturnParameters": 101,
												"id": 125,
												"nodeType": "Return",
												"src": "1537:60:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1193:53:0",
										"text": " @dev Obtiene un precio por índice"
									},
									"functionSelector": "112aae8c",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceByIndex",
									"nameLocation": "1260:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1284:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1276:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1335:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1321:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1355:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1347:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1382:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1374:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "submitter",
												"nameLocation": "1405:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1397:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:109:0"
									},
									"scope": 128,
									"src": "1251:353:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 129,
							"src": "57:1549:0",
							"usedErrors": [],
							"usedEvents": [
								31
							]
						}
					],
					"src": "32:1574:0"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}