services:
  postgres:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node:
    image: subquerynetwork/subql-node-substrate:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./:/app
    command:
      - "${SUB_COMMAND:-}"         # puede quedar vac√≠o
      - "--endpoint=${ENDPOINT}"
      - "-f=/app"
      - "--db-schema=${DB_DATABASE}"
      - "--workers=4"
      - "--batch-size=30"
      - "--unfinalized-blocks=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: subquerynetwork/subql-query:latest
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      subquery-node:
        condition: service_healthy
    restart: always
    command:
      - "--name=${DB_DATABASE}"
      - "--playground"
      - "--indexer=http://subquery-node:3000"
